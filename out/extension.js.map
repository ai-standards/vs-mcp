{"version":3,"file":"extension.js","sources":["../node_modules/openai/internal/tslib.mjs","../node_modules/openai/internal/utils/uuid.mjs","../node_modules/openai/internal/errors.mjs","../node_modules/openai/core/error.mjs","../node_modules/openai/internal/utils/values.mjs","../node_modules/openai/internal/utils/sleep.mjs","../node_modules/openai/version.mjs","../node_modules/openai/internal/detect-platform.mjs","../node_modules/openai/internal/shims.mjs","../node_modules/openai/internal/request-options.mjs","../node_modules/openai/internal/qs/formats.mjs","../node_modules/openai/internal/qs/utils.mjs","../node_modules/openai/internal/qs/stringify.mjs","../node_modules/openai/internal/utils/bytes.mjs","../node_modules/openai/internal/decoders/line.mjs","../node_modules/openai/internal/utils/log.mjs","../node_modules/openai/core/streaming.mjs","../node_modules/openai/internal/parse.mjs","../node_modules/openai/core/api-promise.mjs","../node_modules/openai/core/pagination.mjs","../node_modules/openai/internal/uploads.mjs","../node_modules/openai/internal/to-file.mjs","../node_modules/openai/core/resource.mjs","../node_modules/openai/internal/utils/path.mjs","../node_modules/openai/resources/chat/completions/messages.mjs","../node_modules/openai/lib/parser.mjs","../node_modules/openai/lib/chatCompletionUtils.mjs","../node_modules/openai/lib/EventStream.mjs","../node_modules/openai/lib/RunnableFunction.mjs","../node_modules/openai/lib/AbstractChatCompletionRunner.mjs","../node_modules/openai/lib/ChatCompletionRunner.mjs","../node_modules/openai/_vendor/partial-json-parser/parser.mjs","../node_modules/openai/lib/ChatCompletionStream.mjs","../node_modules/openai/lib/ChatCompletionStreamingRunner.mjs","../node_modules/openai/resources/chat/completions/completions.mjs","../node_modules/openai/resources/chat/chat.mjs","../node_modules/openai/internal/headers.mjs","../node_modules/openai/resources/audio/speech.mjs","../node_modules/openai/resources/audio/transcriptions.mjs","../node_modules/openai/resources/audio/translations.mjs","../node_modules/openai/resources/audio/audio.mjs","../node_modules/openai/resources/batches.mjs","../node_modules/openai/resources/beta/assistants.mjs","../node_modules/openai/resources/beta/realtime/sessions.mjs","../node_modules/openai/resources/beta/realtime/transcription-sessions.mjs","../node_modules/openai/resources/beta/realtime/realtime.mjs","../node_modules/openai/resources/beta/threads/messages.mjs","../node_modules/openai/resources/beta/threads/runs/steps.mjs","../node_modules/openai/internal/utils/base64.mjs","../node_modules/openai/internal/utils/env.mjs","../node_modules/openai/lib/AssistantStream.mjs","../node_modules/openai/resources/beta/threads/runs/runs.mjs","../node_modules/openai/resources/beta/threads/threads.mjs","../node_modules/openai/resources/beta/beta.mjs","../node_modules/openai/resources/completions.mjs","../node_modules/openai/resources/containers/files/content.mjs","../node_modules/openai/resources/containers/files/files.mjs","../node_modules/openai/resources/containers/containers.mjs","../node_modules/openai/resources/conversations/items.mjs","../node_modules/openai/resources/conversations/conversations.mjs","../node_modules/openai/resources/embeddings.mjs","../node_modules/openai/resources/evals/runs/output-items.mjs","../node_modules/openai/resources/evals/runs/runs.mjs","../node_modules/openai/resources/evals/evals.mjs","../node_modules/openai/resources/files.mjs","../node_modules/openai/resources/fine-tuning/methods.mjs","../node_modules/openai/resources/fine-tuning/alpha/graders.mjs","../node_modules/openai/resources/fine-tuning/alpha/alpha.mjs","../node_modules/openai/resources/fine-tuning/checkpoints/permissions.mjs","../node_modules/openai/resources/fine-tuning/checkpoints/checkpoints.mjs","../node_modules/openai/resources/fine-tuning/jobs/checkpoints.mjs","../node_modules/openai/resources/fine-tuning/jobs/jobs.mjs","../node_modules/openai/resources/fine-tuning/fine-tuning.mjs","../node_modules/openai/resources/graders/grader-models.mjs","../node_modules/openai/resources/graders/graders.mjs","../node_modules/openai/resources/images.mjs","../node_modules/openai/resources/models.mjs","../node_modules/openai/resources/moderations.mjs","../node_modules/openai/resources/realtime/client-secrets.mjs","../node_modules/openai/resources/realtime/realtime.mjs","../node_modules/openai/lib/ResponsesParser.mjs","../node_modules/openai/lib/responses/ResponseStream.mjs","../node_modules/openai/resources/responses/input-items.mjs","../node_modules/openai/resources/responses/responses.mjs","../node_modules/openai/resources/uploads/parts.mjs","../node_modules/openai/resources/uploads/uploads.mjs","../node_modules/openai/lib/Util.mjs","../node_modules/openai/resources/vector-stores/file-batches.mjs","../node_modules/openai/resources/vector-stores/files.mjs","../node_modules/openai/resources/vector-stores/vector-stores.mjs","../node_modules/openai/resources/webhooks.mjs","../node_modules/openai/client.mjs","../src/lib/mcp/compose.ts","../src/lib/mcp/client.ts","../src/lib/mcp/servers/ai-server.ts","../src/lib/mcp/servers/editor-server.ts","../src/lib/mcp/servers/fs-server.ts","../src/lib/mcp/servers/ui-server.ts","../src/extension.ts"],"sourcesContent":["function __classPrivateFieldSet(receiver, state, value, kind, f) {\n    if (kind === \"m\")\n        throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f)\n        throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver))\n        throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return kind === \"a\" ? f.call(receiver, value) : f ? (f.value = value) : state.set(receiver, value), value;\n}\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\n    if (kind === \"a\" && !f)\n        throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver))\n        throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\nexport { __classPrivateFieldSet, __classPrivateFieldGet };\n","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n/**\n * https://stackoverflow.com/a/2117523\n */\nexport let uuid4 = function () {\n    const { crypto } = globalThis;\n    if (crypto?.randomUUID) {\n        uuid4 = crypto.randomUUID.bind(crypto);\n        return crypto.randomUUID();\n    }\n    const u8 = new Uint8Array(1);\n    const randomByte = crypto ? () => crypto.getRandomValues(u8)[0] : () => (Math.random() * 0xff) & 0xff;\n    return '10000000-1000-4000-8000-100000000000'.replace(/[018]/g, (c) => (+c ^ (randomByte() & (15 >> (+c / 4)))).toString(16));\n};\n//# sourceMappingURL=uuid.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nexport function isAbortError(err) {\n    return (typeof err === 'object' &&\n        err !== null &&\n        // Spec-compliant fetch implementations\n        (('name' in err && err.name === 'AbortError') ||\n            // Expo fetch\n            ('message' in err && String(err.message).includes('FetchRequestCanceledException'))));\n}\nexport const castToError = (err) => {\n    if (err instanceof Error)\n        return err;\n    if (typeof err === 'object' && err !== null) {\n        try {\n            if (Object.prototype.toString.call(err) === '[object Error]') {\n                // @ts-ignore - not all envs have native support for cause yet\n                const error = new Error(err.message, err.cause ? { cause: err.cause } : {});\n                if (err.stack)\n                    error.stack = err.stack;\n                // @ts-ignore - not all envs have native support for cause yet\n                if (err.cause && !error.cause)\n                    error.cause = err.cause;\n                if (err.name)\n                    error.name = err.name;\n                return error;\n            }\n        }\n        catch { }\n        try {\n            return new Error(JSON.stringify(err));\n        }\n        catch { }\n    }\n    return new Error(err);\n};\n//# sourceMappingURL=errors.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { castToError } from \"../internal/errors.mjs\";\nexport class OpenAIError extends Error {\n}\nexport class APIError extends OpenAIError {\n    constructor(status, error, message, headers) {\n        super(`${APIError.makeMessage(status, error, message)}`);\n        this.status = status;\n        this.headers = headers;\n        this.requestID = headers?.get('x-request-id');\n        this.error = error;\n        const data = error;\n        this.code = data?.['code'];\n        this.param = data?.['param'];\n        this.type = data?.['type'];\n    }\n    static makeMessage(status, error, message) {\n        const msg = error?.message ?\n            typeof error.message === 'string' ?\n                error.message\n                : JSON.stringify(error.message)\n            : error ? JSON.stringify(error)\n                : message;\n        if (status && msg) {\n            return `${status} ${msg}`;\n        }\n        if (status) {\n            return `${status} status code (no body)`;\n        }\n        if (msg) {\n            return msg;\n        }\n        return '(no status code or body)';\n    }\n    static generate(status, errorResponse, message, headers) {\n        if (!status || !headers) {\n            return new APIConnectionError({ message, cause: castToError(errorResponse) });\n        }\n        const error = errorResponse?.['error'];\n        if (status === 400) {\n            return new BadRequestError(status, error, message, headers);\n        }\n        if (status === 401) {\n            return new AuthenticationError(status, error, message, headers);\n        }\n        if (status === 403) {\n            return new PermissionDeniedError(status, error, message, headers);\n        }\n        if (status === 404) {\n            return new NotFoundError(status, error, message, headers);\n        }\n        if (status === 409) {\n            return new ConflictError(status, error, message, headers);\n        }\n        if (status === 422) {\n            return new UnprocessableEntityError(status, error, message, headers);\n        }\n        if (status === 429) {\n            return new RateLimitError(status, error, message, headers);\n        }\n        if (status >= 500) {\n            return new InternalServerError(status, error, message, headers);\n        }\n        return new APIError(status, error, message, headers);\n    }\n}\nexport class APIUserAbortError extends APIError {\n    constructor({ message } = {}) {\n        super(undefined, undefined, message || 'Request was aborted.', undefined);\n    }\n}\nexport class APIConnectionError extends APIError {\n    constructor({ message, cause }) {\n        super(undefined, undefined, message || 'Connection error.', undefined);\n        // in some environments the 'cause' property is already declared\n        // @ts-ignore\n        if (cause)\n            this.cause = cause;\n    }\n}\nexport class APIConnectionTimeoutError extends APIConnectionError {\n    constructor({ message } = {}) {\n        super({ message: message ?? 'Request timed out.' });\n    }\n}\nexport class BadRequestError extends APIError {\n}\nexport class AuthenticationError extends APIError {\n}\nexport class PermissionDeniedError extends APIError {\n}\nexport class NotFoundError extends APIError {\n}\nexport class ConflictError extends APIError {\n}\nexport class UnprocessableEntityError extends APIError {\n}\nexport class RateLimitError extends APIError {\n}\nexport class InternalServerError extends APIError {\n}\nexport class LengthFinishReasonError extends OpenAIError {\n    constructor() {\n        super(`Could not parse response content as the length limit was reached`);\n    }\n}\nexport class ContentFilterFinishReasonError extends OpenAIError {\n    constructor() {\n        super(`Could not parse response content as the request was rejected by the content filter`);\n    }\n}\nexport class InvalidWebhookSignatureError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\n//# sourceMappingURL=error.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { OpenAIError } from \"../../core/error.mjs\";\n// https://url.spec.whatwg.org/#url-scheme-string\nconst startsWithSchemeRegexp = /^[a-z][a-z0-9+.-]*:/i;\nexport const isAbsoluteURL = (url) => {\n    return startsWithSchemeRegexp.test(url);\n};\nexport let isArray = (val) => ((isArray = Array.isArray), isArray(val));\nexport let isReadonlyArray = isArray;\n/** Returns an object if the given value isn't an object, otherwise returns as-is */\nexport function maybeObj(x) {\n    if (typeof x !== 'object') {\n        return {};\n    }\n    return x ?? {};\n}\n// https://stackoverflow.com/a/34491287\nexport function isEmptyObj(obj) {\n    if (!obj)\n        return true;\n    for (const _k in obj)\n        return false;\n    return true;\n}\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nexport function hasOwn(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\nexport function isObj(obj) {\n    return obj != null && typeof obj === 'object' && !Array.isArray(obj);\n}\nexport const ensurePresent = (value) => {\n    if (value == null) {\n        throw new OpenAIError(`Expected a value to be given but received ${value} instead.`);\n    }\n    return value;\n};\nexport const validatePositiveInteger = (name, n) => {\n    if (typeof n !== 'number' || !Number.isInteger(n)) {\n        throw new OpenAIError(`${name} must be an integer`);\n    }\n    if (n < 0) {\n        throw new OpenAIError(`${name} must be a positive integer`);\n    }\n    return n;\n};\nexport const coerceInteger = (value) => {\n    if (typeof value === 'number')\n        return Math.round(value);\n    if (typeof value === 'string')\n        return parseInt(value, 10);\n    throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceFloat = (value) => {\n    if (typeof value === 'number')\n        return value;\n    if (typeof value === 'string')\n        return parseFloat(value);\n    throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceBoolean = (value) => {\n    if (typeof value === 'boolean')\n        return value;\n    if (typeof value === 'string')\n        return value === 'true';\n    return Boolean(value);\n};\nexport const maybeCoerceInteger = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceInteger(value);\n};\nexport const maybeCoerceFloat = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceFloat(value);\n};\nexport const maybeCoerceBoolean = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceBoolean(value);\n};\nexport const safeJSON = (text) => {\n    try {\n        return JSON.parse(text);\n    }\n    catch (err) {\n        return undefined;\n    }\n};\n//# sourceMappingURL=values.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nexport const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n//# sourceMappingURL=sleep.mjs.map","export const VERSION = '5.20.1'; // x-release-please-version\n//# sourceMappingURL=version.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { VERSION } from \"../version.mjs\";\nexport const isRunningInBrowser = () => {\n    return (\n    // @ts-ignore\n    typeof window !== 'undefined' &&\n        // @ts-ignore\n        typeof window.document !== 'undefined' &&\n        // @ts-ignore\n        typeof navigator !== 'undefined');\n};\n/**\n * Note this does not detect 'browser'; for that, use getBrowserInfo().\n */\nfunction getDetectedPlatform() {\n    if (typeof Deno !== 'undefined' && Deno.build != null) {\n        return 'deno';\n    }\n    if (typeof EdgeRuntime !== 'undefined') {\n        return 'edge';\n    }\n    if (Object.prototype.toString.call(typeof globalThis.process !== 'undefined' ? globalThis.process : 0) === '[object process]') {\n        return 'node';\n    }\n    return 'unknown';\n}\nconst getPlatformProperties = () => {\n    const detectedPlatform = getDetectedPlatform();\n    if (detectedPlatform === 'deno') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': normalizePlatform(Deno.build.os),\n            'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n            'X-Stainless-Runtime': 'deno',\n            'X-Stainless-Runtime-Version': typeof Deno.version === 'string' ? Deno.version : Deno.version?.deno ?? 'unknown',\n        };\n    }\n    if (typeof EdgeRuntime !== 'undefined') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': `other:${EdgeRuntime}`,\n            'X-Stainless-Runtime': 'edge',\n            'X-Stainless-Runtime-Version': globalThis.process.version,\n        };\n    }\n    // Check if Node.js\n    if (detectedPlatform === 'node') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': normalizePlatform(globalThis.process.platform ?? 'unknown'),\n            'X-Stainless-Arch': normalizeArch(globalThis.process.arch ?? 'unknown'),\n            'X-Stainless-Runtime': 'node',\n            'X-Stainless-Runtime-Version': globalThis.process.version ?? 'unknown',\n        };\n    }\n    const browserInfo = getBrowserInfo();\n    if (browserInfo) {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': 'unknown',\n            'X-Stainless-Runtime': `browser:${browserInfo.browser}`,\n            'X-Stainless-Runtime-Version': browserInfo.version,\n        };\n    }\n    // TODO add support for Cloudflare workers, etc.\n    return {\n        'X-Stainless-Lang': 'js',\n        'X-Stainless-Package-Version': VERSION,\n        'X-Stainless-OS': 'Unknown',\n        'X-Stainless-Arch': 'unknown',\n        'X-Stainless-Runtime': 'unknown',\n        'X-Stainless-Runtime-Version': 'unknown',\n    };\n};\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo() {\n    if (typeof navigator === 'undefined' || !navigator) {\n        return null;\n    }\n    // NOTE: The order matters here!\n    const browserPatterns = [\n        { key: 'edge', pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'chrome', pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'firefox', pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'safari', pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/ },\n    ];\n    // Find the FIRST matching browser\n    for (const { key, pattern } of browserPatterns) {\n        const match = pattern.exec(navigator.userAgent);\n        if (match) {\n            const major = match[1] || 0;\n            const minor = match[2] || 0;\n            const patch = match[3] || 0;\n            return { browser: key, version: `${major}.${minor}.${patch}` };\n        }\n    }\n    return null;\n}\nconst normalizeArch = (arch) => {\n    // Node docs:\n    // - https://nodejs.org/api/process.html#processarch\n    // Deno docs:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    if (arch === 'x32')\n        return 'x32';\n    if (arch === 'x86_64' || arch === 'x64')\n        return 'x64';\n    if (arch === 'arm')\n        return 'arm';\n    if (arch === 'aarch64' || arch === 'arm64')\n        return 'arm64';\n    if (arch)\n        return `other:${arch}`;\n    return 'unknown';\n};\nconst normalizePlatform = (platform) => {\n    // Node platforms:\n    // - https://nodejs.org/api/process.html#processplatform\n    // Deno platforms:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    // - https://github.com/denoland/deno/issues/14799\n    platform = platform.toLowerCase();\n    // NOTE: this iOS check is untested and may not work\n    // Node does not work natively on IOS, there is a fork at\n    // https://github.com/nodejs-mobile/nodejs-mobile\n    // however it is unknown at the time of writing how to detect if it is running\n    if (platform.includes('ios'))\n        return 'iOS';\n    if (platform === 'android')\n        return 'Android';\n    if (platform === 'darwin')\n        return 'MacOS';\n    if (platform === 'win32')\n        return 'Windows';\n    if (platform === 'freebsd')\n        return 'FreeBSD';\n    if (platform === 'openbsd')\n        return 'OpenBSD';\n    if (platform === 'linux')\n        return 'Linux';\n    if (platform)\n        return `Other:${platform}`;\n    return 'Unknown';\n};\nlet _platformHeaders;\nexport const getPlatformHeaders = () => {\n    return (_platformHeaders ?? (_platformHeaders = getPlatformProperties()));\n};\n//# sourceMappingURL=detect-platform.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nexport function getDefaultFetch() {\n    if (typeof fetch !== 'undefined') {\n        return fetch;\n    }\n    throw new Error('`fetch` is not defined as a global; Either pass `fetch` to the client, `new OpenAI({ fetch })` or polyfill the global, `globalThis.fetch = fetch`');\n}\nexport function makeReadableStream(...args) {\n    const ReadableStream = globalThis.ReadableStream;\n    if (typeof ReadableStream === 'undefined') {\n        // Note: All of the platforms / runtimes we officially support already define\n        // `ReadableStream` as a global, so this should only ever be hit on unsupported runtimes.\n        throw new Error('`ReadableStream` is not defined as a global; You will need to polyfill it, `globalThis.ReadableStream = ReadableStream`');\n    }\n    return new ReadableStream(...args);\n}\nexport function ReadableStreamFrom(iterable) {\n    let iter = Symbol.asyncIterator in iterable ? iterable[Symbol.asyncIterator]() : iterable[Symbol.iterator]();\n    return makeReadableStream({\n        start() { },\n        async pull(controller) {\n            const { done, value } = await iter.next();\n            if (done) {\n                controller.close();\n            }\n            else {\n                controller.enqueue(value);\n            }\n        },\n        async cancel() {\n            await iter.return?.();\n        },\n    });\n}\n/**\n * Most browsers don't yet have async iterable support for ReadableStream,\n * and Node has a very different way of reading bytes from its \"ReadableStream\".\n *\n * This polyfill was pulled from https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490\n */\nexport function ReadableStreamToAsyncIterable(stream) {\n    if (stream[Symbol.asyncIterator])\n        return stream;\n    const reader = stream.getReader();\n    return {\n        async next() {\n            try {\n                const result = await reader.read();\n                if (result?.done)\n                    reader.releaseLock(); // release lock when stream becomes closed\n                return result;\n            }\n            catch (e) {\n                reader.releaseLock(); // release lock when stream becomes errored\n                throw e;\n            }\n        },\n        async return() {\n            const cancelPromise = reader.cancel();\n            reader.releaseLock();\n            await cancelPromise;\n            return { done: true, value: undefined };\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n    };\n}\n/**\n * Cancels a ReadableStream we don't need to consume.\n * See https://undici.nodejs.org/#/?id=garbage-collection\n */\nexport async function CancelReadableStream(stream) {\n    if (stream === null || typeof stream !== 'object')\n        return;\n    if (stream[Symbol.asyncIterator]) {\n        await stream[Symbol.asyncIterator]().return?.();\n        return;\n    }\n    const reader = stream.getReader();\n    const cancelPromise = reader.cancel();\n    reader.releaseLock();\n    await cancelPromise;\n}\n//# sourceMappingURL=shims.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nexport const FallbackEncoder = ({ headers, body }) => {\n    return {\n        bodyHeaders: {\n            'content-type': 'application/json',\n        },\n        body: JSON.stringify(body),\n    };\n};\n//# sourceMappingURL=request-options.mjs.map","export const default_format = 'RFC3986';\nexport const default_formatter = (v) => String(v);\nexport const formatters = {\n    RFC1738: (v) => String(v).replace(/%20/g, '+'),\n    RFC3986: default_formatter,\n};\nexport const RFC1738 = 'RFC1738';\nexport const RFC3986 = 'RFC3986';\n//# sourceMappingURL=formats.mjs.map","import { RFC1738 } from \"./formats.mjs\";\nimport { isArray } from \"../utils/values.mjs\";\nexport let has = (obj, key) => ((has = Object.hasOwn ?? Function.prototype.call.bind(Object.prototype.hasOwnProperty)),\n    has(obj, key));\nconst hex_table = /* @__PURE__ */ (() => {\n    const array = [];\n    for (let i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n    return array;\n})();\nfunction compact_queue(queue) {\n    while (queue.length > 1) {\n        const item = queue.pop();\n        if (!item)\n            continue;\n        const obj = item.obj[item.prop];\n        if (isArray(obj)) {\n            const compacted = [];\n            for (let j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n            // @ts-ignore\n            item.obj[item.prop] = compacted;\n        }\n    }\n}\nfunction array_to_object(source, options) {\n    const obj = options && options.plainObjects ? Object.create(null) : {};\n    for (let i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n    return obj;\n}\nexport function merge(target, source, options = {}) {\n    if (!source) {\n        return target;\n    }\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        }\n        else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has(Object.prototype, source)) {\n                target[source] = true;\n            }\n        }\n        else {\n            return [target, source];\n        }\n        return target;\n    }\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n    let mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        // @ts-ignore\n        mergeTarget = array_to_object(target, options);\n    }\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has(target, i)) {\n                const targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                }\n                else {\n                    target.push(item);\n                }\n            }\n            else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n    return Object.keys(source).reduce(function (acc, key) {\n        const value = source[key];\n        if (has(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        }\n        else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n}\nexport function assign_single_source(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n}\nexport function decode(str, _, charset) {\n    const strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    }\n    catch (e) {\n        return strWithoutPlus;\n    }\n}\nconst limit = 1024;\nexport const encode = (str, _defaultEncoder, charset, _kind, format) => {\n    // This code was originally written by Brian White for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n    let string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    }\n    else if (typeof str !== 'string') {\n        string = String(str);\n    }\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n    let out = '';\n    for (let j = 0; j < string.length; j += limit) {\n        const segment = string.length >= limit ? string.slice(j, j + limit) : string;\n        const arr = [];\n        for (let i = 0; i < segment.length; ++i) {\n            let c = segment.charCodeAt(i);\n            if (c === 0x2d || // -\n                c === 0x2e || // .\n                c === 0x5f || // _\n                c === 0x7e || // ~\n                (c >= 0x30 && c <= 0x39) || // 0-9\n                (c >= 0x41 && c <= 0x5a) || // a-z\n                (c >= 0x61 && c <= 0x7a) || // A-Z\n                (format === RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n            ) {\n                arr[arr.length] = segment.charAt(i);\n                continue;\n            }\n            if (c < 0x80) {\n                arr[arr.length] = hex_table[c];\n                continue;\n            }\n            if (c < 0x800) {\n                arr[arr.length] = hex_table[0xc0 | (c >> 6)] + hex_table[0x80 | (c & 0x3f)];\n                continue;\n            }\n            if (c < 0xd800 || c >= 0xe000) {\n                arr[arr.length] =\n                    hex_table[0xe0 | (c >> 12)] + hex_table[0x80 | ((c >> 6) & 0x3f)] + hex_table[0x80 | (c & 0x3f)];\n                continue;\n            }\n            i += 1;\n            c = 0x10000 + (((c & 0x3ff) << 10) | (segment.charCodeAt(i) & 0x3ff));\n            arr[arr.length] =\n                hex_table[0xf0 | (c >> 18)] +\n                    hex_table[0x80 | ((c >> 12) & 0x3f)] +\n                    hex_table[0x80 | ((c >> 6) & 0x3f)] +\n                    hex_table[0x80 | (c & 0x3f)];\n        }\n        out += arr.join('');\n    }\n    return out;\n};\nexport function compact(value) {\n    const queue = [{ obj: { o: value }, prop: 'o' }];\n    const refs = [];\n    for (let i = 0; i < queue.length; ++i) {\n        const item = queue[i];\n        // @ts-ignore\n        const obj = item.obj[item.prop];\n        const keys = Object.keys(obj);\n        for (let j = 0; j < keys.length; ++j) {\n            const key = keys[j];\n            const val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n    compact_queue(queue);\n    return value;\n}\nexport function is_regexp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n}\nexport function is_buffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n}\nexport function combine(a, b) {\n    return [].concat(a, b);\n}\nexport function maybe_map(val, fn) {\n    if (isArray(val)) {\n        const mapped = [];\n        for (let i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n}\n//# sourceMappingURL=utils.mjs.map","import { encode, is_buffer, maybe_map, has } from \"./utils.mjs\";\nimport { default_format, default_formatter, formatters } from \"./formats.mjs\";\nimport { isArray } from \"../utils/values.mjs\";\nconst array_prefix_generators = {\n    brackets(prefix) {\n        return String(prefix) + '[]';\n    },\n    comma: 'comma',\n    indices(prefix, key) {\n        return String(prefix) + '[' + key + ']';\n    },\n    repeat(prefix) {\n        return String(prefix);\n    },\n};\nconst push_to_array = function (arr, value_or_array) {\n    Array.prototype.push.apply(arr, isArray(value_or_array) ? value_or_array : [value_or_array]);\n};\nlet toISOString;\nconst defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    allowEmptyArrays: false,\n    arrayFormat: 'indices',\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encodeDotInKeys: false,\n    encoder: encode,\n    encodeValuesOnly: false,\n    format: default_format,\n    formatter: default_formatter,\n    /** @deprecated */\n    indices: false,\n    serializeDate(date) {\n        return (toISOString ?? (toISOString = Function.prototype.call.bind(Date.prototype.toISOString)))(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false,\n};\nfunction is_non_nullish_primitive(v) {\n    return (typeof v === 'string' ||\n        typeof v === 'number' ||\n        typeof v === 'boolean' ||\n        typeof v === 'symbol' ||\n        typeof v === 'bigint');\n}\nconst sentinel = {};\nfunction inner_stringify(object, prefix, generateArrayPrefix, commaRoundTrip, allowEmptyArrays, strictNullHandling, skipNulls, encodeDotInKeys, encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, sideChannel) {\n    let obj = object;\n    let tmp_sc = sideChannel;\n    let step = 0;\n    let find_flag = false;\n    while ((tmp_sc = tmp_sc.get(sentinel)) !== void undefined && !find_flag) {\n        // Where object last appeared in the ref tree\n        const pos = tmp_sc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            }\n            else {\n                find_flag = true; // Break while\n            }\n        }\n        if (typeof tmp_sc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    }\n    else if (obj instanceof Date) {\n        obj = serializeDate?.(obj);\n    }\n    else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = maybe_map(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate?.(value);\n            }\n            return value;\n        });\n    }\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ?\n                // @ts-expect-error\n                encoder(prefix, defaults.encoder, charset, 'key', format)\n                : prefix;\n        }\n        obj = '';\n    }\n    if (is_non_nullish_primitive(obj) || is_buffer(obj)) {\n        if (encoder) {\n            const key_value = encodeValuesOnly ? prefix\n                // @ts-expect-error\n                : encoder(prefix, defaults.encoder, charset, 'key', format);\n            return [\n                formatter?.(key_value) +\n                    '=' +\n                    // @ts-expect-error\n                    formatter?.(encoder(obj, defaults.encoder, charset, 'value', format)),\n            ];\n        }\n        return [formatter?.(prefix) + '=' + formatter?.(String(obj))];\n    }\n    const values = [];\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n    let obj_keys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        if (encodeValuesOnly && encoder) {\n            // @ts-expect-error values only\n            obj = maybe_map(obj, encoder);\n        }\n        obj_keys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    }\n    else if (isArray(filter)) {\n        obj_keys = filter;\n    }\n    else {\n        const keys = Object.keys(obj);\n        obj_keys = sort ? keys.sort(sort) : keys;\n    }\n    const encoded_prefix = encodeDotInKeys ? String(prefix).replace(/\\./g, '%2E') : String(prefix);\n    const adjusted_prefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? encoded_prefix + '[]' : encoded_prefix;\n    if (allowEmptyArrays && isArray(obj) && obj.length === 0) {\n        return adjusted_prefix + '[]';\n    }\n    for (let j = 0; j < obj_keys.length; ++j) {\n        const key = obj_keys[j];\n        const value = \n        // @ts-ignore\n        typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\n        if (skipNulls && value === null) {\n            continue;\n        }\n        // @ts-ignore\n        const encoded_key = allowDots && encodeDotInKeys ? key.replace(/\\./g, '%2E') : key;\n        const key_prefix = isArray(obj) ?\n            typeof generateArrayPrefix === 'function' ?\n                generateArrayPrefix(adjusted_prefix, encoded_key)\n                : adjusted_prefix\n            : adjusted_prefix + (allowDots ? '.' + encoded_key : '[' + encoded_key + ']');\n        sideChannel.set(object, step);\n        const valueSideChannel = new WeakMap();\n        valueSideChannel.set(sentinel, sideChannel);\n        push_to_array(values, inner_stringify(value, key_prefix, generateArrayPrefix, commaRoundTrip, allowEmptyArrays, strictNullHandling, skipNulls, encodeDotInKeys, \n        // @ts-ignore\n        generateArrayPrefix === 'comma' && encodeValuesOnly && isArray(obj) ? null : encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, valueSideChannel));\n    }\n    return values;\n}\nfunction normalize_stringify_options(opts = defaults) {\n    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n    }\n    if (typeof opts.encodeDotInKeys !== 'undefined' && typeof opts.encodeDotInKeys !== 'boolean') {\n        throw new TypeError('`encodeDotInKeys` option can only be `true` or `false`, when provided');\n    }\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n    const charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    let format = default_format;\n    if (typeof opts.format !== 'undefined') {\n        if (!has(formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    const formatter = formatters[format];\n    let filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n    let arrayFormat;\n    if (opts.arrayFormat && opts.arrayFormat in array_prefix_generators) {\n        arrayFormat = opts.arrayFormat;\n    }\n    else if ('indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    }\n    else {\n        arrayFormat = defaults.arrayFormat;\n    }\n    if ('commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n    }\n    const allowDots = typeof opts.allowDots === 'undefined' ?\n        !!opts.encodeDotInKeys === true ?\n            true\n            : defaults.allowDots\n        : !!opts.allowDots;\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        // @ts-ignore\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        arrayFormat: arrayFormat,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        commaRoundTrip: !!opts.commaRoundTrip,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encodeDotInKeys: typeof opts.encodeDotInKeys === 'boolean' ? opts.encodeDotInKeys : defaults.encodeDotInKeys,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        // @ts-ignore\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling,\n    };\n}\nexport function stringify(object, opts = {}) {\n    let obj = object;\n    const options = normalize_stringify_options(opts);\n    let obj_keys;\n    let filter;\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    }\n    else if (isArray(options.filter)) {\n        filter = options.filter;\n        obj_keys = filter;\n    }\n    const keys = [];\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n    const generateArrayPrefix = array_prefix_generators[options.arrayFormat];\n    const commaRoundTrip = generateArrayPrefix === 'comma' && options.commaRoundTrip;\n    if (!obj_keys) {\n        obj_keys = Object.keys(obj);\n    }\n    if (options.sort) {\n        obj_keys.sort(options.sort);\n    }\n    const sideChannel = new WeakMap();\n    for (let i = 0; i < obj_keys.length; ++i) {\n        const key = obj_keys[i];\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        push_to_array(keys, inner_stringify(obj[key], key, \n        // @ts-expect-error\n        generateArrayPrefix, commaRoundTrip, options.allowEmptyArrays, options.strictNullHandling, options.skipNulls, options.encodeDotInKeys, options.encode ? options.encoder : null, options.filter, options.sort, options.allowDots, options.serializeDate, options.format, options.formatter, options.encodeValuesOnly, options.charset, sideChannel));\n    }\n    const joined = keys.join(options.delimiter);\n    let prefix = options.addQueryPrefix === true ? '?' : '';\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        }\n        else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n    return joined.length > 0 ? prefix + joined : '';\n}\n//# sourceMappingURL=stringify.mjs.map","export function concatBytes(buffers) {\n    let length = 0;\n    for (const buffer of buffers) {\n        length += buffer.length;\n    }\n    const output = new Uint8Array(length);\n    let index = 0;\n    for (const buffer of buffers) {\n        output.set(buffer, index);\n        index += buffer.length;\n    }\n    return output;\n}\nlet encodeUTF8_;\nexport function encodeUTF8(str) {\n    let encoder;\n    return (encodeUTF8_ ??\n        ((encoder = new globalThis.TextEncoder()), (encodeUTF8_ = encoder.encode.bind(encoder))))(str);\n}\nlet decodeUTF8_;\nexport function decodeUTF8(bytes) {\n    let decoder;\n    return (decodeUTF8_ ??\n        ((decoder = new globalThis.TextDecoder()), (decodeUTF8_ = decoder.decode.bind(decoder))))(bytes);\n}\n//# sourceMappingURL=bytes.mjs.map","var _LineDecoder_buffer, _LineDecoder_carriageReturnIndex;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"../tslib.mjs\";\nimport { concatBytes, decodeUTF8, encodeUTF8 } from \"../utils/bytes.mjs\";\n/**\n * A re-implementation of httpx's `LineDecoder` in Python that handles incrementally\n * reading lines from text.\n *\n * https://github.com/encode/httpx/blob/920333ea98118e9cf617f246905d7b202510941c/httpx/_decoders.py#L258\n */\nexport class LineDecoder {\n    constructor() {\n        _LineDecoder_buffer.set(this, void 0);\n        _LineDecoder_carriageReturnIndex.set(this, void 0);\n        __classPrivateFieldSet(this, _LineDecoder_buffer, new Uint8Array(), \"f\");\n        __classPrivateFieldSet(this, _LineDecoder_carriageReturnIndex, null, \"f\");\n    }\n    decode(chunk) {\n        if (chunk == null) {\n            return [];\n        }\n        const binaryChunk = chunk instanceof ArrayBuffer ? new Uint8Array(chunk)\n            : typeof chunk === 'string' ? encodeUTF8(chunk)\n                : chunk;\n        __classPrivateFieldSet(this, _LineDecoder_buffer, concatBytes([__classPrivateFieldGet(this, _LineDecoder_buffer, \"f\"), binaryChunk]), \"f\");\n        const lines = [];\n        let patternIndex;\n        while ((patternIndex = findNewlineIndex(__classPrivateFieldGet(this, _LineDecoder_buffer, \"f\"), __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\"))) != null) {\n            if (patternIndex.carriage && __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") == null) {\n                // skip until we either get a corresponding `\\n`, a new `\\r` or nothing\n                __classPrivateFieldSet(this, _LineDecoder_carriageReturnIndex, patternIndex.index, \"f\");\n                continue;\n            }\n            // we got double \\r or \\rtext\\n\n            if (__classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") != null &&\n                (patternIndex.index !== __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") + 1 || patternIndex.carriage)) {\n                lines.push(decodeUTF8(__classPrivateFieldGet(this, _LineDecoder_buffer, \"f\").subarray(0, __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") - 1)));\n                __classPrivateFieldSet(this, _LineDecoder_buffer, __classPrivateFieldGet(this, _LineDecoder_buffer, \"f\").subarray(__classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\")), \"f\");\n                __classPrivateFieldSet(this, _LineDecoder_carriageReturnIndex, null, \"f\");\n                continue;\n            }\n            const endIndex = __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") !== null ? patternIndex.preceding - 1 : patternIndex.preceding;\n            const line = decodeUTF8(__classPrivateFieldGet(this, _LineDecoder_buffer, \"f\").subarray(0, endIndex));\n            lines.push(line);\n            __classPrivateFieldSet(this, _LineDecoder_buffer, __classPrivateFieldGet(this, _LineDecoder_buffer, \"f\").subarray(patternIndex.index), \"f\");\n            __classPrivateFieldSet(this, _LineDecoder_carriageReturnIndex, null, \"f\");\n        }\n        return lines;\n    }\n    flush() {\n        if (!__classPrivateFieldGet(this, _LineDecoder_buffer, \"f\").length) {\n            return [];\n        }\n        return this.decode('\\n');\n    }\n}\n_LineDecoder_buffer = new WeakMap(), _LineDecoder_carriageReturnIndex = new WeakMap();\n// prettier-ignore\nLineDecoder.NEWLINE_CHARS = new Set(['\\n', '\\r']);\nLineDecoder.NEWLINE_REGEXP = /\\r\\n|[\\n\\r]/g;\n/**\n * This function searches the buffer for the end patterns, (\\r or \\n)\n * and returns an object with the index preceding the matched newline and the\n * index after the newline char. `null` is returned if no new line is found.\n *\n * ```ts\n * findNewLineIndex('abc\\ndef') -> { preceding: 2, index: 3 }\n * ```\n */\nfunction findNewlineIndex(buffer, startIndex) {\n    const newline = 0x0a; // \\n\n    const carriage = 0x0d; // \\r\n    for (let i = startIndex ?? 0; i < buffer.length; i++) {\n        if (buffer[i] === newline) {\n            return { preceding: i, index: i + 1, carriage: false };\n        }\n        if (buffer[i] === carriage) {\n            return { preceding: i, index: i + 1, carriage: true };\n        }\n    }\n    return null;\n}\nexport function findDoubleNewlineIndex(buffer) {\n    // This function searches the buffer for the end patterns (\\r\\r, \\n\\n, \\r\\n\\r\\n)\n    // and returns the index right after the first occurrence of any pattern,\n    // or -1 if none of the patterns are found.\n    const newline = 0x0a; // \\n\n    const carriage = 0x0d; // \\r\n    for (let i = 0; i < buffer.length - 1; i++) {\n        if (buffer[i] === newline && buffer[i + 1] === newline) {\n            // \\n\\n\n            return i + 2;\n        }\n        if (buffer[i] === carriage && buffer[i + 1] === carriage) {\n            // \\r\\r\n            return i + 2;\n        }\n        if (buffer[i] === carriage &&\n            buffer[i + 1] === newline &&\n            i + 3 < buffer.length &&\n            buffer[i + 2] === carriage &&\n            buffer[i + 3] === newline) {\n            // \\r\\n\\r\\n\n            return i + 4;\n        }\n    }\n    return -1;\n}\n//# sourceMappingURL=line.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { hasOwn } from \"./values.mjs\";\nconst levelNumbers = {\n    off: 0,\n    error: 200,\n    warn: 300,\n    info: 400,\n    debug: 500,\n};\nexport const parseLogLevel = (maybeLevel, sourceName, client) => {\n    if (!maybeLevel) {\n        return undefined;\n    }\n    if (hasOwn(levelNumbers, maybeLevel)) {\n        return maybeLevel;\n    }\n    loggerFor(client).warn(`${sourceName} was set to ${JSON.stringify(maybeLevel)}, expected one of ${JSON.stringify(Object.keys(levelNumbers))}`);\n    return undefined;\n};\nfunction noop() { }\nfunction makeLogFn(fnLevel, logger, logLevel) {\n    if (!logger || levelNumbers[fnLevel] > levelNumbers[logLevel]) {\n        return noop;\n    }\n    else {\n        // Don't wrap logger functions, we want the stacktrace intact!\n        return logger[fnLevel].bind(logger);\n    }\n}\nconst noopLogger = {\n    error: noop,\n    warn: noop,\n    info: noop,\n    debug: noop,\n};\nlet cachedLoggers = /* @__PURE__ */ new WeakMap();\nexport function loggerFor(client) {\n    const logger = client.logger;\n    const logLevel = client.logLevel ?? 'off';\n    if (!logger) {\n        return noopLogger;\n    }\n    const cachedLogger = cachedLoggers.get(logger);\n    if (cachedLogger && cachedLogger[0] === logLevel) {\n        return cachedLogger[1];\n    }\n    const levelLogger = {\n        error: makeLogFn('error', logger, logLevel),\n        warn: makeLogFn('warn', logger, logLevel),\n        info: makeLogFn('info', logger, logLevel),\n        debug: makeLogFn('debug', logger, logLevel),\n    };\n    cachedLoggers.set(logger, [logLevel, levelLogger]);\n    return levelLogger;\n}\nexport const formatRequestDetails = (details) => {\n    if (details.options) {\n        details.options = { ...details.options };\n        delete details.options['headers']; // redundant + leaks internals\n    }\n    if (details.headers) {\n        details.headers = Object.fromEntries((details.headers instanceof Headers ? [...details.headers] : Object.entries(details.headers)).map(([name, value]) => [\n            name,\n            (name.toLowerCase() === 'authorization' ||\n                name.toLowerCase() === 'cookie' ||\n                name.toLowerCase() === 'set-cookie') ?\n                '***'\n                : value,\n        ]));\n    }\n    if ('retryOfRequestLogID' in details) {\n        if (details.retryOfRequestLogID) {\n            details.retryOf = details.retryOfRequestLogID;\n        }\n        delete details.retryOfRequestLogID;\n    }\n    return details;\n};\n//# sourceMappingURL=log.mjs.map","var _Stream_client;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"../internal/tslib.mjs\";\nimport { OpenAIError } from \"./error.mjs\";\nimport { makeReadableStream } from \"../internal/shims.mjs\";\nimport { findDoubleNewlineIndex, LineDecoder } from \"../internal/decoders/line.mjs\";\nimport { ReadableStreamToAsyncIterable } from \"../internal/shims.mjs\";\nimport { isAbortError } from \"../internal/errors.mjs\";\nimport { encodeUTF8 } from \"../internal/utils/bytes.mjs\";\nimport { loggerFor } from \"../internal/utils/log.mjs\";\nimport { APIError } from \"./error.mjs\";\nexport class Stream {\n    constructor(iterator, controller, client) {\n        this.iterator = iterator;\n        _Stream_client.set(this, void 0);\n        this.controller = controller;\n        __classPrivateFieldSet(this, _Stream_client, client, \"f\");\n    }\n    static fromSSEResponse(response, controller, client) {\n        let consumed = false;\n        const logger = client ? loggerFor(client) : console;\n        async function* iterator() {\n            if (consumed) {\n                throw new OpenAIError('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const sse of _iterSSEMessages(response, controller)) {\n                    if (done)\n                        continue;\n                    if (sse.data.startsWith('[DONE]')) {\n                        done = true;\n                        continue;\n                    }\n                    if (sse.event === null || !sse.event.startsWith('thread.')) {\n                        let data;\n                        try {\n                            data = JSON.parse(sse.data);\n                        }\n                        catch (e) {\n                            logger.error(`Could not parse message into JSON:`, sse.data);\n                            logger.error(`From chunk:`, sse.raw);\n                            throw e;\n                        }\n                        if (data && data.error) {\n                            throw new APIError(undefined, data.error, undefined, response.headers);\n                        }\n                        yield data;\n                    }\n                    else {\n                        let data;\n                        try {\n                            data = JSON.parse(sse.data);\n                        }\n                        catch (e) {\n                            console.error(`Could not parse message into JSON:`, sse.data);\n                            console.error(`From chunk:`, sse.raw);\n                            throw e;\n                        }\n                        // TODO: Is this where the error should be thrown?\n                        if (sse.event == 'error') {\n                            throw new APIError(undefined, data.error, data.message, undefined);\n                        }\n                        yield { event: sse.event, data: data };\n                    }\n                }\n                done = true;\n            }\n            catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if (isAbortError(e))\n                    return;\n                throw e;\n            }\n            finally {\n                // If the user `break`s, abort the ongoing request.\n                if (!done)\n                    controller.abort();\n            }\n        }\n        return new Stream(iterator, controller, client);\n    }\n    /**\n     * Generates a Stream from a newline-separated ReadableStream\n     * where each item is a JSON value.\n     */\n    static fromReadableStream(readableStream, controller, client) {\n        let consumed = false;\n        async function* iterLines() {\n            const lineDecoder = new LineDecoder();\n            const iter = ReadableStreamToAsyncIterable(readableStream);\n            for await (const chunk of iter) {\n                for (const line of lineDecoder.decode(chunk)) {\n                    yield line;\n                }\n            }\n            for (const line of lineDecoder.flush()) {\n                yield line;\n            }\n        }\n        async function* iterator() {\n            if (consumed) {\n                throw new OpenAIError('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const line of iterLines()) {\n                    if (done)\n                        continue;\n                    if (line)\n                        yield JSON.parse(line);\n                }\n                done = true;\n            }\n            catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if (isAbortError(e))\n                    return;\n                throw e;\n            }\n            finally {\n                // If the user `break`s, abort the ongoing request.\n                if (!done)\n                    controller.abort();\n            }\n        }\n        return new Stream(iterator, controller, client);\n    }\n    [(_Stream_client = new WeakMap(), Symbol.asyncIterator)]() {\n        return this.iterator();\n    }\n    /**\n     * Splits the stream into two streams which can be\n     * independently read from at different speeds.\n     */\n    tee() {\n        const left = [];\n        const right = [];\n        const iterator = this.iterator();\n        const teeIterator = (queue) => {\n            return {\n                next: () => {\n                    if (queue.length === 0) {\n                        const result = iterator.next();\n                        left.push(result);\n                        right.push(result);\n                    }\n                    return queue.shift();\n                },\n            };\n        };\n        return [\n            new Stream(() => teeIterator(left), this.controller, __classPrivateFieldGet(this, _Stream_client, \"f\")),\n            new Stream(() => teeIterator(right), this.controller, __classPrivateFieldGet(this, _Stream_client, \"f\")),\n        ];\n    }\n    /**\n     * Converts this stream to a newline-separated ReadableStream of\n     * JSON stringified values in the stream\n     * which can be turned back into a Stream with `Stream.fromReadableStream()`.\n     */\n    toReadableStream() {\n        const self = this;\n        let iter;\n        return makeReadableStream({\n            async start() {\n                iter = self[Symbol.asyncIterator]();\n            },\n            async pull(ctrl) {\n                try {\n                    const { value, done } = await iter.next();\n                    if (done)\n                        return ctrl.close();\n                    const bytes = encodeUTF8(JSON.stringify(value) + '\\n');\n                    ctrl.enqueue(bytes);\n                }\n                catch (err) {\n                    ctrl.error(err);\n                }\n            },\n            async cancel() {\n                await iter.return?.();\n            },\n        });\n    }\n}\nexport async function* _iterSSEMessages(response, controller) {\n    if (!response.body) {\n        controller.abort();\n        if (typeof globalThis.navigator !== 'undefined' &&\n            globalThis.navigator.product === 'ReactNative') {\n            throw new OpenAIError(`The default react-native fetch implementation does not support streaming. Please use expo/fetch: https://docs.expo.dev/versions/latest/sdk/expo/#expofetch-api`);\n        }\n        throw new OpenAIError(`Attempted to iterate over a response with no body`);\n    }\n    const sseDecoder = new SSEDecoder();\n    const lineDecoder = new LineDecoder();\n    const iter = ReadableStreamToAsyncIterable(response.body);\n    for await (const sseChunk of iterSSEChunks(iter)) {\n        for (const line of lineDecoder.decode(sseChunk)) {\n            const sse = sseDecoder.decode(line);\n            if (sse)\n                yield sse;\n        }\n    }\n    for (const line of lineDecoder.flush()) {\n        const sse = sseDecoder.decode(line);\n        if (sse)\n            yield sse;\n    }\n}\n/**\n * Given an async iterable iterator, iterates over it and yields full\n * SSE chunks, i.e. yields when a double new-line is encountered.\n */\nasync function* iterSSEChunks(iterator) {\n    let data = new Uint8Array();\n    for await (const chunk of iterator) {\n        if (chunk == null) {\n            continue;\n        }\n        const binaryChunk = chunk instanceof ArrayBuffer ? new Uint8Array(chunk)\n            : typeof chunk === 'string' ? encodeUTF8(chunk)\n                : chunk;\n        let newData = new Uint8Array(data.length + binaryChunk.length);\n        newData.set(data);\n        newData.set(binaryChunk, data.length);\n        data = newData;\n        let patternIndex;\n        while ((patternIndex = findDoubleNewlineIndex(data)) !== -1) {\n            yield data.slice(0, patternIndex);\n            data = data.slice(patternIndex);\n        }\n    }\n    if (data.length > 0) {\n        yield data;\n    }\n}\nclass SSEDecoder {\n    constructor() {\n        this.event = null;\n        this.data = [];\n        this.chunks = [];\n    }\n    decode(line) {\n        if (line.endsWith('\\r')) {\n            line = line.substring(0, line.length - 1);\n        }\n        if (!line) {\n            // empty line and we didn't previously encounter any messages\n            if (!this.event && !this.data.length)\n                return null;\n            const sse = {\n                event: this.event,\n                data: this.data.join('\\n'),\n                raw: this.chunks,\n            };\n            this.event = null;\n            this.data = [];\n            this.chunks = [];\n            return sse;\n        }\n        this.chunks.push(line);\n        if (line.startsWith(':')) {\n            return null;\n        }\n        let [fieldname, _, value] = partition(line, ':');\n        if (value.startsWith(' ')) {\n            value = value.substring(1);\n        }\n        if (fieldname === 'event') {\n            this.event = value;\n        }\n        else if (fieldname === 'data') {\n            this.data.push(value);\n        }\n        return null;\n    }\n}\nfunction partition(str, delimiter) {\n    const index = str.indexOf(delimiter);\n    if (index !== -1) {\n        return [str.substring(0, index), delimiter, str.substring(index + delimiter.length)];\n    }\n    return [str, '', ''];\n}\n//# sourceMappingURL=streaming.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { Stream } from \"../core/streaming.mjs\";\nimport { formatRequestDetails, loggerFor } from \"./utils/log.mjs\";\nexport async function defaultParseResponse(client, props) {\n    const { response, requestLogID, retryOfRequestLogID, startTime } = props;\n    const body = await (async () => {\n        if (props.options.stream) {\n            loggerFor(client).debug('response', response.status, response.url, response.headers, response.body);\n            // Note: there is an invariant here that isn't represented in the type system\n            // that if you set `stream: true` the response type must also be `Stream<T>`\n            if (props.options.__streamClass) {\n                return props.options.__streamClass.fromSSEResponse(response, props.controller, client);\n            }\n            return Stream.fromSSEResponse(response, props.controller, client);\n        }\n        // fetch refuses to read the body when the status code is 204.\n        if (response.status === 204) {\n            return null;\n        }\n        if (props.options.__binaryResponse) {\n            return response;\n        }\n        const contentType = response.headers.get('content-type');\n        const mediaType = contentType?.split(';')[0]?.trim();\n        const isJSON = mediaType?.includes('application/json') || mediaType?.endsWith('+json');\n        if (isJSON) {\n            const json = await response.json();\n            return addRequestID(json, response);\n        }\n        const text = await response.text();\n        return text;\n    })();\n    loggerFor(client).debug(`[${requestLogID}] response parsed`, formatRequestDetails({\n        retryOfRequestLogID,\n        url: response.url,\n        status: response.status,\n        body,\n        durationMs: Date.now() - startTime,\n    }));\n    return body;\n}\nexport function addRequestID(value, response) {\n    if (!value || typeof value !== 'object' || Array.isArray(value)) {\n        return value;\n    }\n    return Object.defineProperty(value, '_request_id', {\n        value: response.headers.get('x-request-id'),\n        enumerable: false,\n    });\n}\n//# sourceMappingURL=parse.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _APIPromise_client;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"../internal/tslib.mjs\";\nimport { defaultParseResponse, addRequestID, } from \"../internal/parse.mjs\";\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */\nexport class APIPromise extends Promise {\n    constructor(client, responsePromise, parseResponse = defaultParseResponse) {\n        super((resolve) => {\n            // this is maybe a bit weird but this has to be a no-op to not implicitly\n            // parse the response body; instead .then, .catch, .finally are overridden\n            // to parse the response\n            resolve(null);\n        });\n        this.responsePromise = responsePromise;\n        this.parseResponse = parseResponse;\n        _APIPromise_client.set(this, void 0);\n        __classPrivateFieldSet(this, _APIPromise_client, client, \"f\");\n    }\n    _thenUnwrap(transform) {\n        return new APIPromise(__classPrivateFieldGet(this, _APIPromise_client, \"f\"), this.responsePromise, async (client, props) => addRequestID(transform(await this.parseResponse(client, props), props), props.response));\n    }\n    /**\n     * Gets the raw `Response` instance instead of parsing the response\n     * data.\n     *\n     * If you want to parse the response body but still get the `Response`\n     * instance, you can use {@link withResponse()}.\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` or add `\"lib\": [\"DOM\"]`\n     * to your `tsconfig.json`.\n     */\n    asResponse() {\n        return this.responsePromise.then((p) => p.response);\n    }\n    /**\n     * Gets the parsed response data, the raw `Response` instance and the ID of the request,\n     * returned via the X-Request-ID header which is useful for debugging requests and reporting\n     * issues to OpenAI.\n     *\n     * If you just want to get the raw `Response` instance without parsing it,\n     * you can use {@link asResponse()}.\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` or add `\"lib\": [\"DOM\"]`\n     * to your `tsconfig.json`.\n     */\n    async withResponse() {\n        const [data, response] = await Promise.all([this.parse(), this.asResponse()]);\n        return { data, response, request_id: response.headers.get('x-request-id') };\n    }\n    parse() {\n        if (!this.parsedPromise) {\n            this.parsedPromise = this.responsePromise.then((data) => this.parseResponse(__classPrivateFieldGet(this, _APIPromise_client, \"f\"), data));\n        }\n        return this.parsedPromise;\n    }\n    then(onfulfilled, onrejected) {\n        return this.parse().then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return this.parse().catch(onrejected);\n    }\n    finally(onfinally) {\n        return this.parse().finally(onfinally);\n    }\n}\n_APIPromise_client = new WeakMap();\n//# sourceMappingURL=api-promise.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _AbstractPage_client;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"../internal/tslib.mjs\";\nimport { OpenAIError } from \"./error.mjs\";\nimport { defaultParseResponse } from \"../internal/parse.mjs\";\nimport { APIPromise } from \"./api-promise.mjs\";\nimport { maybeObj } from \"../internal/utils/values.mjs\";\nexport class AbstractPage {\n    constructor(client, response, body, options) {\n        _AbstractPage_client.set(this, void 0);\n        __classPrivateFieldSet(this, _AbstractPage_client, client, \"f\");\n        this.options = options;\n        this.response = response;\n        this.body = body;\n    }\n    hasNextPage() {\n        const items = this.getPaginatedItems();\n        if (!items.length)\n            return false;\n        return this.nextPageRequestOptions() != null;\n    }\n    async getNextPage() {\n        const nextOptions = this.nextPageRequestOptions();\n        if (!nextOptions) {\n            throw new OpenAIError('No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.');\n        }\n        return await __classPrivateFieldGet(this, _AbstractPage_client, \"f\").requestAPIList(this.constructor, nextOptions);\n    }\n    async *iterPages() {\n        let page = this;\n        yield page;\n        while (page.hasNextPage()) {\n            page = await page.getNextPage();\n            yield page;\n        }\n    }\n    async *[(_AbstractPage_client = new WeakMap(), Symbol.asyncIterator)]() {\n        for await (const page of this.iterPages()) {\n            for (const item of page.getPaginatedItems()) {\n                yield item;\n            }\n        }\n    }\n}\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */\nexport class PagePromise extends APIPromise {\n    constructor(client, request, Page) {\n        super(client, request, async (client, props) => new Page(client, props.response, await defaultParseResponse(client, props), props.options));\n    }\n    /**\n     * Allow auto-paginating iteration on an unawaited list call, eg:\n     *\n     *    for await (const item of client.items.list()) {\n     *      console.log(item)\n     *    }\n     */\n    async *[Symbol.asyncIterator]() {\n        const page = await this;\n        for await (const item of page) {\n            yield item;\n        }\n    }\n}\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class Page extends AbstractPage {\n    constructor(client, response, body, options) {\n        super(client, response, body, options);\n        this.data = body.data || [];\n        this.object = body.object;\n    }\n    getPaginatedItems() {\n        return this.data ?? [];\n    }\n    nextPageRequestOptions() {\n        return null;\n    }\n}\nexport class CursorPage extends AbstractPage {\n    constructor(client, response, body, options) {\n        super(client, response, body, options);\n        this.data = body.data || [];\n        this.has_more = body.has_more || false;\n    }\n    getPaginatedItems() {\n        return this.data ?? [];\n    }\n    hasNextPage() {\n        if (this.has_more === false) {\n            return false;\n        }\n        return super.hasNextPage();\n    }\n    nextPageRequestOptions() {\n        const data = this.getPaginatedItems();\n        const id = data[data.length - 1]?.id;\n        if (!id) {\n            return null;\n        }\n        return {\n            ...this.options,\n            query: {\n                ...maybeObj(this.options.query),\n                after: id,\n            },\n        };\n    }\n}\nexport class ConversationCursorPage extends AbstractPage {\n    constructor(client, response, body, options) {\n        super(client, response, body, options);\n        this.data = body.data || [];\n        this.has_more = body.has_more || false;\n        this.last_id = body.last_id || '';\n    }\n    getPaginatedItems() {\n        return this.data ?? [];\n    }\n    hasNextPage() {\n        if (this.has_more === false) {\n            return false;\n        }\n        return super.hasNextPage();\n    }\n    nextPageRequestOptions() {\n        const cursor = this.last_id;\n        if (!cursor) {\n            return null;\n        }\n        return {\n            ...this.options,\n            query: {\n                ...maybeObj(this.options.query),\n                after: cursor,\n            },\n        };\n    }\n}\n//# sourceMappingURL=pagination.mjs.map","import { ReadableStreamFrom } from \"./shims.mjs\";\nexport const checkFileSupport = () => {\n    if (typeof File === 'undefined') {\n        const { process } = globalThis;\n        const isOldNode = typeof process?.versions?.node === 'string' && parseInt(process.versions.node.split('.')) < 20;\n        throw new Error('`File` is not defined as a global, which is required for file uploads.' +\n            (isOldNode ?\n                \" Update to Node 20 LTS or newer, or set `globalThis.File` to `import('node:buffer').File`.\"\n                : ''));\n    }\n};\n/**\n * Construct a `File` instance. This is used to ensure a helpful error is thrown\n * for environments that don't define a global `File` yet.\n */\nexport function makeFile(fileBits, fileName, options) {\n    checkFileSupport();\n    return new File(fileBits, fileName ?? 'unknown_file', options);\n}\nexport function getName(value) {\n    return (((typeof value === 'object' &&\n        value !== null &&\n        (('name' in value && value.name && String(value.name)) ||\n            ('url' in value && value.url && String(value.url)) ||\n            ('filename' in value && value.filename && String(value.filename)) ||\n            ('path' in value && value.path && String(value.path)))) ||\n        '')\n        .split(/[\\\\/]/)\n        .pop() || undefined);\n}\nexport const isAsyncIterable = (value) => value != null && typeof value === 'object' && typeof value[Symbol.asyncIterator] === 'function';\n/**\n * Returns a multipart/form-data request if any part of the given request body contains a File / Blob value.\n * Otherwise returns the request as is.\n */\nexport const maybeMultipartFormRequestOptions = async (opts, fetch) => {\n    if (!hasUploadableValue(opts.body))\n        return opts;\n    return { ...opts, body: await createForm(opts.body, fetch) };\n};\nexport const multipartFormRequestOptions = async (opts, fetch) => {\n    return { ...opts, body: await createForm(opts.body, fetch) };\n};\nconst supportsFormDataMap = /* @__PURE__ */ new WeakMap();\n/**\n * node-fetch doesn't support the global FormData object in recent node versions. Instead of sending\n * properly-encoded form data, it just stringifies the object, resulting in a request body of \"[object FormData]\".\n * This function detects if the fetch function provided supports the global FormData object to avoid\n * confusing error messages later on.\n */\nfunction supportsFormData(fetchObject) {\n    const fetch = typeof fetchObject === 'function' ? fetchObject : fetchObject.fetch;\n    const cached = supportsFormDataMap.get(fetch);\n    if (cached)\n        return cached;\n    const promise = (async () => {\n        try {\n            const FetchResponse = ('Response' in fetch ?\n                fetch.Response\n                : (await fetch('data:,')).constructor);\n            const data = new FormData();\n            if (data.toString() === (await new FetchResponse(data).text())) {\n                return false;\n            }\n            return true;\n        }\n        catch {\n            // avoid false negatives\n            return true;\n        }\n    })();\n    supportsFormDataMap.set(fetch, promise);\n    return promise;\n}\nexport const createForm = async (body, fetch) => {\n    if (!(await supportsFormData(fetch))) {\n        throw new TypeError('The provided fetch function does not support file uploads with the current global FormData class.');\n    }\n    const form = new FormData();\n    await Promise.all(Object.entries(body || {}).map(([key, value]) => addFormValue(form, key, value)));\n    return form;\n};\n// We check for Blob not File because Bun.File doesn't inherit from File,\n// but they both inherit from Blob and have a `name` property at runtime.\nconst isNamedBlob = (value) => value instanceof Blob && 'name' in value;\nconst isUploadable = (value) => typeof value === 'object' &&\n    value !== null &&\n    (value instanceof Response || isAsyncIterable(value) || isNamedBlob(value));\nconst hasUploadableValue = (value) => {\n    if (isUploadable(value))\n        return true;\n    if (Array.isArray(value))\n        return value.some(hasUploadableValue);\n    if (value && typeof value === 'object') {\n        for (const k in value) {\n            if (hasUploadableValue(value[k]))\n                return true;\n        }\n    }\n    return false;\n};\nconst addFormValue = async (form, key, value) => {\n    if (value === undefined)\n        return;\n    if (value == null) {\n        throw new TypeError(`Received null for \"${key}\"; to pass null in FormData, you must use the string 'null'`);\n    }\n    // TODO: make nested formats configurable\n    if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        form.append(key, String(value));\n    }\n    else if (value instanceof Response) {\n        form.append(key, makeFile([await value.blob()], getName(value)));\n    }\n    else if (isAsyncIterable(value)) {\n        form.append(key, makeFile([await new Response(ReadableStreamFrom(value)).blob()], getName(value)));\n    }\n    else if (isNamedBlob(value)) {\n        form.append(key, value, getName(value));\n    }\n    else if (Array.isArray(value)) {\n        await Promise.all(value.map((entry) => addFormValue(form, key + '[]', entry)));\n    }\n    else if (typeof value === 'object') {\n        await Promise.all(Object.entries(value).map(([name, prop]) => addFormValue(form, `${key}[${name}]`, prop)));\n    }\n    else {\n        throw new TypeError(`Invalid value given to form, expected a string, number, boolean, object, Array, File or Blob but got ${value} instead`);\n    }\n};\n//# sourceMappingURL=uploads.mjs.map","import { getName, makeFile, isAsyncIterable } from \"./uploads.mjs\";\nimport { checkFileSupport } from \"./uploads.mjs\";\n/**\n * This check adds the arrayBuffer() method type because it is available and used at runtime\n */\nconst isBlobLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.size === 'number' &&\n    typeof value.type === 'string' &&\n    typeof value.text === 'function' &&\n    typeof value.slice === 'function' &&\n    typeof value.arrayBuffer === 'function';\n/**\n * This check adds the arrayBuffer() method type because it is available and used at runtime\n */\nconst isFileLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.name === 'string' &&\n    typeof value.lastModified === 'number' &&\n    isBlobLike(value);\nconst isResponseLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.url === 'string' &&\n    typeof value.blob === 'function';\n/**\n * Helper for creating a {@link File} to pass to an SDK upload method from a variety of different data formats\n * @param value the raw content of the file.  Can be an {@link Uploadable}, {@link BlobLikePart}, or {@link AsyncIterable} of {@link BlobLikePart}s\n * @param {string=} name the name of the file. If omitted, toFile will try to determine a file name from bits if possible\n * @param {Object=} options additional properties\n * @param {string=} options.type the MIME type of the content\n * @param {number=} options.lastModified the last modified timestamp\n * @returns a {@link File} with the given properties\n */\nexport async function toFile(value, name, options) {\n    checkFileSupport();\n    // If it's a promise, resolve it.\n    value = await value;\n    // If we've been given a `File` we don't need to do anything\n    if (isFileLike(value)) {\n        if (value instanceof File) {\n            return value;\n        }\n        return makeFile([await value.arrayBuffer()], value.name);\n    }\n    if (isResponseLike(value)) {\n        const blob = await value.blob();\n        name || (name = new URL(value.url).pathname.split(/[\\\\/]/).pop());\n        return makeFile(await getBytes(blob), name, options);\n    }\n    const parts = await getBytes(value);\n    name || (name = getName(value));\n    if (!options?.type) {\n        const type = parts.find((part) => typeof part === 'object' && 'type' in part && part.type);\n        if (typeof type === 'string') {\n            options = { ...options, type };\n        }\n    }\n    return makeFile(parts, name, options);\n}\nasync function getBytes(value) {\n    let parts = [];\n    if (typeof value === 'string' ||\n        ArrayBuffer.isView(value) || // includes Uint8Array, Buffer, etc.\n        value instanceof ArrayBuffer) {\n        parts.push(value);\n    }\n    else if (isBlobLike(value)) {\n        parts.push(value instanceof Blob ? value : await value.arrayBuffer());\n    }\n    else if (isAsyncIterable(value) // includes Readable, ReadableStream, etc.\n    ) {\n        for await (const chunk of value) {\n            parts.push(...(await getBytes(chunk))); // TODO, consider validating?\n        }\n    }\n    else {\n        const constructor = value?.constructor?.name;\n        throw new Error(`Unexpected data type: ${typeof value}${constructor ? `; constructor: ${constructor}` : ''}${propsForError(value)}`);\n    }\n    return parts;\n}\nfunction propsForError(value) {\n    if (typeof value !== 'object' || value === null)\n        return '';\n    const props = Object.getOwnPropertyNames(value);\n    return `; props: [${props.map((p) => `\"${p}\"`).join(', ')}]`;\n}\n//# sourceMappingURL=to-file.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nexport class APIResource {\n    constructor(client) {\n        this._client = client;\n    }\n}\n//# sourceMappingURL=resource.mjs.map","import { OpenAIError } from \"../../core/error.mjs\";\n/**\n * Percent-encode everything that isn't safe to have in a path without encoding safe chars.\n *\n * Taken from https://datatracker.ietf.org/doc/html/rfc3986#section-3.3:\n * > unreserved  = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n * > sub-delims  = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\" / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n * > pchar       = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n */\nexport function encodeURIPath(str) {\n    return str.replace(/[^A-Za-z0-9\\-._~!$&'()*+,;=:@]+/g, encodeURIComponent);\n}\nconst EMPTY = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.create(null));\nexport const createPathTagFunction = (pathEncoder = encodeURIPath) => function path(statics, ...params) {\n    // If there are no params, no processing is needed.\n    if (statics.length === 1)\n        return statics[0];\n    let postPath = false;\n    const invalidSegments = [];\n    const path = statics.reduce((previousValue, currentValue, index) => {\n        if (/[?#]/.test(currentValue)) {\n            postPath = true;\n        }\n        const value = params[index];\n        let encoded = (postPath ? encodeURIComponent : pathEncoder)('' + value);\n        if (index !== params.length &&\n            (value == null ||\n                (typeof value === 'object' &&\n                    // handle values from other realms\n                    value.toString ===\n                        Object.getPrototypeOf(Object.getPrototypeOf(value.hasOwnProperty ?? EMPTY) ?? EMPTY)\n                            ?.toString))) {\n            encoded = value + '';\n            invalidSegments.push({\n                start: previousValue.length + currentValue.length,\n                length: encoded.length,\n                error: `Value of type ${Object.prototype.toString\n                    .call(value)\n                    .slice(8, -1)} is not a valid path parameter`,\n            });\n        }\n        return previousValue + currentValue + (index === params.length ? '' : encoded);\n    }, '');\n    const pathOnly = path.split(/[?#]/, 1)[0];\n    const invalidSegmentPattern = /(?<=^|\\/)(?:\\.|%2e){1,2}(?=\\/|$)/gi;\n    let match;\n    // Find all invalid segments\n    while ((match = invalidSegmentPattern.exec(pathOnly)) !== null) {\n        invalidSegments.push({\n            start: match.index,\n            length: match[0].length,\n            error: `Value \"${match[0]}\" can\\'t be safely passed as a path parameter`,\n        });\n    }\n    invalidSegments.sort((a, b) => a.start - b.start);\n    if (invalidSegments.length > 0) {\n        let lastEnd = 0;\n        const underline = invalidSegments.reduce((acc, segment) => {\n            const spaces = ' '.repeat(segment.start - lastEnd);\n            const arrows = '^'.repeat(segment.length);\n            lastEnd = segment.start + segment.length;\n            return acc + spaces + arrows;\n        }, '');\n        throw new OpenAIError(`Path parameters result in path with invalid segments:\\n${invalidSegments\n            .map((e) => e.error)\n            .join('\\n')}\\n${path}\\n${underline}`);\n    }\n    return path;\n};\n/**\n * URI-encodes path params and ensures no unsafe /./ or /../ path segments are introduced.\n */\nexport const path = /* @__PURE__ */ createPathTagFunction(encodeURIPath);\n//# sourceMappingURL=path.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nexport class Messages extends APIResource {\n    /**\n     * Get the messages in a stored chat completion. Only Chat Completions that have\n     * been created with the `store` parameter set to `true` will be returned.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const chatCompletionStoreMessage of client.chat.completions.messages.list(\n     *   'completion_id',\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */\n    list(completionID, query = {}, options) {\n        return this._client.getAPIList(path `/chat/completions/${completionID}/messages`, (CursorPage), { query, ...options });\n    }\n}\n//# sourceMappingURL=messages.mjs.map","import { ContentFilterFinishReasonError, LengthFinishReasonError, OpenAIError } from \"../error.mjs\";\nexport function isChatCompletionFunctionTool(tool) {\n    return tool !== undefined && 'function' in tool && tool.function !== undefined;\n}\nexport function makeParseableResponseFormat(response_format, parser) {\n    const obj = { ...response_format };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: 'auto-parseable-response-format',\n            enumerable: false,\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false,\n        },\n    });\n    return obj;\n}\nexport function makeParseableTextFormat(response_format, parser) {\n    const obj = { ...response_format };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: 'auto-parseable-response-format',\n            enumerable: false,\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false,\n        },\n    });\n    return obj;\n}\nexport function isAutoParsableResponseFormat(response_format) {\n    return response_format?.['$brand'] === 'auto-parseable-response-format';\n}\nexport function makeParseableTool(tool, { parser, callback, }) {\n    const obj = { ...tool };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: 'auto-parseable-tool',\n            enumerable: false,\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false,\n        },\n        $callback: {\n            value: callback,\n            enumerable: false,\n        },\n    });\n    return obj;\n}\nexport function isAutoParsableTool(tool) {\n    return tool?.['$brand'] === 'auto-parseable-tool';\n}\nexport function maybeParseChatCompletion(completion, params) {\n    if (!params || !hasAutoParseableInput(params)) {\n        return {\n            ...completion,\n            choices: completion.choices.map((choice) => {\n                assertToolCallsAreChatCompletionFunctionToolCalls(choice.message.tool_calls);\n                return {\n                    ...choice,\n                    message: {\n                        ...choice.message,\n                        parsed: null,\n                        ...(choice.message.tool_calls ?\n                            {\n                                tool_calls: choice.message.tool_calls,\n                            }\n                            : undefined),\n                    },\n                };\n            }),\n        };\n    }\n    return parseChatCompletion(completion, params);\n}\nexport function parseChatCompletion(completion, params) {\n    const choices = completion.choices.map((choice) => {\n        if (choice.finish_reason === 'length') {\n            throw new LengthFinishReasonError();\n        }\n        if (choice.finish_reason === 'content_filter') {\n            throw new ContentFilterFinishReasonError();\n        }\n        assertToolCallsAreChatCompletionFunctionToolCalls(choice.message.tool_calls);\n        return {\n            ...choice,\n            message: {\n                ...choice.message,\n                ...(choice.message.tool_calls ?\n                    {\n                        tool_calls: choice.message.tool_calls?.map((toolCall) => parseToolCall(params, toolCall)) ?? undefined,\n                    }\n                    : undefined),\n                parsed: choice.message.content && !choice.message.refusal ?\n                    parseResponseFormat(params, choice.message.content)\n                    : null,\n            },\n        };\n    });\n    return { ...completion, choices };\n}\nfunction parseResponseFormat(params, content) {\n    if (params.response_format?.type !== 'json_schema') {\n        return null;\n    }\n    if (params.response_format?.type === 'json_schema') {\n        if ('$parseRaw' in params.response_format) {\n            const response_format = params.response_format;\n            return response_format.$parseRaw(content);\n        }\n        return JSON.parse(content);\n    }\n    return null;\n}\nfunction parseToolCall(params, toolCall) {\n    const inputTool = params.tools?.find((inputTool) => isChatCompletionFunctionTool(inputTool) && inputTool.function?.name === toolCall.function.name); // TS doesn't narrow based on isChatCompletionTool\n    return {\n        ...toolCall,\n        function: {\n            ...toolCall.function,\n            parsed_arguments: isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCall.function.arguments)\n                : inputTool?.function.strict ? JSON.parse(toolCall.function.arguments)\n                    : null,\n        },\n    };\n}\nexport function shouldParseToolCall(params, toolCall) {\n    if (!params || !('tools' in params) || !params.tools) {\n        return false;\n    }\n    const inputTool = params.tools?.find((inputTool) => isChatCompletionFunctionTool(inputTool) && inputTool.function?.name === toolCall.function.name);\n    return (isChatCompletionFunctionTool(inputTool) &&\n        (isAutoParsableTool(inputTool) || inputTool?.function.strict || false));\n}\nexport function hasAutoParseableInput(params) {\n    if (isAutoParsableResponseFormat(params.response_format)) {\n        return true;\n    }\n    return (params.tools?.some((t) => isAutoParsableTool(t) || (t.type === 'function' && t.function.strict === true)) ?? false);\n}\nexport function assertToolCallsAreChatCompletionFunctionToolCalls(toolCalls) {\n    for (const toolCall of toolCalls || []) {\n        if (toolCall.type !== 'function') {\n            throw new OpenAIError(`Currently only \\`function\\` tool calls are supported; Received \\`${toolCall.type}\\``);\n        }\n    }\n}\nexport function validateInputTools(tools) {\n    for (const tool of tools ?? []) {\n        if (tool.type !== 'function') {\n            throw new OpenAIError(`Currently only \\`function\\` tool types support auto-parsing; Received \\`${tool.type}\\``);\n        }\n        if (tool.function.strict !== true) {\n            throw new OpenAIError(`The \\`${tool.function.name}\\` tool is not marked with \\`strict: true\\`. Only strict function tools can be auto-parsed`);\n        }\n    }\n}\n//# sourceMappingURL=parser.mjs.map","export const isAssistantMessage = (message) => {\n    return message?.role === 'assistant';\n};\nexport const isToolMessage = (message) => {\n    return message?.role === 'tool';\n};\nexport function isPresent(obj) {\n    return obj != null;\n}\n//# sourceMappingURL=chatCompletionUtils.mjs.map","var _EventStream_instances, _EventStream_connectedPromise, _EventStream_resolveConnectedPromise, _EventStream_rejectConnectedPromise, _EventStream_endPromise, _EventStream_resolveEndPromise, _EventStream_rejectEndPromise, _EventStream_listeners, _EventStream_ended, _EventStream_errored, _EventStream_aborted, _EventStream_catchingPromiseCreated, _EventStream_handleError;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"../internal/tslib.mjs\";\nimport { APIUserAbortError, OpenAIError } from \"../error.mjs\";\nexport class EventStream {\n    constructor() {\n        _EventStream_instances.add(this);\n        this.controller = new AbortController();\n        _EventStream_connectedPromise.set(this, void 0);\n        _EventStream_resolveConnectedPromise.set(this, () => { });\n        _EventStream_rejectConnectedPromise.set(this, () => { });\n        _EventStream_endPromise.set(this, void 0);\n        _EventStream_resolveEndPromise.set(this, () => { });\n        _EventStream_rejectEndPromise.set(this, () => { });\n        _EventStream_listeners.set(this, {});\n        _EventStream_ended.set(this, false);\n        _EventStream_errored.set(this, false);\n        _EventStream_aborted.set(this, false);\n        _EventStream_catchingPromiseCreated.set(this, false);\n        __classPrivateFieldSet(this, _EventStream_connectedPromise, new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _EventStream_resolveConnectedPromise, resolve, \"f\");\n            __classPrivateFieldSet(this, _EventStream_rejectConnectedPromise, reject, \"f\");\n        }), \"f\");\n        __classPrivateFieldSet(this, _EventStream_endPromise, new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _EventStream_resolveEndPromise, resolve, \"f\");\n            __classPrivateFieldSet(this, _EventStream_rejectEndPromise, reject, \"f\");\n        }), \"f\");\n        // Don't let these promises cause unhandled rejection errors.\n        // we will manually cause an unhandled rejection error later\n        // if the user hasn't registered any error listener or called\n        // any promise-returning method.\n        __classPrivateFieldGet(this, _EventStream_connectedPromise, \"f\").catch(() => { });\n        __classPrivateFieldGet(this, _EventStream_endPromise, \"f\").catch(() => { });\n    }\n    _run(executor) {\n        // Unfortunately if we call `executor()` immediately we get runtime errors about\n        // references to `this` before the `super()` constructor call returns.\n        setTimeout(() => {\n            executor().then(() => {\n                this._emitFinal();\n                this._emit('end');\n            }, __classPrivateFieldGet(this, _EventStream_instances, \"m\", _EventStream_handleError).bind(this));\n        }, 0);\n    }\n    _connected() {\n        if (this.ended)\n            return;\n        __classPrivateFieldGet(this, _EventStream_resolveConnectedPromise, \"f\").call(this);\n        this._emit('connect');\n    }\n    get ended() {\n        return __classPrivateFieldGet(this, _EventStream_ended, \"f\");\n    }\n    get errored() {\n        return __classPrivateFieldGet(this, _EventStream_errored, \"f\");\n    }\n    get aborted() {\n        return __classPrivateFieldGet(this, _EventStream_aborted, \"f\");\n    }\n    abort() {\n        this.controller.abort();\n    }\n    /**\n     * Adds the listener function to the end of the listeners array for the event.\n     * No checks are made to see if the listener has already been added. Multiple calls passing\n     * the same combination of event and listener will result in the listener being added, and\n     * called, multiple times.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    on(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] || (__classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] = []);\n        listeners.push({ listener });\n        return this;\n    }\n    /**\n     * Removes the specified listener from the listener array for the event.\n     * off() will remove, at most, one instance of a listener from the listener array. If any single\n     * listener has been added multiple times to the listener array for the specified event, then\n     * off() must be called multiple times to remove each instance.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    off(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event];\n        if (!listeners)\n            return this;\n        const index = listeners.findIndex((l) => l.listener === listener);\n        if (index >= 0)\n            listeners.splice(index, 1);\n        return this;\n    }\n    /**\n     * Adds a one-time listener function for the event. The next time the event is triggered,\n     * this listener is removed and then invoked.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    once(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] || (__classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] = []);\n        listeners.push({ listener, once: true });\n        return this;\n    }\n    /**\n     * This is similar to `.once()`, but returns a Promise that resolves the next time\n     * the event is triggered, instead of calling a listener callback.\n     * @returns a Promise that resolves the next time given event is triggered,\n     * or rejects if an error is emitted.  (If you request the 'error' event,\n     * returns a promise that resolves with the error).\n     *\n     * Example:\n     *\n     *   const message = await stream.emitted('message') // rejects if the stream errors\n     */\n    emitted(event) {\n        return new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _EventStream_catchingPromiseCreated, true, \"f\");\n            if (event !== 'error')\n                this.once('error', reject);\n            this.once(event, resolve);\n        });\n    }\n    async done() {\n        __classPrivateFieldSet(this, _EventStream_catchingPromiseCreated, true, \"f\");\n        await __classPrivateFieldGet(this, _EventStream_endPromise, \"f\");\n    }\n    _emit(event, ...args) {\n        // make sure we don't emit any events after end\n        if (__classPrivateFieldGet(this, _EventStream_ended, \"f\")) {\n            return;\n        }\n        if (event === 'end') {\n            __classPrivateFieldSet(this, _EventStream_ended, true, \"f\");\n            __classPrivateFieldGet(this, _EventStream_resolveEndPromise, \"f\").call(this);\n        }\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event];\n        if (listeners) {\n            __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] = listeners.filter((l) => !l.once);\n            listeners.forEach(({ listener }) => listener(...args));\n        }\n        if (event === 'abort') {\n            const error = args[0];\n            if (!__classPrivateFieldGet(this, _EventStream_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                Promise.reject(error);\n            }\n            __classPrivateFieldGet(this, _EventStream_rejectConnectedPromise, \"f\").call(this, error);\n            __classPrivateFieldGet(this, _EventStream_rejectEndPromise, \"f\").call(this, error);\n            this._emit('end');\n            return;\n        }\n        if (event === 'error') {\n            // NOTE: _emit('error', error) should only be called from #handleError().\n            const error = args[0];\n            if (!__classPrivateFieldGet(this, _EventStream_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                // Trigger an unhandled rejection if the user hasn't registered any error handlers.\n                // If you are seeing stack traces here, make sure to handle errors via either:\n                // - runner.on('error', () => ...)\n                // - await runner.done()\n                // - await runner.finalChatCompletion()\n                // - etc.\n                Promise.reject(error);\n            }\n            __classPrivateFieldGet(this, _EventStream_rejectConnectedPromise, \"f\").call(this, error);\n            __classPrivateFieldGet(this, _EventStream_rejectEndPromise, \"f\").call(this, error);\n            this._emit('end');\n        }\n    }\n    _emitFinal() { }\n}\n_EventStream_connectedPromise = new WeakMap(), _EventStream_resolveConnectedPromise = new WeakMap(), _EventStream_rejectConnectedPromise = new WeakMap(), _EventStream_endPromise = new WeakMap(), _EventStream_resolveEndPromise = new WeakMap(), _EventStream_rejectEndPromise = new WeakMap(), _EventStream_listeners = new WeakMap(), _EventStream_ended = new WeakMap(), _EventStream_errored = new WeakMap(), _EventStream_aborted = new WeakMap(), _EventStream_catchingPromiseCreated = new WeakMap(), _EventStream_instances = new WeakSet(), _EventStream_handleError = function _EventStream_handleError(error) {\n    __classPrivateFieldSet(this, _EventStream_errored, true, \"f\");\n    if (error instanceof Error && error.name === 'AbortError') {\n        error = new APIUserAbortError();\n    }\n    if (error instanceof APIUserAbortError) {\n        __classPrivateFieldSet(this, _EventStream_aborted, true, \"f\");\n        return this._emit('abort', error);\n    }\n    if (error instanceof OpenAIError) {\n        return this._emit('error', error);\n    }\n    if (error instanceof Error) {\n        const openAIError = new OpenAIError(error.message);\n        // @ts-ignore\n        openAIError.cause = error;\n        return this._emit('error', openAIError);\n    }\n    return this._emit('error', new OpenAIError(String(error)));\n};\n//# sourceMappingURL=EventStream.mjs.map","export function isRunnableFunctionWithParse(fn) {\n    return typeof fn.parse === 'function';\n}\n/**\n * This is helper class for passing a `function` and `parse` where the `function`\n * argument type matches the `parse` return type.\n */\nexport class ParsingToolFunction {\n    constructor(input) {\n        this.type = 'function';\n        this.function = input;\n    }\n}\n//# sourceMappingURL=RunnableFunction.mjs.map","var _AbstractChatCompletionRunner_instances, _AbstractChatCompletionRunner_getFinalContent, _AbstractChatCompletionRunner_getFinalMessage, _AbstractChatCompletionRunner_getFinalFunctionToolCall, _AbstractChatCompletionRunner_getFinalFunctionToolCallResult, _AbstractChatCompletionRunner_calculateTotalUsage, _AbstractChatCompletionRunner_validateParams, _AbstractChatCompletionRunner_stringifyFunctionCallResult;\nimport { __classPrivateFieldGet } from \"../internal/tslib.mjs\";\nimport { OpenAIError } from \"../error.mjs\";\nimport { isAutoParsableTool, parseChatCompletion } from \"../lib/parser.mjs\";\nimport { isAssistantMessage, isToolMessage } from \"./chatCompletionUtils.mjs\";\nimport { EventStream } from \"./EventStream.mjs\";\nimport { isRunnableFunctionWithParse, } from \"./RunnableFunction.mjs\";\nconst DEFAULT_MAX_CHAT_COMPLETIONS = 10;\nexport class AbstractChatCompletionRunner extends EventStream {\n    constructor() {\n        super(...arguments);\n        _AbstractChatCompletionRunner_instances.add(this);\n        this._chatCompletions = [];\n        this.messages = [];\n    }\n    _addChatCompletion(chatCompletion) {\n        this._chatCompletions.push(chatCompletion);\n        this._emit('chatCompletion', chatCompletion);\n        const message = chatCompletion.choices[0]?.message;\n        if (message)\n            this._addMessage(message);\n        return chatCompletion;\n    }\n    _addMessage(message, emit = true) {\n        if (!('content' in message))\n            message.content = null;\n        this.messages.push(message);\n        if (emit) {\n            this._emit('message', message);\n            if (isToolMessage(message) && message.content) {\n                // Note, this assumes that {role: 'tool', content: …} is always the result of a call of tool of type=function.\n                this._emit('functionToolCallResult', message.content);\n            }\n            else if (isAssistantMessage(message) && message.tool_calls) {\n                for (const tool_call of message.tool_calls) {\n                    if (tool_call.type === 'function') {\n                        this._emit('functionToolCall', tool_call.function);\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * @returns a promise that resolves with the final ChatCompletion, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletion.\n     */\n    async finalChatCompletion() {\n        await this.done();\n        const completion = this._chatCompletions[this._chatCompletions.length - 1];\n        if (!completion)\n            throw new OpenAIError('stream ended without producing a ChatCompletion');\n        return completion;\n    }\n    /**\n     * @returns a promise that resolves with the content of the final ChatCompletionMessage, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalContent() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalContent).call(this);\n    }\n    /**\n     * @returns a promise that resolves with the the final assistant ChatCompletionMessage response,\n     * or rejects if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalMessage() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this);\n    }\n    /**\n     * @returns a promise that resolves with the content of the final FunctionCall, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalFunctionToolCall() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionToolCall).call(this);\n    }\n    async finalFunctionToolCallResult() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionToolCallResult).call(this);\n    }\n    async totalUsage() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_calculateTotalUsage).call(this);\n    }\n    allChatCompletions() {\n        return [...this._chatCompletions];\n    }\n    _emitFinal() {\n        const completion = this._chatCompletions[this._chatCompletions.length - 1];\n        if (completion)\n            this._emit('finalChatCompletion', completion);\n        const finalMessage = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this);\n        if (finalMessage)\n            this._emit('finalMessage', finalMessage);\n        const finalContent = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalContent).call(this);\n        if (finalContent)\n            this._emit('finalContent', finalContent);\n        const finalFunctionCall = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionToolCall).call(this);\n        if (finalFunctionCall)\n            this._emit('finalFunctionToolCall', finalFunctionCall);\n        const finalFunctionCallResult = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionToolCallResult).call(this);\n        if (finalFunctionCallResult != null)\n            this._emit('finalFunctionToolCallResult', finalFunctionCallResult);\n        if (this._chatCompletions.some((c) => c.usage)) {\n            this._emit('totalUsage', __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_calculateTotalUsage).call(this));\n        }\n    }\n    async _createChatCompletion(client, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_validateParams).call(this, params);\n        const chatCompletion = await client.chat.completions.create({ ...params, stream: false }, { ...options, signal: this.controller.signal });\n        this._connected();\n        return this._addChatCompletion(parseChatCompletion(chatCompletion, params));\n    }\n    async _runChatCompletion(client, params, options) {\n        for (const message of params.messages) {\n            this._addMessage(message, false);\n        }\n        return await this._createChatCompletion(client, params, options);\n    }\n    async _runTools(client, params, options) {\n        const role = 'tool';\n        const { tool_choice = 'auto', stream, ...restParams } = params;\n        const singleFunctionToCall = typeof tool_choice !== 'string' && tool_choice.type === 'function' && tool_choice?.function?.name;\n        const { maxChatCompletions = DEFAULT_MAX_CHAT_COMPLETIONS } = options || {};\n        // TODO(someday): clean this logic up\n        const inputTools = params.tools.map((tool) => {\n            if (isAutoParsableTool(tool)) {\n                if (!tool.$callback) {\n                    throw new OpenAIError('Tool given to `.runTools()` that does not have an associated function');\n                }\n                return {\n                    type: 'function',\n                    function: {\n                        function: tool.$callback,\n                        name: tool.function.name,\n                        description: tool.function.description || '',\n                        parameters: tool.function.parameters,\n                        parse: tool.$parseRaw,\n                        strict: true,\n                    },\n                };\n            }\n            return tool;\n        });\n        const functionsByName = {};\n        for (const f of inputTools) {\n            if (f.type === 'function') {\n                functionsByName[f.function.name || f.function.function.name] = f.function;\n            }\n        }\n        const tools = 'tools' in params ?\n            inputTools.map((t) => t.type === 'function' ?\n                {\n                    type: 'function',\n                    function: {\n                        name: t.function.name || t.function.function.name,\n                        parameters: t.function.parameters,\n                        description: t.function.description,\n                        strict: t.function.strict,\n                    },\n                }\n                : t)\n            : undefined;\n        for (const message of params.messages) {\n            this._addMessage(message, false);\n        }\n        for (let i = 0; i < maxChatCompletions; ++i) {\n            const chatCompletion = await this._createChatCompletion(client, {\n                ...restParams,\n                tool_choice,\n                tools,\n                messages: [...this.messages],\n            }, options);\n            const message = chatCompletion.choices[0]?.message;\n            if (!message) {\n                throw new OpenAIError(`missing message in ChatCompletion response`);\n            }\n            if (!message.tool_calls?.length) {\n                return;\n            }\n            for (const tool_call of message.tool_calls) {\n                if (tool_call.type !== 'function')\n                    continue;\n                const tool_call_id = tool_call.id;\n                const { name, arguments: args } = tool_call.function;\n                const fn = functionsByName[name];\n                if (!fn) {\n                    const content = `Invalid tool_call: ${JSON.stringify(name)}. Available options are: ${Object.keys(functionsByName)\n                        .map((name) => JSON.stringify(name))\n                        .join(', ')}. Please try again`;\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                else if (singleFunctionToCall && singleFunctionToCall !== name) {\n                    const content = `Invalid tool_call: ${JSON.stringify(name)}. ${JSON.stringify(singleFunctionToCall)} requested. Please try again`;\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                let parsed;\n                try {\n                    parsed = isRunnableFunctionWithParse(fn) ? await fn.parse(args) : args;\n                }\n                catch (error) {\n                    const content = error instanceof Error ? error.message : String(error);\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                // @ts-expect-error it can't rule out `never` type.\n                const rawContent = await fn.function(parsed, this);\n                const content = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_stringifyFunctionCallResult).call(this, rawContent);\n                this._addMessage({ role, tool_call_id, content });\n                if (singleFunctionToCall) {\n                    return;\n                }\n            }\n        }\n        return;\n    }\n}\n_AbstractChatCompletionRunner_instances = new WeakSet(), _AbstractChatCompletionRunner_getFinalContent = function _AbstractChatCompletionRunner_getFinalContent() {\n    return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this).content ?? null;\n}, _AbstractChatCompletionRunner_getFinalMessage = function _AbstractChatCompletionRunner_getFinalMessage() {\n    let i = this.messages.length;\n    while (i-- > 0) {\n        const message = this.messages[i];\n        if (isAssistantMessage(message)) {\n            // TODO: support audio here\n            const ret = {\n                ...message,\n                content: message.content ?? null,\n                refusal: message.refusal ?? null,\n            };\n            return ret;\n        }\n    }\n    throw new OpenAIError('stream ended without producing a ChatCompletionMessage with role=assistant');\n}, _AbstractChatCompletionRunner_getFinalFunctionToolCall = function _AbstractChatCompletionRunner_getFinalFunctionToolCall() {\n    for (let i = this.messages.length - 1; i >= 0; i--) {\n        const message = this.messages[i];\n        if (isAssistantMessage(message) && message?.tool_calls?.length) {\n            return message.tool_calls.filter((x) => x.type === 'function').at(-1)?.function;\n        }\n    }\n    return;\n}, _AbstractChatCompletionRunner_getFinalFunctionToolCallResult = function _AbstractChatCompletionRunner_getFinalFunctionToolCallResult() {\n    for (let i = this.messages.length - 1; i >= 0; i--) {\n        const message = this.messages[i];\n        if (isToolMessage(message) &&\n            message.content != null &&\n            typeof message.content === 'string' &&\n            this.messages.some((x) => x.role === 'assistant' &&\n                x.tool_calls?.some((y) => y.type === 'function' && y.id === message.tool_call_id))) {\n            return message.content;\n        }\n    }\n    return;\n}, _AbstractChatCompletionRunner_calculateTotalUsage = function _AbstractChatCompletionRunner_calculateTotalUsage() {\n    const total = {\n        completion_tokens: 0,\n        prompt_tokens: 0,\n        total_tokens: 0,\n    };\n    for (const { usage } of this._chatCompletions) {\n        if (usage) {\n            total.completion_tokens += usage.completion_tokens;\n            total.prompt_tokens += usage.prompt_tokens;\n            total.total_tokens += usage.total_tokens;\n        }\n    }\n    return total;\n}, _AbstractChatCompletionRunner_validateParams = function _AbstractChatCompletionRunner_validateParams(params) {\n    if (params.n != null && params.n > 1) {\n        throw new OpenAIError('ChatCompletion convenience helpers only support n=1 at this time. To use n>1, please use chat.completions.create() directly.');\n    }\n}, _AbstractChatCompletionRunner_stringifyFunctionCallResult = function _AbstractChatCompletionRunner_stringifyFunctionCallResult(rawContent) {\n    return (typeof rawContent === 'string' ? rawContent\n        : rawContent === undefined ? 'undefined'\n            : JSON.stringify(rawContent));\n};\n//# sourceMappingURL=AbstractChatCompletionRunner.mjs.map","import { AbstractChatCompletionRunner, } from \"./AbstractChatCompletionRunner.mjs\";\nimport { isAssistantMessage } from \"./chatCompletionUtils.mjs\";\nexport class ChatCompletionRunner extends AbstractChatCompletionRunner {\n    static runTools(client, params, options) {\n        const runner = new ChatCompletionRunner();\n        const opts = {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runTools' },\n        };\n        runner._run(() => runner._runTools(client, params, opts));\n        return runner;\n    }\n    _addMessage(message, emit = true) {\n        super._addMessage(message, emit);\n        if (isAssistantMessage(message) && message.content) {\n            this._emit('content', message.content);\n        }\n    }\n}\n//# sourceMappingURL=ChatCompletionRunner.mjs.map","const STR = 0b000000001;\nconst NUM = 0b000000010;\nconst ARR = 0b000000100;\nconst OBJ = 0b000001000;\nconst NULL = 0b000010000;\nconst BOOL = 0b000100000;\nconst NAN = 0b001000000;\nconst INFINITY = 0b010000000;\nconst MINUS_INFINITY = 0b100000000;\nconst INF = INFINITY | MINUS_INFINITY;\nconst SPECIAL = NULL | BOOL | INF | NAN;\nconst ATOM = STR | NUM | SPECIAL;\nconst COLLECTION = ARR | OBJ;\nconst ALL = ATOM | COLLECTION;\nconst Allow = {\n    STR,\n    NUM,\n    ARR,\n    OBJ,\n    NULL,\n    BOOL,\n    NAN,\n    INFINITY,\n    MINUS_INFINITY,\n    INF,\n    SPECIAL,\n    ATOM,\n    COLLECTION,\n    ALL,\n};\n// The JSON string segment was unable to be parsed completely\nclass PartialJSON extends Error {\n}\nclass MalformedJSON extends Error {\n}\n/**\n * Parse incomplete JSON\n * @param {string} jsonString Partial JSON to be parsed\n * @param {number} allowPartial Specify what types are allowed to be partial, see {@link Allow} for details\n * @returns The parsed JSON\n * @throws {PartialJSON} If the JSON is incomplete (related to the `allow` parameter)\n * @throws {MalformedJSON} If the JSON is malformed\n */\nfunction parseJSON(jsonString, allowPartial = Allow.ALL) {\n    if (typeof jsonString !== 'string') {\n        throw new TypeError(`expecting str, got ${typeof jsonString}`);\n    }\n    if (!jsonString.trim()) {\n        throw new Error(`${jsonString} is empty`);\n    }\n    return _parseJSON(jsonString.trim(), allowPartial);\n}\nconst _parseJSON = (jsonString, allow) => {\n    const length = jsonString.length;\n    let index = 0;\n    const markPartialJSON = (msg) => {\n        throw new PartialJSON(`${msg} at position ${index}`);\n    };\n    const throwMalformedError = (msg) => {\n        throw new MalformedJSON(`${msg} at position ${index}`);\n    };\n    const parseAny = () => {\n        skipBlank();\n        if (index >= length)\n            markPartialJSON('Unexpected end of input');\n        if (jsonString[index] === '\"')\n            return parseStr();\n        if (jsonString[index] === '{')\n            return parseObj();\n        if (jsonString[index] === '[')\n            return parseArr();\n        if (jsonString.substring(index, index + 4) === 'null' ||\n            (Allow.NULL & allow && length - index < 4 && 'null'.startsWith(jsonString.substring(index)))) {\n            index += 4;\n            return null;\n        }\n        if (jsonString.substring(index, index + 4) === 'true' ||\n            (Allow.BOOL & allow && length - index < 4 && 'true'.startsWith(jsonString.substring(index)))) {\n            index += 4;\n            return true;\n        }\n        if (jsonString.substring(index, index + 5) === 'false' ||\n            (Allow.BOOL & allow && length - index < 5 && 'false'.startsWith(jsonString.substring(index)))) {\n            index += 5;\n            return false;\n        }\n        if (jsonString.substring(index, index + 8) === 'Infinity' ||\n            (Allow.INFINITY & allow && length - index < 8 && 'Infinity'.startsWith(jsonString.substring(index)))) {\n            index += 8;\n            return Infinity;\n        }\n        if (jsonString.substring(index, index + 9) === '-Infinity' ||\n            (Allow.MINUS_INFINITY & allow &&\n                1 < length - index &&\n                length - index < 9 &&\n                '-Infinity'.startsWith(jsonString.substring(index)))) {\n            index += 9;\n            return -Infinity;\n        }\n        if (jsonString.substring(index, index + 3) === 'NaN' ||\n            (Allow.NAN & allow && length - index < 3 && 'NaN'.startsWith(jsonString.substring(index)))) {\n            index += 3;\n            return NaN;\n        }\n        return parseNum();\n    };\n    const parseStr = () => {\n        const start = index;\n        let escape = false;\n        index++; // skip initial quote\n        while (index < length && (jsonString[index] !== '\"' || (escape && jsonString[index - 1] === '\\\\'))) {\n            escape = jsonString[index] === '\\\\' ? !escape : false;\n            index++;\n        }\n        if (jsonString.charAt(index) == '\"') {\n            try {\n                return JSON.parse(jsonString.substring(start, ++index - Number(escape)));\n            }\n            catch (e) {\n                throwMalformedError(String(e));\n            }\n        }\n        else if (Allow.STR & allow) {\n            try {\n                return JSON.parse(jsonString.substring(start, index - Number(escape)) + '\"');\n            }\n            catch (e) {\n                // SyntaxError: Invalid escape sequence\n                return JSON.parse(jsonString.substring(start, jsonString.lastIndexOf('\\\\')) + '\"');\n            }\n        }\n        markPartialJSON('Unterminated string literal');\n    };\n    const parseObj = () => {\n        index++; // skip initial brace\n        skipBlank();\n        const obj = {};\n        try {\n            while (jsonString[index] !== '}') {\n                skipBlank();\n                if (index >= length && Allow.OBJ & allow)\n                    return obj;\n                const key = parseStr();\n                skipBlank();\n                index++; // skip colon\n                try {\n                    const value = parseAny();\n                    Object.defineProperty(obj, key, { value, writable: true, enumerable: true, configurable: true });\n                }\n                catch (e) {\n                    if (Allow.OBJ & allow)\n                        return obj;\n                    else\n                        throw e;\n                }\n                skipBlank();\n                if (jsonString[index] === ',')\n                    index++; // skip comma\n            }\n        }\n        catch (e) {\n            if (Allow.OBJ & allow)\n                return obj;\n            else\n                markPartialJSON(\"Expected '}' at end of object\");\n        }\n        index++; // skip final brace\n        return obj;\n    };\n    const parseArr = () => {\n        index++; // skip initial bracket\n        const arr = [];\n        try {\n            while (jsonString[index] !== ']') {\n                arr.push(parseAny());\n                skipBlank();\n                if (jsonString[index] === ',') {\n                    index++; // skip comma\n                }\n            }\n        }\n        catch (e) {\n            if (Allow.ARR & allow) {\n                return arr;\n            }\n            markPartialJSON(\"Expected ']' at end of array\");\n        }\n        index++; // skip final bracket\n        return arr;\n    };\n    const parseNum = () => {\n        if (index === 0) {\n            if (jsonString === '-' && Allow.NUM & allow)\n                markPartialJSON(\"Not sure what '-' is\");\n            try {\n                return JSON.parse(jsonString);\n            }\n            catch (e) {\n                if (Allow.NUM & allow) {\n                    try {\n                        if ('.' === jsonString[jsonString.length - 1])\n                            return JSON.parse(jsonString.substring(0, jsonString.lastIndexOf('.')));\n                        return JSON.parse(jsonString.substring(0, jsonString.lastIndexOf('e')));\n                    }\n                    catch (e) { }\n                }\n                throwMalformedError(String(e));\n            }\n        }\n        const start = index;\n        if (jsonString[index] === '-')\n            index++;\n        while (jsonString[index] && !',]}'.includes(jsonString[index]))\n            index++;\n        if (index == length && !(Allow.NUM & allow))\n            markPartialJSON('Unterminated number literal');\n        try {\n            return JSON.parse(jsonString.substring(start, index));\n        }\n        catch (e) {\n            if (jsonString.substring(start, index) === '-' && Allow.NUM & allow)\n                markPartialJSON(\"Not sure what '-' is\");\n            try {\n                return JSON.parse(jsonString.substring(start, jsonString.lastIndexOf('e')));\n            }\n            catch (e) {\n                throwMalformedError(String(e));\n            }\n        }\n    };\n    const skipBlank = () => {\n        while (index < length && ' \\n\\r\\t'.includes(jsonString[index])) {\n            index++;\n        }\n    };\n    return parseAny();\n};\n// using this function with malformed JSON is undefined behavior\nconst partialParse = (input) => parseJSON(input, Allow.ALL ^ Allow.NUM);\nexport { partialParse, PartialJSON, MalformedJSON };\n//# sourceMappingURL=parser.mjs.map","var _ChatCompletionStream_instances, _ChatCompletionStream_params, _ChatCompletionStream_choiceEventStates, _ChatCompletionStream_currentChatCompletionSnapshot, _ChatCompletionStream_beginRequest, _ChatCompletionStream_getChoiceEventState, _ChatCompletionStream_addChunk, _ChatCompletionStream_emitToolCallDoneEvent, _ChatCompletionStream_emitContentDoneEvents, _ChatCompletionStream_endRequest, _ChatCompletionStream_getAutoParseableResponseFormat, _ChatCompletionStream_accumulateChatCompletion;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"../internal/tslib.mjs\";\nimport { partialParse } from \"../_vendor/partial-json-parser/parser.mjs\";\nimport { APIUserAbortError, ContentFilterFinishReasonError, LengthFinishReasonError, OpenAIError, } from \"../error.mjs\";\nimport { hasAutoParseableInput, isAutoParsableResponseFormat, isAutoParsableTool, isChatCompletionFunctionTool, maybeParseChatCompletion, shouldParseToolCall, } from \"../lib/parser.mjs\";\nimport { Stream } from \"../streaming.mjs\";\nimport { AbstractChatCompletionRunner, } from \"./AbstractChatCompletionRunner.mjs\";\nexport class ChatCompletionStream extends AbstractChatCompletionRunner {\n    constructor(params) {\n        super();\n        _ChatCompletionStream_instances.add(this);\n        _ChatCompletionStream_params.set(this, void 0);\n        _ChatCompletionStream_choiceEventStates.set(this, void 0);\n        _ChatCompletionStream_currentChatCompletionSnapshot.set(this, void 0);\n        __classPrivateFieldSet(this, _ChatCompletionStream_params, params, \"f\");\n        __classPrivateFieldSet(this, _ChatCompletionStream_choiceEventStates, [], \"f\");\n    }\n    get currentChatCompletionSnapshot() {\n        return __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n    }\n    /**\n     * Intended for use on the frontend, consuming a stream produced with\n     * `.toReadableStream()` on the backend.\n     *\n     * Note that messages sent to the model do not appear in `.on('message')`\n     * in this context.\n     */\n    static fromReadableStream(stream) {\n        const runner = new ChatCompletionStream(null);\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    static createChatCompletion(client, params, options) {\n        const runner = new ChatCompletionStream(params);\n        runner._run(() => runner._runChatCompletion(client, { ...params, stream: true }, { ...options, headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' } }));\n        return runner;\n    }\n    async _createChatCompletion(client, params, options) {\n        super._createChatCompletion;\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n        const stream = await client.chat.completions.create({ ...params, stream: true }, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const chunk of stream) {\n            __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n    }\n    async _fromReadableStream(readableStream, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n        this._connected();\n        const stream = Stream.fromReadableStream(readableStream, this.controller);\n        let chatId;\n        for await (const chunk of stream) {\n            if (chatId && chatId !== chunk.id) {\n                // A new request has been made.\n                this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n            }\n            __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n            chatId = chunk.id;\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n    }\n    [(_ChatCompletionStream_params = new WeakMap(), _ChatCompletionStream_choiceEventStates = new WeakMap(), _ChatCompletionStream_currentChatCompletionSnapshot = new WeakMap(), _ChatCompletionStream_instances = new WeakSet(), _ChatCompletionStream_beginRequest = function _ChatCompletionStream_beginRequest() {\n        if (this.ended)\n            return;\n        __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n    }, _ChatCompletionStream_getChoiceEventState = function _ChatCompletionStream_getChoiceEventState(choice) {\n        let state = __classPrivateFieldGet(this, _ChatCompletionStream_choiceEventStates, \"f\")[choice.index];\n        if (state) {\n            return state;\n        }\n        state = {\n            content_done: false,\n            refusal_done: false,\n            logprobs_content_done: false,\n            logprobs_refusal_done: false,\n            done_tool_calls: new Set(),\n            current_tool_call_index: null,\n        };\n        __classPrivateFieldGet(this, _ChatCompletionStream_choiceEventStates, \"f\")[choice.index] = state;\n        return state;\n    }, _ChatCompletionStream_addChunk = function _ChatCompletionStream_addChunk(chunk) {\n        if (this.ended)\n            return;\n        const completion = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_accumulateChatCompletion).call(this, chunk);\n        this._emit('chunk', chunk, completion);\n        for (const choice of chunk.choices) {\n            const choiceSnapshot = completion.choices[choice.index];\n            if (choice.delta.content != null &&\n                choiceSnapshot.message?.role === 'assistant' &&\n                choiceSnapshot.message?.content) {\n                this._emit('content', choice.delta.content, choiceSnapshot.message.content);\n                this._emit('content.delta', {\n                    delta: choice.delta.content,\n                    snapshot: choiceSnapshot.message.content,\n                    parsed: choiceSnapshot.message.parsed,\n                });\n            }\n            if (choice.delta.refusal != null &&\n                choiceSnapshot.message?.role === 'assistant' &&\n                choiceSnapshot.message?.refusal) {\n                this._emit('refusal.delta', {\n                    delta: choice.delta.refusal,\n                    snapshot: choiceSnapshot.message.refusal,\n                });\n            }\n            if (choice.logprobs?.content != null && choiceSnapshot.message?.role === 'assistant') {\n                this._emit('logprobs.content.delta', {\n                    content: choice.logprobs?.content,\n                    snapshot: choiceSnapshot.logprobs?.content ?? [],\n                });\n            }\n            if (choice.logprobs?.refusal != null && choiceSnapshot.message?.role === 'assistant') {\n                this._emit('logprobs.refusal.delta', {\n                    refusal: choice.logprobs?.refusal,\n                    snapshot: choiceSnapshot.logprobs?.refusal ?? [],\n                });\n            }\n            const state = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n            if (choiceSnapshot.finish_reason) {\n                __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitContentDoneEvents).call(this, choiceSnapshot);\n                if (state.current_tool_call_index != null) {\n                    __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitToolCallDoneEvent).call(this, choiceSnapshot, state.current_tool_call_index);\n                }\n            }\n            for (const toolCall of choice.delta.tool_calls ?? []) {\n                if (state.current_tool_call_index !== toolCall.index) {\n                    __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitContentDoneEvents).call(this, choiceSnapshot);\n                    // new tool call started, the previous one is done\n                    if (state.current_tool_call_index != null) {\n                        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitToolCallDoneEvent).call(this, choiceSnapshot, state.current_tool_call_index);\n                    }\n                }\n                state.current_tool_call_index = toolCall.index;\n            }\n            for (const toolCallDelta of choice.delta.tool_calls ?? []) {\n                const toolCallSnapshot = choiceSnapshot.message.tool_calls?.[toolCallDelta.index];\n                if (!toolCallSnapshot?.type) {\n                    continue;\n                }\n                if (toolCallSnapshot?.type === 'function') {\n                    this._emit('tool_calls.function.arguments.delta', {\n                        name: toolCallSnapshot.function?.name,\n                        index: toolCallDelta.index,\n                        arguments: toolCallSnapshot.function.arguments,\n                        parsed_arguments: toolCallSnapshot.function.parsed_arguments,\n                        arguments_delta: toolCallDelta.function?.arguments ?? '',\n                    });\n                }\n                else {\n                    assertNever(toolCallSnapshot?.type);\n                }\n            }\n        }\n    }, _ChatCompletionStream_emitToolCallDoneEvent = function _ChatCompletionStream_emitToolCallDoneEvent(choiceSnapshot, toolCallIndex) {\n        const state = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n        if (state.done_tool_calls.has(toolCallIndex)) {\n            // we've already fired the done event\n            return;\n        }\n        const toolCallSnapshot = choiceSnapshot.message.tool_calls?.[toolCallIndex];\n        if (!toolCallSnapshot) {\n            throw new Error('no tool call snapshot');\n        }\n        if (!toolCallSnapshot.type) {\n            throw new Error('tool call snapshot missing `type`');\n        }\n        if (toolCallSnapshot.type === 'function') {\n            const inputTool = __classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\")?.tools?.find((tool) => isChatCompletionFunctionTool(tool) && tool.function.name === toolCallSnapshot.function.name); // TS doesn't narrow based on isChatCompletionTool\n            this._emit('tool_calls.function.arguments.done', {\n                name: toolCallSnapshot.function.name,\n                index: toolCallIndex,\n                arguments: toolCallSnapshot.function.arguments,\n                parsed_arguments: isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCallSnapshot.function.arguments)\n                    : inputTool?.function.strict ? JSON.parse(toolCallSnapshot.function.arguments)\n                        : null,\n            });\n        }\n        else {\n            assertNever(toolCallSnapshot.type);\n        }\n    }, _ChatCompletionStream_emitContentDoneEvents = function _ChatCompletionStream_emitContentDoneEvents(choiceSnapshot) {\n        const state = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n        if (choiceSnapshot.message.content && !state.content_done) {\n            state.content_done = true;\n            const responseFormat = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getAutoParseableResponseFormat).call(this);\n            this._emit('content.done', {\n                content: choiceSnapshot.message.content,\n                parsed: responseFormat ? responseFormat.$parseRaw(choiceSnapshot.message.content) : null,\n            });\n        }\n        if (choiceSnapshot.message.refusal && !state.refusal_done) {\n            state.refusal_done = true;\n            this._emit('refusal.done', { refusal: choiceSnapshot.message.refusal });\n        }\n        if (choiceSnapshot.logprobs?.content && !state.logprobs_content_done) {\n            state.logprobs_content_done = true;\n            this._emit('logprobs.content.done', { content: choiceSnapshot.logprobs.content });\n        }\n        if (choiceSnapshot.logprobs?.refusal && !state.logprobs_refusal_done) {\n            state.logprobs_refusal_done = true;\n            this._emit('logprobs.refusal.done', { refusal: choiceSnapshot.logprobs.refusal });\n        }\n    }, _ChatCompletionStream_endRequest = function _ChatCompletionStream_endRequest() {\n        if (this.ended) {\n            throw new OpenAIError(`stream has ended, this shouldn't happen`);\n        }\n        const snapshot = __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n        if (!snapshot) {\n            throw new OpenAIError(`request ended without sending any chunks`);\n        }\n        __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n        __classPrivateFieldSet(this, _ChatCompletionStream_choiceEventStates, [], \"f\");\n        return finalizeChatCompletion(snapshot, __classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\"));\n    }, _ChatCompletionStream_getAutoParseableResponseFormat = function _ChatCompletionStream_getAutoParseableResponseFormat() {\n        const responseFormat = __classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\")?.response_format;\n        if (isAutoParsableResponseFormat(responseFormat)) {\n            return responseFormat;\n        }\n        return null;\n    }, _ChatCompletionStream_accumulateChatCompletion = function _ChatCompletionStream_accumulateChatCompletion(chunk) {\n        var _a, _b, _c, _d;\n        let snapshot = __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n        const { choices, ...rest } = chunk;\n        if (!snapshot) {\n            snapshot = __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, {\n                ...rest,\n                choices: [],\n            }, \"f\");\n        }\n        else {\n            Object.assign(snapshot, rest);\n        }\n        for (const { delta, finish_reason, index, logprobs = null, ...other } of chunk.choices) {\n            let choice = snapshot.choices[index];\n            if (!choice) {\n                choice = snapshot.choices[index] = { finish_reason, index, message: {}, logprobs, ...other };\n            }\n            if (logprobs) {\n                if (!choice.logprobs) {\n                    choice.logprobs = Object.assign({}, logprobs);\n                }\n                else {\n                    const { content, refusal, ...rest } = logprobs;\n                    assertIsEmpty(rest);\n                    Object.assign(choice.logprobs, rest);\n                    if (content) {\n                        (_a = choice.logprobs).content ?? (_a.content = []);\n                        choice.logprobs.content.push(...content);\n                    }\n                    if (refusal) {\n                        (_b = choice.logprobs).refusal ?? (_b.refusal = []);\n                        choice.logprobs.refusal.push(...refusal);\n                    }\n                }\n            }\n            if (finish_reason) {\n                choice.finish_reason = finish_reason;\n                if (__classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\") && hasAutoParseableInput(__classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\"))) {\n                    if (finish_reason === 'length') {\n                        throw new LengthFinishReasonError();\n                    }\n                    if (finish_reason === 'content_filter') {\n                        throw new ContentFilterFinishReasonError();\n                    }\n                }\n            }\n            Object.assign(choice, other);\n            if (!delta)\n                continue; // Shouldn't happen; just in case.\n            const { content, refusal, function_call, role, tool_calls, ...rest } = delta;\n            assertIsEmpty(rest);\n            Object.assign(choice.message, rest);\n            if (refusal) {\n                choice.message.refusal = (choice.message.refusal || '') + refusal;\n            }\n            if (role)\n                choice.message.role = role;\n            if (function_call) {\n                if (!choice.message.function_call) {\n                    choice.message.function_call = function_call;\n                }\n                else {\n                    if (function_call.name)\n                        choice.message.function_call.name = function_call.name;\n                    if (function_call.arguments) {\n                        (_c = choice.message.function_call).arguments ?? (_c.arguments = '');\n                        choice.message.function_call.arguments += function_call.arguments;\n                    }\n                }\n            }\n            if (content) {\n                choice.message.content = (choice.message.content || '') + content;\n                if (!choice.message.refusal && __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getAutoParseableResponseFormat).call(this)) {\n                    choice.message.parsed = partialParse(choice.message.content);\n                }\n            }\n            if (tool_calls) {\n                if (!choice.message.tool_calls)\n                    choice.message.tool_calls = [];\n                for (const { index, id, type, function: fn, ...rest } of tool_calls) {\n                    const tool_call = ((_d = choice.message.tool_calls)[index] ?? (_d[index] = {}));\n                    Object.assign(tool_call, rest);\n                    if (id)\n                        tool_call.id = id;\n                    if (type)\n                        tool_call.type = type;\n                    if (fn)\n                        tool_call.function ?? (tool_call.function = { name: fn.name ?? '', arguments: '' });\n                    if (fn?.name)\n                        tool_call.function.name = fn.name;\n                    if (fn?.arguments) {\n                        tool_call.function.arguments += fn.arguments;\n                        if (shouldParseToolCall(__classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\"), tool_call)) {\n                            tool_call.function.parsed_arguments = partialParse(tool_call.function.arguments);\n                        }\n                    }\n                }\n            }\n        }\n        return snapshot;\n    }, Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        this.on('chunk', (chunk) => {\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(chunk);\n            }\n            else {\n                pushQueue.push(chunk);\n            }\n        });\n        this.on('end', () => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on('abort', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on('error', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async () => {\n                if (!pushQueue.length) {\n                    if (done) {\n                        return { value: undefined, done: true };\n                    }\n                    return new Promise((resolve, reject) => readQueue.push({ resolve, reject })).then((chunk) => (chunk ? { value: chunk, done: false } : { value: undefined, done: true }));\n                }\n                const chunk = pushQueue.shift();\n                return { value: chunk, done: false };\n            },\n            return: async () => {\n                this.abort();\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    toReadableStream() {\n        const stream = new Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n        return stream.toReadableStream();\n    }\n}\nfunction finalizeChatCompletion(snapshot, params) {\n    const { id, choices, created, model, system_fingerprint, ...rest } = snapshot;\n    const completion = {\n        ...rest,\n        id,\n        choices: choices.map(({ message, finish_reason, index, logprobs, ...choiceRest }) => {\n            if (!finish_reason) {\n                throw new OpenAIError(`missing finish_reason for choice ${index}`);\n            }\n            const { content = null, function_call, tool_calls, ...messageRest } = message;\n            const role = message.role; // this is what we expect; in theory it could be different which would make our types a slight lie but would be fine.\n            if (!role) {\n                throw new OpenAIError(`missing role for choice ${index}`);\n            }\n            if (function_call) {\n                const { arguments: args, name } = function_call;\n                if (args == null) {\n                    throw new OpenAIError(`missing function_call.arguments for choice ${index}`);\n                }\n                if (!name) {\n                    throw new OpenAIError(`missing function_call.name for choice ${index}`);\n                }\n                return {\n                    ...choiceRest,\n                    message: {\n                        content,\n                        function_call: { arguments: args, name },\n                        role,\n                        refusal: message.refusal ?? null,\n                    },\n                    finish_reason,\n                    index,\n                    logprobs,\n                };\n            }\n            if (tool_calls) {\n                return {\n                    ...choiceRest,\n                    index,\n                    finish_reason,\n                    logprobs,\n                    message: {\n                        ...messageRest,\n                        role,\n                        content,\n                        refusal: message.refusal ?? null,\n                        tool_calls: tool_calls.map((tool_call, i) => {\n                            const { function: fn, type, id, ...toolRest } = tool_call;\n                            const { arguments: args, name, ...fnRest } = fn || {};\n                            if (id == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].id\\n${str(snapshot)}`);\n                            }\n                            if (type == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].type\\n${str(snapshot)}`);\n                            }\n                            if (name == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].function.name\\n${str(snapshot)}`);\n                            }\n                            if (args == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].function.arguments\\n${str(snapshot)}`);\n                            }\n                            return { ...toolRest, id, type, function: { ...fnRest, name, arguments: args } };\n                        }),\n                    },\n                };\n            }\n            return {\n                ...choiceRest,\n                message: { ...messageRest, content, role, refusal: message.refusal ?? null },\n                finish_reason,\n                index,\n                logprobs,\n            };\n        }),\n        created,\n        model,\n        object: 'chat.completion',\n        ...(system_fingerprint ? { system_fingerprint } : {}),\n    };\n    return maybeParseChatCompletion(completion, params);\n}\nfunction str(x) {\n    return JSON.stringify(x);\n}\n/**\n * Ensures the given argument is an empty object, useful for\n * asserting that all known properties on an object have been\n * destructured.\n */\nfunction assertIsEmpty(obj) {\n    return;\n}\nfunction assertNever(_x) { }\n//# sourceMappingURL=ChatCompletionStream.mjs.map","import { ChatCompletionStream } from \"./ChatCompletionStream.mjs\";\nexport class ChatCompletionStreamingRunner extends ChatCompletionStream {\n    static fromReadableStream(stream) {\n        const runner = new ChatCompletionStreamingRunner(null);\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    static runTools(client, params, options) {\n        const runner = new ChatCompletionStreamingRunner(\n        // @ts-expect-error TODO these types are incompatible\n        params);\n        const opts = {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runTools' },\n        };\n        runner._run(() => runner._runTools(client, params, opts));\n        return runner;\n    }\n}\n//# sourceMappingURL=ChatCompletionStreamingRunner.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport * as MessagesAPI from \"./messages.mjs\";\nimport { Messages } from \"./messages.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nimport { ChatCompletionRunner } from \"../../../lib/ChatCompletionRunner.mjs\";\nimport { ChatCompletionStreamingRunner } from \"../../../lib/ChatCompletionStreamingRunner.mjs\";\nimport { ChatCompletionStream } from \"../../../lib/ChatCompletionStream.mjs\";\nimport { parseChatCompletion, validateInputTools } from \"../../../lib/parser.mjs\";\nexport class Completions extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.messages = new MessagesAPI.Messages(this._client);\n    }\n    create(body, options) {\n        return this._client.post('/chat/completions', { body, ...options, stream: body.stream ?? false });\n    }\n    /**\n     * Get a stored chat completion. Only Chat Completions that have been created with\n     * the `store` parameter set to `true` will be returned.\n     *\n     * @example\n     * ```ts\n     * const chatCompletion =\n     *   await client.chat.completions.retrieve('completion_id');\n     * ```\n     */\n    retrieve(completionID, options) {\n        return this._client.get(path `/chat/completions/${completionID}`, options);\n    }\n    /**\n     * Modify a stored chat completion. Only Chat Completions that have been created\n     * with the `store` parameter set to `true` can be modified. Currently, the only\n     * supported modification is to update the `metadata` field.\n     *\n     * @example\n     * ```ts\n     * const chatCompletion = await client.chat.completions.update(\n     *   'completion_id',\n     *   { metadata: { foo: 'string' } },\n     * );\n     * ```\n     */\n    update(completionID, body, options) {\n        return this._client.post(path `/chat/completions/${completionID}`, { body, ...options });\n    }\n    /**\n     * List stored Chat Completions. Only Chat Completions that have been stored with\n     * the `store` parameter set to `true` will be returned.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const chatCompletion of client.chat.completions.list()) {\n     *   // ...\n     * }\n     * ```\n     */\n    list(query = {}, options) {\n        return this._client.getAPIList('/chat/completions', (CursorPage), { query, ...options });\n    }\n    /**\n     * Delete a stored chat completion. Only Chat Completions that have been created\n     * with the `store` parameter set to `true` can be deleted.\n     *\n     * @example\n     * ```ts\n     * const chatCompletionDeleted =\n     *   await client.chat.completions.delete('completion_id');\n     * ```\n     */\n    delete(completionID, options) {\n        return this._client.delete(path `/chat/completions/${completionID}`, options);\n    }\n    parse(body, options) {\n        validateInputTools(body.tools);\n        return this._client.chat.completions\n            .create(body, {\n            ...options,\n            headers: {\n                ...options?.headers,\n                'X-Stainless-Helper-Method': 'chat.completions.parse',\n            },\n        })\n            ._thenUnwrap((completion) => parseChatCompletion(completion, body));\n    }\n    runTools(body, options) {\n        if (body.stream) {\n            return ChatCompletionStreamingRunner.runTools(this._client, body, options);\n        }\n        return ChatCompletionRunner.runTools(this._client, body, options);\n    }\n    /**\n     * Creates a chat completion stream\n     */\n    stream(body, options) {\n        return ChatCompletionStream.createChatCompletion(this._client, body, options);\n    }\n}\nexport { ChatCompletionStreamingRunner } from \"../../../lib/ChatCompletionStreamingRunner.mjs\";\nexport { ParsingToolFunction, } from \"../../../lib/RunnableFunction.mjs\";\nexport { ChatCompletionStream } from \"../../../lib/ChatCompletionStream.mjs\";\nexport { ChatCompletionRunner } from \"../../../lib/ChatCompletionRunner.mjs\";\nCompletions.Messages = Messages;\n//# sourceMappingURL=completions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as CompletionsAPI from \"./completions/completions.mjs\";\nimport { Completions, } from \"./completions/completions.mjs\";\nexport class Chat extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.completions = new CompletionsAPI.Completions(this._client);\n    }\n}\nChat.Completions = Completions;\n//# sourceMappingURL=chat.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { isReadonlyArray } from \"./utils/values.mjs\";\nconst brand_privateNullableHeaders = /* @__PURE__ */ Symbol('brand.privateNullableHeaders');\nfunction* iterateHeaders(headers) {\n    if (!headers)\n        return;\n    if (brand_privateNullableHeaders in headers) {\n        const { values, nulls } = headers;\n        yield* values.entries();\n        for (const name of nulls) {\n            yield [name, null];\n        }\n        return;\n    }\n    let shouldClear = false;\n    let iter;\n    if (headers instanceof Headers) {\n        iter = headers.entries();\n    }\n    else if (isReadonlyArray(headers)) {\n        iter = headers;\n    }\n    else {\n        shouldClear = true;\n        iter = Object.entries(headers ?? {});\n    }\n    for (let row of iter) {\n        const name = row[0];\n        if (typeof name !== 'string')\n            throw new TypeError('expected header name to be a string');\n        const values = isReadonlyArray(row[1]) ? row[1] : [row[1]];\n        let didClear = false;\n        for (const value of values) {\n            if (value === undefined)\n                continue;\n            // Objects keys always overwrite older headers, they never append.\n            // Yield a null to clear the header before adding the new values.\n            if (shouldClear && !didClear) {\n                didClear = true;\n                yield [name, null];\n            }\n            yield [name, value];\n        }\n    }\n}\nexport const buildHeaders = (newHeaders) => {\n    const targetHeaders = new Headers();\n    const nullHeaders = new Set();\n    for (const headers of newHeaders) {\n        const seenHeaders = new Set();\n        for (const [name, value] of iterateHeaders(headers)) {\n            const lowerName = name.toLowerCase();\n            if (!seenHeaders.has(lowerName)) {\n                targetHeaders.delete(name);\n                seenHeaders.add(lowerName);\n            }\n            if (value === null) {\n                targetHeaders.delete(name);\n                nullHeaders.add(lowerName);\n            }\n            else {\n                targetHeaders.append(name, value);\n                nullHeaders.delete(lowerName);\n            }\n        }\n    }\n    return { [brand_privateNullableHeaders]: true, values: targetHeaders, nulls: nullHeaders };\n};\nexport const isEmptyHeaders = (headers) => {\n    for (const _ of iterateHeaders(headers))\n        return false;\n    return true;\n};\n//# sourceMappingURL=headers.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { buildHeaders } from \"../../internal/headers.mjs\";\nexport class Speech extends APIResource {\n    /**\n     * Generates audio from the input text.\n     *\n     * @example\n     * ```ts\n     * const speech = await client.audio.speech.create({\n     *   input: 'input',\n     *   model: 'string',\n     *   voice: 'ash',\n     * });\n     *\n     * const content = await speech.blob();\n     * console.log(content);\n     * ```\n     */\n    create(body, options) {\n        return this._client.post('/audio/speech', {\n            body,\n            ...options,\n            headers: buildHeaders([{ Accept: 'application/octet-stream' }, options?.headers]),\n            __binaryResponse: true,\n        });\n    }\n}\n//# sourceMappingURL=speech.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { multipartFormRequestOptions } from \"../../internal/uploads.mjs\";\nexport class Transcriptions extends APIResource {\n    create(body, options) {\n        return this._client.post('/audio/transcriptions', multipartFormRequestOptions({\n            body,\n            ...options,\n            stream: body.stream ?? false,\n            __metadata: { model: body.model },\n        }, this._client));\n    }\n}\n//# sourceMappingURL=transcriptions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { multipartFormRequestOptions } from \"../../internal/uploads.mjs\";\nexport class Translations extends APIResource {\n    create(body, options) {\n        return this._client.post('/audio/translations', multipartFormRequestOptions({ body, ...options, __metadata: { model: body.model } }, this._client));\n    }\n}\n//# sourceMappingURL=translations.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as SpeechAPI from \"./speech.mjs\";\nimport { Speech } from \"./speech.mjs\";\nimport * as TranscriptionsAPI from \"./transcriptions.mjs\";\nimport { Transcriptions, } from \"./transcriptions.mjs\";\nimport * as TranslationsAPI from \"./translations.mjs\";\nimport { Translations, } from \"./translations.mjs\";\nexport class Audio extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.transcriptions = new TranscriptionsAPI.Transcriptions(this._client);\n        this.translations = new TranslationsAPI.Translations(this._client);\n        this.speech = new SpeechAPI.Speech(this._client);\n    }\n}\nAudio.Transcriptions = Transcriptions;\nAudio.Translations = Translations;\nAudio.Speech = Speech;\n//# sourceMappingURL=audio.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../core/resource.mjs\";\nimport { CursorPage } from \"../core/pagination.mjs\";\nimport { path } from \"../internal/utils/path.mjs\";\nexport class Batches extends APIResource {\n    /**\n     * Creates and executes a batch from an uploaded file of requests\n     */\n    create(body, options) {\n        return this._client.post('/batches', { body, ...options });\n    }\n    /**\n     * Retrieves a batch.\n     */\n    retrieve(batchID, options) {\n        return this._client.get(path `/batches/${batchID}`, options);\n    }\n    /**\n     * List your organization's batches.\n     */\n    list(query = {}, options) {\n        return this._client.getAPIList('/batches', (CursorPage), { query, ...options });\n    }\n    /**\n     * Cancels an in-progress batch. The batch will be in status `cancelling` for up to\n     * 10 minutes, before changing to `cancelled`, where it will have partial results\n     * (if any) available in the output file.\n     */\n    cancel(batchID, options) {\n        return this._client.post(path `/batches/${batchID}/cancel`, options);\n    }\n}\n//# sourceMappingURL=batches.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { CursorPage } from \"../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../internal/headers.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class Assistants extends APIResource {\n    /**\n     * Create an assistant with a model and instructions.\n     *\n     * @example\n     * ```ts\n     * const assistant = await client.beta.assistants.create({\n     *   model: 'gpt-4o',\n     * });\n     * ```\n     */\n    create(body, options) {\n        return this._client.post('/assistants', {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Retrieves an assistant.\n     *\n     * @example\n     * ```ts\n     * const assistant = await client.beta.assistants.retrieve(\n     *   'assistant_id',\n     * );\n     * ```\n     */\n    retrieve(assistantID, options) {\n        return this._client.get(path `/assistants/${assistantID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Modifies an assistant.\n     *\n     * @example\n     * ```ts\n     * const assistant = await client.beta.assistants.update(\n     *   'assistant_id',\n     * );\n     * ```\n     */\n    update(assistantID, body, options) {\n        return this._client.post(path `/assistants/${assistantID}`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Returns a list of assistants.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const assistant of client.beta.assistants.list()) {\n     *   // ...\n     * }\n     * ```\n     */\n    list(query = {}, options) {\n        return this._client.getAPIList('/assistants', (CursorPage), {\n            query,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Delete an assistant.\n     *\n     * @example\n     * ```ts\n     * const assistantDeleted =\n     *   await client.beta.assistants.delete('assistant_id');\n     * ```\n     */\n    delete(assistantID, options) {\n        return this._client.delete(path `/assistants/${assistantID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n}\n//# sourceMappingURL=assistants.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { buildHeaders } from \"../../../internal/headers.mjs\";\nexport class Sessions extends APIResource {\n    /**\n     * Create an ephemeral API token for use in client-side applications with the\n     * Realtime API. Can be configured with the same session parameters as the\n     * `session.update` client event.\n     *\n     * It responds with a session object, plus a `client_secret` key which contains a\n     * usable ephemeral API token that can be used to authenticate browser clients for\n     * the Realtime API.\n     *\n     * @example\n     * ```ts\n     * const session =\n     *   await client.beta.realtime.sessions.create();\n     * ```\n     */\n    create(body, options) {\n        return this._client.post('/realtime/sessions', {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n}\n//# sourceMappingURL=sessions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { buildHeaders } from \"../../../internal/headers.mjs\";\nexport class TranscriptionSessions extends APIResource {\n    /**\n     * Create an ephemeral API token for use in client-side applications with the\n     * Realtime API specifically for realtime transcriptions. Can be configured with\n     * the same session parameters as the `transcription_session.update` client event.\n     *\n     * It responds with a session object, plus a `client_secret` key which contains a\n     * usable ephemeral API token that can be used to authenticate browser clients for\n     * the Realtime API.\n     *\n     * @example\n     * ```ts\n     * const transcriptionSession =\n     *   await client.beta.realtime.transcriptionSessions.create();\n     * ```\n     */\n    create(body, options) {\n        return this._client.post('/realtime/transcription_sessions', {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n}\n//# sourceMappingURL=transcription-sessions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport * as SessionsAPI from \"./sessions.mjs\";\nimport { Sessions, } from \"./sessions.mjs\";\nimport * as TranscriptionSessionsAPI from \"./transcription-sessions.mjs\";\nimport { TranscriptionSessions, } from \"./transcription-sessions.mjs\";\n/**\n * @deprecated Realtime has now launched and is generally available. The old beta API is now deprecated.\n */\nexport class Realtime extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.sessions = new SessionsAPI.Sessions(this._client);\n        this.transcriptionSessions = new TranscriptionSessionsAPI.TranscriptionSessions(this._client);\n    }\n}\nRealtime.Sessions = Sessions;\nRealtime.TranscriptionSessions = TranscriptionSessions;\n//# sourceMappingURL=realtime.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../../internal/headers.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\n/**\n * @deprecated The Assistants API is deprecated in favor of the Responses API\n */\nexport class Messages extends APIResource {\n    /**\n     * Create a message.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    create(threadID, body, options) {\n        return this._client.post(path `/threads/${threadID}/messages`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Retrieve a message.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    retrieve(messageID, params, options) {\n        const { thread_id } = params;\n        return this._client.get(path `/threads/${thread_id}/messages/${messageID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Modifies a message.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    update(messageID, params, options) {\n        const { thread_id, ...body } = params;\n        return this._client.post(path `/threads/${thread_id}/messages/${messageID}`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Returns a list of messages for a given thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    list(threadID, query = {}, options) {\n        return this._client.getAPIList(path `/threads/${threadID}/messages`, (CursorPage), {\n            query,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Deletes a message.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    delete(messageID, params, options) {\n        const { thread_id } = params;\n        return this._client.delete(path `/threads/${thread_id}/messages/${messageID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n}\n//# sourceMappingURL=messages.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../../core/resource.mjs\";\nimport { CursorPage } from \"../../../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../../../internal/headers.mjs\";\nimport { path } from \"../../../../internal/utils/path.mjs\";\n/**\n * @deprecated The Assistants API is deprecated in favor of the Responses API\n */\nexport class Steps extends APIResource {\n    /**\n     * Retrieves a run step.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    retrieve(stepID, params, options) {\n        const { thread_id, run_id, ...query } = params;\n        return this._client.get(path `/threads/${thread_id}/runs/${run_id}/steps/${stepID}`, {\n            query,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Returns a list of run steps belonging to a run.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    list(runID, params, options) {\n        const { thread_id, ...query } = params;\n        return this._client.getAPIList(path `/threads/${thread_id}/runs/${runID}/steps`, (CursorPage), {\n            query,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n}\n//# sourceMappingURL=steps.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { OpenAIError } from \"../../core/error.mjs\";\nimport { encodeUTF8 } from \"./bytes.mjs\";\nexport const toBase64 = (data) => {\n    if (!data)\n        return '';\n    if (typeof globalThis.Buffer !== 'undefined') {\n        return globalThis.Buffer.from(data).toString('base64');\n    }\n    if (typeof data === 'string') {\n        data = encodeUTF8(data);\n    }\n    if (typeof btoa !== 'undefined') {\n        return btoa(String.fromCharCode.apply(null, data));\n    }\n    throw new OpenAIError('Cannot generate base64 string; Expected `Buffer` or `btoa` to be defined');\n};\nexport const fromBase64 = (str) => {\n    if (typeof globalThis.Buffer !== 'undefined') {\n        const buf = globalThis.Buffer.from(str, 'base64');\n        return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n    }\n    if (typeof atob !== 'undefined') {\n        const bstr = atob(str);\n        const buf = new Uint8Array(bstr.length);\n        for (let i = 0; i < bstr.length; i++) {\n            buf[i] = bstr.charCodeAt(i);\n        }\n        return buf;\n    }\n    throw new OpenAIError('Cannot decode base64 string; Expected `Buffer` or `atob` to be defined');\n};\n/**\n * Converts a Base64 encoded string to a Float32Array.\n * @param base64Str - The Base64 encoded string.\n * @returns An Array of numbers interpreted as Float32 values.\n */\nexport const toFloat32Array = (base64Str) => {\n    if (typeof Buffer !== 'undefined') {\n        // for Node.js environment\n        const buf = Buffer.from(base64Str, 'base64');\n        return Array.from(new Float32Array(buf.buffer, buf.byteOffset, buf.length / Float32Array.BYTES_PER_ELEMENT));\n    }\n    else {\n        // for legacy web platform APIs\n        const binaryStr = atob(base64Str);\n        const len = binaryStr.length;\n        const bytes = new Uint8Array(len);\n        for (let i = 0; i < len; i++) {\n            bytes[i] = binaryStr.charCodeAt(i);\n        }\n        return Array.from(new Float32Array(bytes.buffer));\n    }\n};\n//# sourceMappingURL=base64.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n/**\n * Read an environment variable.\n *\n * Trims beginning and trailing whitespace.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */\nexport const readEnv = (env) => {\n    if (typeof globalThis.process !== 'undefined') {\n        return globalThis.process.env?.[env]?.trim() ?? undefined;\n    }\n    if (typeof globalThis.Deno !== 'undefined') {\n        return globalThis.Deno.env?.get?.(env)?.trim();\n    }\n    return undefined;\n};\n//# sourceMappingURL=env.mjs.map","var _AssistantStream_instances, _a, _AssistantStream_events, _AssistantStream_runStepSnapshots, _AssistantStream_messageSnapshots, _AssistantStream_messageSnapshot, _AssistantStream_finalRun, _AssistantStream_currentContentIndex, _AssistantStream_currentContent, _AssistantStream_currentToolCallIndex, _AssistantStream_currentToolCall, _AssistantStream_currentEvent, _AssistantStream_currentRunSnapshot, _AssistantStream_currentRunStepSnapshot, _AssistantStream_addEvent, _AssistantStream_endRequest, _AssistantStream_handleMessage, _AssistantStream_handleRunStep, _AssistantStream_handleEvent, _AssistantStream_accumulateRunStep, _AssistantStream_accumulateMessage, _AssistantStream_accumulateContent, _AssistantStream_handleRun;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"../internal/tslib.mjs\";\nimport { Stream } from \"../streaming.mjs\";\nimport { APIUserAbortError, OpenAIError } from \"../error.mjs\";\nimport { EventStream } from \"./EventStream.mjs\";\nimport { isObj } from \"../internal/utils.mjs\";\nexport class AssistantStream extends EventStream {\n    constructor() {\n        super(...arguments);\n        _AssistantStream_instances.add(this);\n        //Track all events in a single list for reference\n        _AssistantStream_events.set(this, []);\n        //Used to accumulate deltas\n        //We are accumulating many types so the value here is not strict\n        _AssistantStream_runStepSnapshots.set(this, {});\n        _AssistantStream_messageSnapshots.set(this, {});\n        _AssistantStream_messageSnapshot.set(this, void 0);\n        _AssistantStream_finalRun.set(this, void 0);\n        _AssistantStream_currentContentIndex.set(this, void 0);\n        _AssistantStream_currentContent.set(this, void 0);\n        _AssistantStream_currentToolCallIndex.set(this, void 0);\n        _AssistantStream_currentToolCall.set(this, void 0);\n        //For current snapshot methods\n        _AssistantStream_currentEvent.set(this, void 0);\n        _AssistantStream_currentRunSnapshot.set(this, void 0);\n        _AssistantStream_currentRunStepSnapshot.set(this, void 0);\n    }\n    [(_AssistantStream_events = new WeakMap(), _AssistantStream_runStepSnapshots = new WeakMap(), _AssistantStream_messageSnapshots = new WeakMap(), _AssistantStream_messageSnapshot = new WeakMap(), _AssistantStream_finalRun = new WeakMap(), _AssistantStream_currentContentIndex = new WeakMap(), _AssistantStream_currentContent = new WeakMap(), _AssistantStream_currentToolCallIndex = new WeakMap(), _AssistantStream_currentToolCall = new WeakMap(), _AssistantStream_currentEvent = new WeakMap(), _AssistantStream_currentRunSnapshot = new WeakMap(), _AssistantStream_currentRunStepSnapshot = new WeakMap(), _AssistantStream_instances = new WeakSet(), Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        //Catch all for passing along all events\n        this.on('event', (event) => {\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(event);\n            }\n            else {\n                pushQueue.push(event);\n            }\n        });\n        this.on('end', () => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on('abort', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on('error', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async () => {\n                if (!pushQueue.length) {\n                    if (done) {\n                        return { value: undefined, done: true };\n                    }\n                    return new Promise((resolve, reject) => readQueue.push({ resolve, reject })).then((chunk) => (chunk ? { value: chunk, done: false } : { value: undefined, done: true }));\n                }\n                const chunk = pushQueue.shift();\n                return { value: chunk, done: false };\n            },\n            return: async () => {\n                this.abort();\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    static fromReadableStream(stream) {\n        const runner = new _a();\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    async _fromReadableStream(readableStream, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        this._connected();\n        const stream = Stream.fromReadableStream(readableStream, this.controller);\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    toReadableStream() {\n        const stream = new Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n        return stream.toReadableStream();\n    }\n    static createToolAssistantStream(runId, runs, params, options) {\n        const runner = new _a();\n        runner._run(() => runner._runToolAssistantStream(runId, runs, params, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    async _createToolAssistantStream(run, runId, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        const body = { ...params, stream: true };\n        const stream = await run.submitToolOutputs(runId, body, {\n            ...options,\n            signal: this.controller.signal,\n        });\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    static createThreadAssistantStream(params, thread, options) {\n        const runner = new _a();\n        runner._run(() => runner._threadAssistantStream(params, thread, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    static createAssistantStream(threadId, runs, params, options) {\n        const runner = new _a();\n        runner._run(() => runner._runAssistantStream(threadId, runs, params, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    currentEvent() {\n        return __classPrivateFieldGet(this, _AssistantStream_currentEvent, \"f\");\n    }\n    currentRun() {\n        return __classPrivateFieldGet(this, _AssistantStream_currentRunSnapshot, \"f\");\n    }\n    currentMessageSnapshot() {\n        return __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\");\n    }\n    currentRunStepSnapshot() {\n        return __classPrivateFieldGet(this, _AssistantStream_currentRunStepSnapshot, \"f\");\n    }\n    async finalRunSteps() {\n        await this.done();\n        return Object.values(__classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\"));\n    }\n    async finalMessages() {\n        await this.done();\n        return Object.values(__classPrivateFieldGet(this, _AssistantStream_messageSnapshots, \"f\"));\n    }\n    async finalRun() {\n        await this.done();\n        if (!__classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\"))\n            throw Error('Final run was not received.');\n        return __classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\");\n    }\n    async _createThreadAssistantStream(thread, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        const body = { ...params, stream: true };\n        const stream = await thread.createAndRun(body, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    async _createAssistantStream(run, threadId, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        const body = { ...params, stream: true };\n        const stream = await run.create(threadId, body, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    static accumulateDelta(acc, delta) {\n        for (const [key, deltaValue] of Object.entries(delta)) {\n            if (!acc.hasOwnProperty(key)) {\n                acc[key] = deltaValue;\n                continue;\n            }\n            let accValue = acc[key];\n            if (accValue === null || accValue === undefined) {\n                acc[key] = deltaValue;\n                continue;\n            }\n            // We don't accumulate these special properties\n            if (key === 'index' || key === 'type') {\n                acc[key] = deltaValue;\n                continue;\n            }\n            // Type-specific accumulation logic\n            if (typeof accValue === 'string' && typeof deltaValue === 'string') {\n                accValue += deltaValue;\n            }\n            else if (typeof accValue === 'number' && typeof deltaValue === 'number') {\n                accValue += deltaValue;\n            }\n            else if (isObj(accValue) && isObj(deltaValue)) {\n                accValue = this.accumulateDelta(accValue, deltaValue);\n            }\n            else if (Array.isArray(accValue) && Array.isArray(deltaValue)) {\n                if (accValue.every((x) => typeof x === 'string' || typeof x === 'number')) {\n                    accValue.push(...deltaValue); // Use spread syntax for efficient addition\n                    continue;\n                }\n                for (const deltaEntry of deltaValue) {\n                    if (!isObj(deltaEntry)) {\n                        throw new Error(`Expected array delta entry to be an object but got: ${deltaEntry}`);\n                    }\n                    const index = deltaEntry['index'];\n                    if (index == null) {\n                        console.error(deltaEntry);\n                        throw new Error('Expected array delta entry to have an `index` property');\n                    }\n                    if (typeof index !== 'number') {\n                        throw new Error(`Expected array delta entry \\`index\\` property to be a number but got ${index}`);\n                    }\n                    const accEntry = accValue[index];\n                    if (accEntry == null) {\n                        accValue.push(deltaEntry);\n                    }\n                    else {\n                        accValue[index] = this.accumulateDelta(accEntry, deltaEntry);\n                    }\n                }\n                continue;\n            }\n            else {\n                throw Error(`Unhandled record type: ${key}, deltaValue: ${deltaValue}, accValue: ${accValue}`);\n            }\n            acc[key] = accValue;\n        }\n        return acc;\n    }\n    _addRun(run) {\n        return run;\n    }\n    async _threadAssistantStream(params, thread, options) {\n        return await this._createThreadAssistantStream(thread, params, options);\n    }\n    async _runAssistantStream(threadId, runs, params, options) {\n        return await this._createAssistantStream(runs, threadId, params, options);\n    }\n    async _runToolAssistantStream(runId, runs, params, options) {\n        return await this._createToolAssistantStream(runs, runId, params, options);\n    }\n}\n_a = AssistantStream, _AssistantStream_addEvent = function _AssistantStream_addEvent(event) {\n    if (this.ended)\n        return;\n    __classPrivateFieldSet(this, _AssistantStream_currentEvent, event, \"f\");\n    __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleEvent).call(this, event);\n    switch (event.event) {\n        case 'thread.created':\n            //No action on this event.\n            break;\n        case 'thread.run.created':\n        case 'thread.run.queued':\n        case 'thread.run.in_progress':\n        case 'thread.run.requires_action':\n        case 'thread.run.completed':\n        case 'thread.run.incomplete':\n        case 'thread.run.failed':\n        case 'thread.run.cancelling':\n        case 'thread.run.cancelled':\n        case 'thread.run.expired':\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleRun).call(this, event);\n            break;\n        case 'thread.run.step.created':\n        case 'thread.run.step.in_progress':\n        case 'thread.run.step.delta':\n        case 'thread.run.step.completed':\n        case 'thread.run.step.failed':\n        case 'thread.run.step.cancelled':\n        case 'thread.run.step.expired':\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleRunStep).call(this, event);\n            break;\n        case 'thread.message.created':\n        case 'thread.message.in_progress':\n        case 'thread.message.delta':\n        case 'thread.message.completed':\n        case 'thread.message.incomplete':\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleMessage).call(this, event);\n            break;\n        case 'error':\n            //This is included for completeness, but errors are processed in the SSE event processing so this should not occur\n            throw new Error('Encountered an error event in event processing - errors should be processed earlier');\n        default:\n            assertNever(event);\n    }\n}, _AssistantStream_endRequest = function _AssistantStream_endRequest() {\n    if (this.ended) {\n        throw new OpenAIError(`stream has ended, this shouldn't happen`);\n    }\n    if (!__classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\"))\n        throw Error('Final run has not been received');\n    return __classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\");\n}, _AssistantStream_handleMessage = function _AssistantStream_handleMessage(event) {\n    const [accumulatedMessage, newContent] = __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateMessage).call(this, event, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n    __classPrivateFieldSet(this, _AssistantStream_messageSnapshot, accumulatedMessage, \"f\");\n    __classPrivateFieldGet(this, _AssistantStream_messageSnapshots, \"f\")[accumulatedMessage.id] = accumulatedMessage;\n    for (const content of newContent) {\n        const snapshotContent = accumulatedMessage.content[content.index];\n        if (snapshotContent?.type == 'text') {\n            this._emit('textCreated', snapshotContent.text);\n        }\n    }\n    switch (event.event) {\n        case 'thread.message.created':\n            this._emit('messageCreated', event.data);\n            break;\n        case 'thread.message.in_progress':\n            break;\n        case 'thread.message.delta':\n            this._emit('messageDelta', event.data.delta, accumulatedMessage);\n            if (event.data.delta.content) {\n                for (const content of event.data.delta.content) {\n                    //If it is text delta, emit a text delta event\n                    if (content.type == 'text' && content.text) {\n                        let textDelta = content.text;\n                        let snapshot = accumulatedMessage.content[content.index];\n                        if (snapshot && snapshot.type == 'text') {\n                            this._emit('textDelta', textDelta, snapshot.text);\n                        }\n                        else {\n                            throw Error('The snapshot associated with this text delta is not text or missing');\n                        }\n                    }\n                    if (content.index != __classPrivateFieldGet(this, _AssistantStream_currentContentIndex, \"f\")) {\n                        //See if we have in progress content\n                        if (__classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\")) {\n                            switch (__classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\").type) {\n                                case 'text':\n                                    this._emit('textDone', __classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\").text, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                                    break;\n                                case 'image_file':\n                                    this._emit('imageFileDone', __classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\").image_file, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                                    break;\n                            }\n                        }\n                        __classPrivateFieldSet(this, _AssistantStream_currentContentIndex, content.index, \"f\");\n                    }\n                    __classPrivateFieldSet(this, _AssistantStream_currentContent, accumulatedMessage.content[content.index], \"f\");\n                }\n            }\n            break;\n        case 'thread.message.completed':\n        case 'thread.message.incomplete':\n            //We emit the latest content we were working on on completion (including incomplete)\n            if (__classPrivateFieldGet(this, _AssistantStream_currentContentIndex, \"f\") !== undefined) {\n                const currentContent = event.data.content[__classPrivateFieldGet(this, _AssistantStream_currentContentIndex, \"f\")];\n                if (currentContent) {\n                    switch (currentContent.type) {\n                        case 'image_file':\n                            this._emit('imageFileDone', currentContent.image_file, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                            break;\n                        case 'text':\n                            this._emit('textDone', currentContent.text, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                            break;\n                    }\n                }\n            }\n            if (__classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\")) {\n                this._emit('messageDone', event.data);\n            }\n            __classPrivateFieldSet(this, _AssistantStream_messageSnapshot, undefined, \"f\");\n    }\n}, _AssistantStream_handleRunStep = function _AssistantStream_handleRunStep(event) {\n    const accumulatedRunStep = __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateRunStep).call(this, event);\n    __classPrivateFieldSet(this, _AssistantStream_currentRunStepSnapshot, accumulatedRunStep, \"f\");\n    switch (event.event) {\n        case 'thread.run.step.created':\n            this._emit('runStepCreated', event.data);\n            break;\n        case 'thread.run.step.delta':\n            const delta = event.data.delta;\n            if (delta.step_details &&\n                delta.step_details.type == 'tool_calls' &&\n                delta.step_details.tool_calls &&\n                accumulatedRunStep.step_details.type == 'tool_calls') {\n                for (const toolCall of delta.step_details.tool_calls) {\n                    if (toolCall.index == __classPrivateFieldGet(this, _AssistantStream_currentToolCallIndex, \"f\")) {\n                        this._emit('toolCallDelta', toolCall, accumulatedRunStep.step_details.tool_calls[toolCall.index]);\n                    }\n                    else {\n                        if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\")) {\n                            this._emit('toolCallDone', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                        }\n                        __classPrivateFieldSet(this, _AssistantStream_currentToolCallIndex, toolCall.index, \"f\");\n                        __classPrivateFieldSet(this, _AssistantStream_currentToolCall, accumulatedRunStep.step_details.tool_calls[toolCall.index], \"f\");\n                        if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"))\n                            this._emit('toolCallCreated', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                    }\n                }\n            }\n            this._emit('runStepDelta', event.data.delta, accumulatedRunStep);\n            break;\n        case 'thread.run.step.completed':\n        case 'thread.run.step.failed':\n        case 'thread.run.step.cancelled':\n        case 'thread.run.step.expired':\n            __classPrivateFieldSet(this, _AssistantStream_currentRunStepSnapshot, undefined, \"f\");\n            const details = event.data.step_details;\n            if (details.type == 'tool_calls') {\n                if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\")) {\n                    this._emit('toolCallDone', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                    __classPrivateFieldSet(this, _AssistantStream_currentToolCall, undefined, \"f\");\n                }\n            }\n            this._emit('runStepDone', event.data, accumulatedRunStep);\n            break;\n        case 'thread.run.step.in_progress':\n            break;\n    }\n}, _AssistantStream_handleEvent = function _AssistantStream_handleEvent(event) {\n    __classPrivateFieldGet(this, _AssistantStream_events, \"f\").push(event);\n    this._emit('event', event);\n}, _AssistantStream_accumulateRunStep = function _AssistantStream_accumulateRunStep(event) {\n    switch (event.event) {\n        case 'thread.run.step.created':\n            __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = event.data;\n            return event.data;\n        case 'thread.run.step.delta':\n            let snapshot = __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n            if (!snapshot) {\n                throw Error('Received a RunStepDelta before creation of a snapshot');\n            }\n            let data = event.data;\n            if (data.delta) {\n                const accumulated = _a.accumulateDelta(snapshot, data.delta);\n                __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = accumulated;\n            }\n            return __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n        case 'thread.run.step.completed':\n        case 'thread.run.step.failed':\n        case 'thread.run.step.cancelled':\n        case 'thread.run.step.expired':\n        case 'thread.run.step.in_progress':\n            __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = event.data;\n            break;\n    }\n    if (__classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id])\n        return __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n    throw new Error('No snapshot available');\n}, _AssistantStream_accumulateMessage = function _AssistantStream_accumulateMessage(event, snapshot) {\n    let newContent = [];\n    switch (event.event) {\n        case 'thread.message.created':\n            //On creation the snapshot is just the initial message\n            return [event.data, newContent];\n        case 'thread.message.delta':\n            if (!snapshot) {\n                throw Error('Received a delta with no existing snapshot (there should be one from message creation)');\n            }\n            let data = event.data;\n            //If this delta does not have content, nothing to process\n            if (data.delta.content) {\n                for (const contentElement of data.delta.content) {\n                    if (contentElement.index in snapshot.content) {\n                        let currentContent = snapshot.content[contentElement.index];\n                        snapshot.content[contentElement.index] = __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateContent).call(this, contentElement, currentContent);\n                    }\n                    else {\n                        snapshot.content[contentElement.index] = contentElement;\n                        // This is a new element\n                        newContent.push(contentElement);\n                    }\n                }\n            }\n            return [snapshot, newContent];\n        case 'thread.message.in_progress':\n        case 'thread.message.completed':\n        case 'thread.message.incomplete':\n            //No changes on other thread events\n            if (snapshot) {\n                return [snapshot, newContent];\n            }\n            else {\n                throw Error('Received thread message event with no existing snapshot');\n            }\n    }\n    throw Error('Tried to accumulate a non-message event');\n}, _AssistantStream_accumulateContent = function _AssistantStream_accumulateContent(contentElement, currentContent) {\n    return _a.accumulateDelta(currentContent, contentElement);\n}, _AssistantStream_handleRun = function _AssistantStream_handleRun(event) {\n    __classPrivateFieldSet(this, _AssistantStream_currentRunSnapshot, event.data, \"f\");\n    switch (event.event) {\n        case 'thread.run.created':\n            break;\n        case 'thread.run.queued':\n            break;\n        case 'thread.run.in_progress':\n            break;\n        case 'thread.run.requires_action':\n        case 'thread.run.cancelled':\n        case 'thread.run.failed':\n        case 'thread.run.completed':\n        case 'thread.run.expired':\n        case 'thread.run.incomplete':\n            __classPrivateFieldSet(this, _AssistantStream_finalRun, event.data, \"f\");\n            if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\")) {\n                this._emit('toolCallDone', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                __classPrivateFieldSet(this, _AssistantStream_currentToolCall, undefined, \"f\");\n            }\n            break;\n        case 'thread.run.cancelling':\n            break;\n    }\n};\nfunction assertNever(_x) { }\n//# sourceMappingURL=AssistantStream.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../../core/resource.mjs\";\nimport * as StepsAPI from \"./steps.mjs\";\nimport { Steps, } from \"./steps.mjs\";\nimport { CursorPage } from \"../../../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../../../internal/headers.mjs\";\nimport { AssistantStream } from \"../../../../lib/AssistantStream.mjs\";\nimport { sleep } from \"../../../../internal/utils/sleep.mjs\";\nimport { path } from \"../../../../internal/utils/path.mjs\";\n/**\n * @deprecated The Assistants API is deprecated in favor of the Responses API\n */\nexport class Runs extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.steps = new StepsAPI.Steps(this._client);\n    }\n    create(threadID, params, options) {\n        const { include, ...body } = params;\n        return this._client.post(path `/threads/${threadID}/runs`, {\n            query: { include },\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n            stream: params.stream ?? false,\n        });\n    }\n    /**\n     * Retrieves a run.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    retrieve(runID, params, options) {\n        const { thread_id } = params;\n        return this._client.get(path `/threads/${thread_id}/runs/${runID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Modifies a run.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    update(runID, params, options) {\n        const { thread_id, ...body } = params;\n        return this._client.post(path `/threads/${thread_id}/runs/${runID}`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Returns a list of runs belonging to a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    list(threadID, query = {}, options) {\n        return this._client.getAPIList(path `/threads/${threadID}/runs`, (CursorPage), {\n            query,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Cancels a run that is `in_progress`.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    cancel(runID, params, options) {\n        const { thread_id } = params;\n        return this._client.post(path `/threads/${thread_id}/runs/${runID}/cancel`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * A helper to create a run an poll for a terminal state. More information on Run\n     * lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async createAndPoll(threadId, body, options) {\n        const run = await this.create(threadId, body, options);\n        return await this.poll(run.id, { thread_id: threadId }, options);\n    }\n    /**\n     * Create a Run stream\n     *\n     * @deprecated use `stream` instead\n     */\n    createAndStream(threadId, body, options) {\n        return AssistantStream.createAssistantStream(threadId, this._client.beta.threads.runs, body, options);\n    }\n    /**\n     * A helper to poll a run status until it reaches a terminal state. More\n     * information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async poll(runId, params, options) {\n        const headers = buildHeaders([\n            options?.headers,\n            {\n                'X-Stainless-Poll-Helper': 'true',\n                'X-Stainless-Custom-Poll-Interval': options?.pollIntervalMs?.toString() ?? undefined,\n            },\n        ]);\n        while (true) {\n            const { data: run, response } = await this.retrieve(runId, params, {\n                ...options,\n                headers: { ...options?.headers, ...headers },\n            }).withResponse();\n            switch (run.status) {\n                //If we are in any sort of intermediate state we poll\n                case 'queued':\n                case 'in_progress':\n                case 'cancelling':\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    }\n                    else {\n                        const headerInterval = response.headers.get('openai-poll-after-ms');\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await sleep(sleepInterval);\n                    break;\n                //We return the run in any terminal state.\n                case 'requires_action':\n                case 'incomplete':\n                case 'cancelled':\n                case 'completed':\n                case 'failed':\n                case 'expired':\n                    return run;\n            }\n        }\n    }\n    /**\n     * Create a Run stream\n     */\n    stream(threadId, body, options) {\n        return AssistantStream.createAssistantStream(threadId, this._client.beta.threads.runs, body, options);\n    }\n    submitToolOutputs(runID, params, options) {\n        const { thread_id, ...body } = params;\n        return this._client.post(path `/threads/${thread_id}/runs/${runID}/submit_tool_outputs`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n            stream: params.stream ?? false,\n        });\n    }\n    /**\n     * A helper to submit a tool output to a run and poll for a terminal run state.\n     * More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async submitToolOutputsAndPoll(runId, params, options) {\n        const run = await this.submitToolOutputs(runId, params, options);\n        return await this.poll(run.id, params, options);\n    }\n    /**\n     * Submit the tool outputs from a previous run and stream the run to a terminal\n     * state. More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    submitToolOutputsStream(runId, params, options) {\n        return AssistantStream.createToolAssistantStream(runId, this._client.beta.threads.runs, params, options);\n    }\n}\nRuns.Steps = Steps;\n//# sourceMappingURL=runs.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport * as MessagesAPI from \"./messages.mjs\";\nimport { Messages, } from \"./messages.mjs\";\nimport * as RunsAPI from \"./runs/runs.mjs\";\nimport { Runs, } from \"./runs/runs.mjs\";\nimport { buildHeaders } from \"../../../internal/headers.mjs\";\nimport { AssistantStream } from \"../../../lib/AssistantStream.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\n/**\n * @deprecated The Assistants API is deprecated in favor of the Responses API\n */\nexport class Threads extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.runs = new RunsAPI.Runs(this._client);\n        this.messages = new MessagesAPI.Messages(this._client);\n    }\n    /**\n     * Create a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    create(body = {}, options) {\n        return this._client.post('/threads', {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Retrieves a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    retrieve(threadID, options) {\n        return this._client.get(path `/threads/${threadID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Modifies a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    update(threadID, body, options) {\n        return this._client.post(path `/threads/${threadID}`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Delete a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    delete(threadID, options) {\n        return this._client.delete(path `/threads/${threadID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    createAndRun(body, options) {\n        return this._client.post('/threads/runs', {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n            stream: body.stream ?? false,\n        });\n    }\n    /**\n     * A helper to create a thread, start a run and then poll for a terminal state.\n     * More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async createAndRunPoll(body, options) {\n        const run = await this.createAndRun(body, options);\n        return await this.runs.poll(run.id, { thread_id: run.thread_id }, options);\n    }\n    /**\n     * Create a thread and stream the run back\n     */\n    createAndRunStream(body, options) {\n        return AssistantStream.createThreadAssistantStream(body, this._client.beta.threads, options);\n    }\n}\nThreads.Runs = Runs;\nThreads.Messages = Messages;\n//# sourceMappingURL=threads.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as AssistantsAPI from \"./assistants.mjs\";\nimport { Assistants, } from \"./assistants.mjs\";\nimport * as RealtimeAPI from \"./realtime/realtime.mjs\";\nimport { Realtime, } from \"./realtime/realtime.mjs\";\nimport * as ThreadsAPI from \"./threads/threads.mjs\";\nimport { Threads, } from \"./threads/threads.mjs\";\nexport class Beta extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.realtime = new RealtimeAPI.Realtime(this._client);\n        this.assistants = new AssistantsAPI.Assistants(this._client);\n        this.threads = new ThreadsAPI.Threads(this._client);\n    }\n}\nBeta.Realtime = Realtime;\nBeta.Assistants = Assistants;\nBeta.Threads = Threads;\n//# sourceMappingURL=beta.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../core/resource.mjs\";\nexport class Completions extends APIResource {\n    create(body, options) {\n        return this._client.post('/completions', { body, ...options, stream: body.stream ?? false });\n    }\n}\n//# sourceMappingURL=completions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { buildHeaders } from \"../../../internal/headers.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nexport class Content extends APIResource {\n    /**\n     * Retrieve Container File Content\n     */\n    retrieve(fileID, params, options) {\n        const { container_id } = params;\n        return this._client.get(path `/containers/${container_id}/files/${fileID}/content`, {\n            ...options,\n            headers: buildHeaders([{ Accept: 'application/binary' }, options?.headers]),\n            __binaryResponse: true,\n        });\n    }\n}\n//# sourceMappingURL=content.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport * as ContentAPI from \"./content.mjs\";\nimport { Content } from \"./content.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../../internal/headers.mjs\";\nimport { multipartFormRequestOptions } from \"../../../internal/uploads.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nexport class Files extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.content = new ContentAPI.Content(this._client);\n    }\n    /**\n     * Create a Container File\n     *\n     * You can send either a multipart/form-data request with the raw file content, or\n     * a JSON request with a file ID.\n     */\n    create(containerID, body, options) {\n        return this._client.post(path `/containers/${containerID}/files`, multipartFormRequestOptions({ body, ...options }, this._client));\n    }\n    /**\n     * Retrieve Container File\n     */\n    retrieve(fileID, params, options) {\n        const { container_id } = params;\n        return this._client.get(path `/containers/${container_id}/files/${fileID}`, options);\n    }\n    /**\n     * List Container files\n     */\n    list(containerID, query = {}, options) {\n        return this._client.getAPIList(path `/containers/${containerID}/files`, (CursorPage), {\n            query,\n            ...options,\n        });\n    }\n    /**\n     * Delete Container File\n     */\n    delete(fileID, params, options) {\n        const { container_id } = params;\n        return this._client.delete(path `/containers/${container_id}/files/${fileID}`, {\n            ...options,\n            headers: buildHeaders([{ Accept: '*/*' }, options?.headers]),\n        });\n    }\n}\nFiles.Content = Content;\n//# sourceMappingURL=files.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as FilesAPI from \"./files/files.mjs\";\nimport { Files, } from \"./files/files.mjs\";\nimport { CursorPage } from \"../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../internal/headers.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class Containers extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.files = new FilesAPI.Files(this._client);\n    }\n    /**\n     * Create Container\n     */\n    create(body, options) {\n        return this._client.post('/containers', { body, ...options });\n    }\n    /**\n     * Retrieve Container\n     */\n    retrieve(containerID, options) {\n        return this._client.get(path `/containers/${containerID}`, options);\n    }\n    /**\n     * List Containers\n     */\n    list(query = {}, options) {\n        return this._client.getAPIList('/containers', (CursorPage), { query, ...options });\n    }\n    /**\n     * Delete Container\n     */\n    delete(containerID, options) {\n        return this._client.delete(path `/containers/${containerID}`, {\n            ...options,\n            headers: buildHeaders([{ Accept: '*/*' }, options?.headers]),\n        });\n    }\n}\nContainers.Files = Files;\n//# sourceMappingURL=containers.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { ConversationCursorPage, } from \"../../core/pagination.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class Items extends APIResource {\n    /**\n     * Create items in a conversation with the given ID.\n     */\n    create(conversationID, params, options) {\n        const { include, ...body } = params;\n        return this._client.post(path `/conversations/${conversationID}/items`, {\n            query: { include },\n            body,\n            ...options,\n        });\n    }\n    /**\n     * Get a single item from a conversation with the given IDs.\n     */\n    retrieve(itemID, params, options) {\n        const { conversation_id, ...query } = params;\n        return this._client.get(path `/conversations/${conversation_id}/items/${itemID}`, { query, ...options });\n    }\n    /**\n     * List all items for a conversation with the given ID.\n     */\n    list(conversationID, query = {}, options) {\n        return this._client.getAPIList(path `/conversations/${conversationID}/items`, (ConversationCursorPage), { query, ...options });\n    }\n    /**\n     * Delete an item from a conversation with the given IDs.\n     */\n    delete(itemID, params, options) {\n        const { conversation_id } = params;\n        return this._client.delete(path `/conversations/${conversation_id}/items/${itemID}`, options);\n    }\n}\n//# sourceMappingURL=items.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as ItemsAPI from \"./items.mjs\";\nimport { Items, } from \"./items.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class Conversations extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.items = new ItemsAPI.Items(this._client);\n    }\n    /**\n     * Create a conversation.\n     */\n    create(body, options) {\n        return this._client.post('/conversations', { body, ...options });\n    }\n    /**\n     * Get a conversation with the given ID.\n     */\n    retrieve(conversationID, options) {\n        return this._client.get(path `/conversations/${conversationID}`, options);\n    }\n    /**\n     * Update a conversation's metadata with the given ID.\n     */\n    update(conversationID, body, options) {\n        return this._client.post(path `/conversations/${conversationID}`, { body, ...options });\n    }\n    /**\n     * Delete a conversation with the given ID.\n     */\n    delete(conversationID, options) {\n        return this._client.delete(path `/conversations/${conversationID}`, options);\n    }\n}\nConversations.Items = Items;\n//# sourceMappingURL=conversations.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../core/resource.mjs\";\nimport { loggerFor, toFloat32Array } from \"../internal/utils.mjs\";\nexport class Embeddings extends APIResource {\n    /**\n     * Creates an embedding vector representing the input text.\n     *\n     * @example\n     * ```ts\n     * const createEmbeddingResponse =\n     *   await client.embeddings.create({\n     *     input: 'The quick brown fox jumped over the lazy dog',\n     *     model: 'text-embedding-3-small',\n     *   });\n     * ```\n     */\n    create(body, options) {\n        const hasUserProvidedEncodingFormat = !!body.encoding_format;\n        // No encoding_format specified, defaulting to base64 for performance reasons\n        // See https://github.com/openai/openai-node/pull/1312\n        let encoding_format = hasUserProvidedEncodingFormat ? body.encoding_format : 'base64';\n        if (hasUserProvidedEncodingFormat) {\n            loggerFor(this._client).debug('embeddings/user defined encoding_format:', body.encoding_format);\n        }\n        const response = this._client.post('/embeddings', {\n            body: {\n                ...body,\n                encoding_format: encoding_format,\n            },\n            ...options,\n        });\n        // if the user specified an encoding_format, return the response as-is\n        if (hasUserProvidedEncodingFormat) {\n            return response;\n        }\n        // in this stage, we are sure the user did not specify an encoding_format\n        // and we defaulted to base64 for performance reasons\n        // we are sure then that the response is base64 encoded, let's decode it\n        // the returned result will be a float32 array since this is OpenAI API's default encoding\n        loggerFor(this._client).debug('embeddings/decoding base64 embeddings from base64');\n        return response._thenUnwrap((response) => {\n            if (response && response.data) {\n                response.data.forEach((embeddingBase64Obj) => {\n                    const embeddingBase64Str = embeddingBase64Obj.embedding;\n                    embeddingBase64Obj.embedding = toFloat32Array(embeddingBase64Str);\n                });\n            }\n            return response;\n        });\n    }\n}\n//# sourceMappingURL=embeddings.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nexport class OutputItems extends APIResource {\n    /**\n     * Get an evaluation run output item by ID.\n     */\n    retrieve(outputItemID, params, options) {\n        const { eval_id, run_id } = params;\n        return this._client.get(path `/evals/${eval_id}/runs/${run_id}/output_items/${outputItemID}`, options);\n    }\n    /**\n     * Get a list of output items for an evaluation run.\n     */\n    list(runID, params, options) {\n        const { eval_id, ...query } = params;\n        return this._client.getAPIList(path `/evals/${eval_id}/runs/${runID}/output_items`, (CursorPage), { query, ...options });\n    }\n}\n//# sourceMappingURL=output-items.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport * as OutputItemsAPI from \"./output-items.mjs\";\nimport { OutputItems, } from \"./output-items.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nexport class Runs extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.outputItems = new OutputItemsAPI.OutputItems(this._client);\n    }\n    /**\n     * Kicks off a new run for a given evaluation, specifying the data source, and what\n     * model configuration to use to test. The datasource will be validated against the\n     * schema specified in the config of the evaluation.\n     */\n    create(evalID, body, options) {\n        return this._client.post(path `/evals/${evalID}/runs`, { body, ...options });\n    }\n    /**\n     * Get an evaluation run by ID.\n     */\n    retrieve(runID, params, options) {\n        const { eval_id } = params;\n        return this._client.get(path `/evals/${eval_id}/runs/${runID}`, options);\n    }\n    /**\n     * Get a list of runs for an evaluation.\n     */\n    list(evalID, query = {}, options) {\n        return this._client.getAPIList(path `/evals/${evalID}/runs`, (CursorPage), {\n            query,\n            ...options,\n        });\n    }\n    /**\n     * Delete an eval run.\n     */\n    delete(runID, params, options) {\n        const { eval_id } = params;\n        return this._client.delete(path `/evals/${eval_id}/runs/${runID}`, options);\n    }\n    /**\n     * Cancel an ongoing evaluation run.\n     */\n    cancel(runID, params, options) {\n        const { eval_id } = params;\n        return this._client.post(path `/evals/${eval_id}/runs/${runID}`, options);\n    }\n}\nRuns.OutputItems = OutputItems;\n//# sourceMappingURL=runs.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as RunsAPI from \"./runs/runs.mjs\";\nimport { Runs, } from \"./runs/runs.mjs\";\nimport { CursorPage } from \"../../core/pagination.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class Evals extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.runs = new RunsAPI.Runs(this._client);\n    }\n    /**\n     * Create the structure of an evaluation that can be used to test a model's\n     * performance. An evaluation is a set of testing criteria and the config for a\n     * data source, which dictates the schema of the data used in the evaluation. After\n     * creating an evaluation, you can run it on different models and model parameters.\n     * We support several types of graders and datasources. For more information, see\n     * the [Evals guide](https://platform.openai.com/docs/guides/evals).\n     */\n    create(body, options) {\n        return this._client.post('/evals', { body, ...options });\n    }\n    /**\n     * Get an evaluation by ID.\n     */\n    retrieve(evalID, options) {\n        return this._client.get(path `/evals/${evalID}`, options);\n    }\n    /**\n     * Update certain properties of an evaluation.\n     */\n    update(evalID, body, options) {\n        return this._client.post(path `/evals/${evalID}`, { body, ...options });\n    }\n    /**\n     * List evaluations for a project.\n     */\n    list(query = {}, options) {\n        return this._client.getAPIList('/evals', (CursorPage), { query, ...options });\n    }\n    /**\n     * Delete an evaluation.\n     */\n    delete(evalID, options) {\n        return this._client.delete(path `/evals/${evalID}`, options);\n    }\n}\nEvals.Runs = Runs;\n//# sourceMappingURL=evals.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../core/resource.mjs\";\nimport { CursorPage } from \"../core/pagination.mjs\";\nimport { buildHeaders } from \"../internal/headers.mjs\";\nimport { sleep } from \"../internal/utils/sleep.mjs\";\nimport { APIConnectionTimeoutError } from \"../error.mjs\";\nimport { multipartFormRequestOptions } from \"../internal/uploads.mjs\";\nimport { path } from \"../internal/utils/path.mjs\";\nexport class Files extends APIResource {\n    /**\n     * Upload a file that can be used across various endpoints. Individual files can be\n     * up to 512 MB, and the size of all files uploaded by one organization can be up\n     * to 1 TB.\n     *\n     * The Assistants API supports files up to 2 million tokens and of specific file\n     * types. See the\n     * [Assistants Tools guide](https://platform.openai.com/docs/assistants/tools) for\n     * details.\n     *\n     * The Fine-tuning API only supports `.jsonl` files. The input also has certain\n     * required formats for fine-tuning\n     * [chat](https://platform.openai.com/docs/api-reference/fine-tuning/chat-input) or\n     * [completions](https://platform.openai.com/docs/api-reference/fine-tuning/completions-input)\n     * models.\n     *\n     * The Batch API only supports `.jsonl` files up to 200 MB in size. The input also\n     * has a specific required\n     * [format](https://platform.openai.com/docs/api-reference/batch/request-input).\n     *\n     * Please [contact us](https://help.openai.com/) if you need to increase these\n     * storage limits.\n     */\n    create(body, options) {\n        return this._client.post('/files', multipartFormRequestOptions({ body, ...options }, this._client));\n    }\n    /**\n     * Returns information about a specific file.\n     */\n    retrieve(fileID, options) {\n        return this._client.get(path `/files/${fileID}`, options);\n    }\n    /**\n     * Returns a list of files.\n     */\n    list(query = {}, options) {\n        return this._client.getAPIList('/files', (CursorPage), { query, ...options });\n    }\n    /**\n     * Delete a file.\n     */\n    delete(fileID, options) {\n        return this._client.delete(path `/files/${fileID}`, options);\n    }\n    /**\n     * Returns the contents of the specified file.\n     */\n    content(fileID, options) {\n        return this._client.get(path `/files/${fileID}/content`, {\n            ...options,\n            headers: buildHeaders([{ Accept: 'application/binary' }, options?.headers]),\n            __binaryResponse: true,\n        });\n    }\n    /**\n     * Waits for the given file to be processed, default timeout is 30 mins.\n     */\n    async waitForProcessing(id, { pollInterval = 5000, maxWait = 30 * 60 * 1000 } = {}) {\n        const TERMINAL_STATES = new Set(['processed', 'error', 'deleted']);\n        const start = Date.now();\n        let file = await this.retrieve(id);\n        while (!file.status || !TERMINAL_STATES.has(file.status)) {\n            await sleep(pollInterval);\n            file = await this.retrieve(id);\n            if (Date.now() - start > maxWait) {\n                throw new APIConnectionTimeoutError({\n                    message: `Giving up on waiting for file ${id} to finish processing after ${maxWait} milliseconds.`,\n                });\n            }\n        }\n        return file;\n    }\n}\n//# sourceMappingURL=files.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nexport class Methods extends APIResource {\n}\n//# sourceMappingURL=methods.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nexport class Graders extends APIResource {\n    /**\n     * Run a grader.\n     *\n     * @example\n     * ```ts\n     * const response = await client.fineTuning.alpha.graders.run({\n     *   grader: {\n     *     input: 'input',\n     *     name: 'name',\n     *     operation: 'eq',\n     *     reference: 'reference',\n     *     type: 'string_check',\n     *   },\n     *   model_sample: 'model_sample',\n     * });\n     * ```\n     */\n    run(body, options) {\n        return this._client.post('/fine_tuning/alpha/graders/run', { body, ...options });\n    }\n    /**\n     * Validate a grader.\n     *\n     * @example\n     * ```ts\n     * const response =\n     *   await client.fineTuning.alpha.graders.validate({\n     *     grader: {\n     *       input: 'input',\n     *       name: 'name',\n     *       operation: 'eq',\n     *       reference: 'reference',\n     *       type: 'string_check',\n     *     },\n     *   });\n     * ```\n     */\n    validate(body, options) {\n        return this._client.post('/fine_tuning/alpha/graders/validate', { body, ...options });\n    }\n}\n//# sourceMappingURL=graders.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport * as GradersAPI from \"./graders.mjs\";\nimport { Graders, } from \"./graders.mjs\";\nexport class Alpha extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.graders = new GradersAPI.Graders(this._client);\n    }\n}\nAlpha.Graders = Graders;\n//# sourceMappingURL=alpha.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { Page } from \"../../../core/pagination.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nexport class Permissions extends APIResource {\n    /**\n     * **NOTE:** Calling this endpoint requires an [admin API key](../admin-api-keys).\n     *\n     * This enables organization owners to share fine-tuned models with other projects\n     * in their organization.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const permissionCreateResponse of client.fineTuning.checkpoints.permissions.create(\n     *   'ft:gpt-4o-mini-2024-07-18:org:weather:B7R9VjQd',\n     *   { project_ids: ['string'] },\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */\n    create(fineTunedModelCheckpoint, body, options) {\n        return this._client.getAPIList(path `/fine_tuning/checkpoints/${fineTunedModelCheckpoint}/permissions`, (Page), { body, method: 'post', ...options });\n    }\n    /**\n     * **NOTE:** This endpoint requires an [admin API key](../admin-api-keys).\n     *\n     * Organization owners can use this endpoint to view all permissions for a\n     * fine-tuned model checkpoint.\n     *\n     * @example\n     * ```ts\n     * const permission =\n     *   await client.fineTuning.checkpoints.permissions.retrieve(\n     *     'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     *   );\n     * ```\n     */\n    retrieve(fineTunedModelCheckpoint, query = {}, options) {\n        return this._client.get(path `/fine_tuning/checkpoints/${fineTunedModelCheckpoint}/permissions`, {\n            query,\n            ...options,\n        });\n    }\n    /**\n     * **NOTE:** This endpoint requires an [admin API key](../admin-api-keys).\n     *\n     * Organization owners can use this endpoint to delete a permission for a\n     * fine-tuned model checkpoint.\n     *\n     * @example\n     * ```ts\n     * const permission =\n     *   await client.fineTuning.checkpoints.permissions.delete(\n     *     'cp_zc4Q7MP6XxulcVzj4MZdwsAB',\n     *     {\n     *       fine_tuned_model_checkpoint:\n     *         'ft:gpt-4o-mini-2024-07-18:org:weather:B7R9VjQd',\n     *     },\n     *   );\n     * ```\n     */\n    delete(permissionID, params, options) {\n        const { fine_tuned_model_checkpoint } = params;\n        return this._client.delete(path `/fine_tuning/checkpoints/${fine_tuned_model_checkpoint}/permissions/${permissionID}`, options);\n    }\n}\n//# sourceMappingURL=permissions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport * as PermissionsAPI from \"./permissions.mjs\";\nimport { Permissions, } from \"./permissions.mjs\";\nexport class Checkpoints extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.permissions = new PermissionsAPI.Permissions(this._client);\n    }\n}\nCheckpoints.Permissions = Permissions;\n//# sourceMappingURL=checkpoints.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nexport class Checkpoints extends APIResource {\n    /**\n     * List checkpoints for a fine-tuning job.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const fineTuningJobCheckpoint of client.fineTuning.jobs.checkpoints.list(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */\n    list(fineTuningJobID, query = {}, options) {\n        return this._client.getAPIList(path `/fine_tuning/jobs/${fineTuningJobID}/checkpoints`, (CursorPage), { query, ...options });\n    }\n}\n//# sourceMappingURL=checkpoints.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport * as CheckpointsAPI from \"./checkpoints.mjs\";\nimport { Checkpoints, } from \"./checkpoints.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nexport class Jobs extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.checkpoints = new CheckpointsAPI.Checkpoints(this._client);\n    }\n    /**\n     * Creates a fine-tuning job which begins the process of creating a new model from\n     * a given dataset.\n     *\n     * Response includes details of the enqueued job including job status and the name\n     * of the fine-tuned models once complete.\n     *\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/model-optimization)\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.create({\n     *   model: 'gpt-4o-mini',\n     *   training_file: 'file-abc123',\n     * });\n     * ```\n     */\n    create(body, options) {\n        return this._client.post('/fine_tuning/jobs', { body, ...options });\n    }\n    /**\n     * Get info about a fine-tuning job.\n     *\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/model-optimization)\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.retrieve(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * );\n     * ```\n     */\n    retrieve(fineTuningJobID, options) {\n        return this._client.get(path `/fine_tuning/jobs/${fineTuningJobID}`, options);\n    }\n    /**\n     * List your organization's fine-tuning jobs\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const fineTuningJob of client.fineTuning.jobs.list()) {\n     *   // ...\n     * }\n     * ```\n     */\n    list(query = {}, options) {\n        return this._client.getAPIList('/fine_tuning/jobs', (CursorPage), { query, ...options });\n    }\n    /**\n     * Immediately cancel a fine-tune job.\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.cancel(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * );\n     * ```\n     */\n    cancel(fineTuningJobID, options) {\n        return this._client.post(path `/fine_tuning/jobs/${fineTuningJobID}/cancel`, options);\n    }\n    /**\n     * Get status updates for a fine-tuning job.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const fineTuningJobEvent of client.fineTuning.jobs.listEvents(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */\n    listEvents(fineTuningJobID, query = {}, options) {\n        return this._client.getAPIList(path `/fine_tuning/jobs/${fineTuningJobID}/events`, (CursorPage), { query, ...options });\n    }\n    /**\n     * Pause a fine-tune job.\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.pause(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * );\n     * ```\n     */\n    pause(fineTuningJobID, options) {\n        return this._client.post(path `/fine_tuning/jobs/${fineTuningJobID}/pause`, options);\n    }\n    /**\n     * Resume a fine-tune job.\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.resume(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * );\n     * ```\n     */\n    resume(fineTuningJobID, options) {\n        return this._client.post(path `/fine_tuning/jobs/${fineTuningJobID}/resume`, options);\n    }\n}\nJobs.Checkpoints = Checkpoints;\n//# sourceMappingURL=jobs.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as MethodsAPI from \"./methods.mjs\";\nimport { Methods, } from \"./methods.mjs\";\nimport * as AlphaAPI from \"./alpha/alpha.mjs\";\nimport { Alpha } from \"./alpha/alpha.mjs\";\nimport * as CheckpointsAPI from \"./checkpoints/checkpoints.mjs\";\nimport { Checkpoints } from \"./checkpoints/checkpoints.mjs\";\nimport * as JobsAPI from \"./jobs/jobs.mjs\";\nimport { Jobs, } from \"./jobs/jobs.mjs\";\nexport class FineTuning extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.methods = new MethodsAPI.Methods(this._client);\n        this.jobs = new JobsAPI.Jobs(this._client);\n        this.checkpoints = new CheckpointsAPI.Checkpoints(this._client);\n        this.alpha = new AlphaAPI.Alpha(this._client);\n    }\n}\nFineTuning.Methods = Methods;\nFineTuning.Jobs = Jobs;\nFineTuning.Checkpoints = Checkpoints;\nFineTuning.Alpha = Alpha;\n//# sourceMappingURL=fine-tuning.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nexport class GraderModels extends APIResource {\n}\n//# sourceMappingURL=grader-models.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as GraderModelsAPI from \"./grader-models.mjs\";\nimport { GraderModels, } from \"./grader-models.mjs\";\nexport class Graders extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.graderModels = new GraderModelsAPI.GraderModels(this._client);\n    }\n}\nGraders.GraderModels = GraderModels;\n//# sourceMappingURL=graders.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../core/resource.mjs\";\nimport { multipartFormRequestOptions } from \"../internal/uploads.mjs\";\nexport class Images extends APIResource {\n    /**\n     * Creates a variation of a given image. This endpoint only supports `dall-e-2`.\n     *\n     * @example\n     * ```ts\n     * const imagesResponse = await client.images.createVariation({\n     *   image: fs.createReadStream('otter.png'),\n     * });\n     * ```\n     */\n    createVariation(body, options) {\n        return this._client.post('/images/variations', multipartFormRequestOptions({ body, ...options }, this._client));\n    }\n    edit(body, options) {\n        return this._client.post('/images/edits', multipartFormRequestOptions({ body, ...options, stream: body.stream ?? false }, this._client));\n    }\n    generate(body, options) {\n        return this._client.post('/images/generations', { body, ...options, stream: body.stream ?? false });\n    }\n}\n//# sourceMappingURL=images.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../core/resource.mjs\";\nimport { Page } from \"../core/pagination.mjs\";\nimport { path } from \"../internal/utils/path.mjs\";\nexport class Models extends APIResource {\n    /**\n     * Retrieves a model instance, providing basic information about the model such as\n     * the owner and permissioning.\n     */\n    retrieve(model, options) {\n        return this._client.get(path `/models/${model}`, options);\n    }\n    /**\n     * Lists the currently available models, and provides basic information about each\n     * one such as the owner and availability.\n     */\n    list(options) {\n        return this._client.getAPIList('/models', (Page), options);\n    }\n    /**\n     * Delete a fine-tuned model. You must have the Owner role in your organization to\n     * delete a model.\n     */\n    delete(model, options) {\n        return this._client.delete(path `/models/${model}`, options);\n    }\n}\n//# sourceMappingURL=models.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../core/resource.mjs\";\nexport class Moderations extends APIResource {\n    /**\n     * Classifies if text and/or image inputs are potentially harmful. Learn more in\n     * the [moderation guide](https://platform.openai.com/docs/guides/moderation).\n     */\n    create(body, options) {\n        return this._client.post('/moderations', { body, ...options });\n    }\n}\n//# sourceMappingURL=moderations.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nexport class ClientSecrets extends APIResource {\n    /**\n     * Create a Realtime client secret with an associated session configuration.\n     */\n    create(body, options) {\n        return this._client.post('/realtime/client_secrets', { body, ...options });\n    }\n}\n//# sourceMappingURL=client-secrets.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as ClientSecretsAPI from \"./client-secrets.mjs\";\nimport { ClientSecrets, } from \"./client-secrets.mjs\";\nexport class Realtime extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.clientSecrets = new ClientSecretsAPI.ClientSecrets(this._client);\n    }\n}\nRealtime.ClientSecrets = ClientSecrets;\n//# sourceMappingURL=realtime.mjs.map","import { OpenAIError } from \"../error.mjs\";\nimport { isAutoParsableResponseFormat } from \"../lib/parser.mjs\";\nexport function maybeParseResponse(response, params) {\n    if (!params || !hasAutoParseableInput(params)) {\n        return {\n            ...response,\n            output_parsed: null,\n            output: response.output.map((item) => {\n                if (item.type === 'function_call') {\n                    return {\n                        ...item,\n                        parsed_arguments: null,\n                    };\n                }\n                if (item.type === 'message') {\n                    return {\n                        ...item,\n                        content: item.content.map((content) => ({\n                            ...content,\n                            parsed: null,\n                        })),\n                    };\n                }\n                else {\n                    return item;\n                }\n            }),\n        };\n    }\n    return parseResponse(response, params);\n}\nexport function parseResponse(response, params) {\n    const output = response.output.map((item) => {\n        if (item.type === 'function_call') {\n            return {\n                ...item,\n                parsed_arguments: parseToolCall(params, item),\n            };\n        }\n        if (item.type === 'message') {\n            const content = item.content.map((content) => {\n                if (content.type === 'output_text') {\n                    return {\n                        ...content,\n                        parsed: parseTextFormat(params, content.text),\n                    };\n                }\n                return content;\n            });\n            return {\n                ...item,\n                content,\n            };\n        }\n        return item;\n    });\n    const parsed = Object.assign({}, response, { output });\n    if (!Object.getOwnPropertyDescriptor(response, 'output_text')) {\n        addOutputText(parsed);\n    }\n    Object.defineProperty(parsed, 'output_parsed', {\n        enumerable: true,\n        get() {\n            for (const output of parsed.output) {\n                if (output.type !== 'message') {\n                    continue;\n                }\n                for (const content of output.content) {\n                    if (content.type === 'output_text' && content.parsed !== null) {\n                        return content.parsed;\n                    }\n                }\n            }\n            return null;\n        },\n    });\n    return parsed;\n}\nfunction parseTextFormat(params, content) {\n    if (params.text?.format?.type !== 'json_schema') {\n        return null;\n    }\n    if ('$parseRaw' in params.text?.format) {\n        const text_format = params.text?.format;\n        return text_format.$parseRaw(content);\n    }\n    return JSON.parse(content);\n}\nexport function hasAutoParseableInput(params) {\n    if (isAutoParsableResponseFormat(params.text?.format)) {\n        return true;\n    }\n    return false;\n}\nexport function makeParseableResponseTool(tool, { parser, callback, }) {\n    const obj = { ...tool };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: 'auto-parseable-tool',\n            enumerable: false,\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false,\n        },\n        $callback: {\n            value: callback,\n            enumerable: false,\n        },\n    });\n    return obj;\n}\nexport function isAutoParsableTool(tool) {\n    return tool?.['$brand'] === 'auto-parseable-tool';\n}\nfunction getInputToolByName(input_tools, name) {\n    return input_tools.find((tool) => tool.type === 'function' && tool.name === name);\n}\nfunction parseToolCall(params, toolCall) {\n    const inputTool = getInputToolByName(params.tools ?? [], toolCall.name);\n    return {\n        ...toolCall,\n        ...toolCall,\n        parsed_arguments: isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCall.arguments)\n            : inputTool?.strict ? JSON.parse(toolCall.arguments)\n                : null,\n    };\n}\nexport function shouldParseToolCall(params, toolCall) {\n    if (!params) {\n        return false;\n    }\n    const inputTool = getInputToolByName(params.tools ?? [], toolCall.name);\n    return isAutoParsableTool(inputTool) || inputTool?.strict || false;\n}\nexport function validateInputTools(tools) {\n    for (const tool of tools ?? []) {\n        if (tool.type !== 'function') {\n            throw new OpenAIError(`Currently only \\`function\\` tool types support auto-parsing; Received \\`${tool.type}\\``);\n        }\n        if (tool.function.strict !== true) {\n            throw new OpenAIError(`The \\`${tool.function.name}\\` tool is not marked with \\`strict: true\\`. Only strict function tools can be auto-parsed`);\n        }\n    }\n}\nexport function addOutputText(rsp) {\n    const texts = [];\n    for (const output of rsp.output) {\n        if (output.type !== 'message') {\n            continue;\n        }\n        for (const content of output.content) {\n            if (content.type === 'output_text') {\n                texts.push(content.text);\n            }\n        }\n    }\n    rsp.output_text = texts.join('');\n}\n//# sourceMappingURL=ResponsesParser.mjs.map","var _ResponseStream_instances, _ResponseStream_params, _ResponseStream_currentResponseSnapshot, _ResponseStream_finalResponse, _ResponseStream_beginRequest, _ResponseStream_addEvent, _ResponseStream_endRequest, _ResponseStream_accumulateResponse;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"../../internal/tslib.mjs\";\nimport { APIUserAbortError, OpenAIError } from \"../../error.mjs\";\nimport { EventStream } from \"../EventStream.mjs\";\nimport { maybeParseResponse } from \"../ResponsesParser.mjs\";\nexport class ResponseStream extends EventStream {\n    constructor(params) {\n        super();\n        _ResponseStream_instances.add(this);\n        _ResponseStream_params.set(this, void 0);\n        _ResponseStream_currentResponseSnapshot.set(this, void 0);\n        _ResponseStream_finalResponse.set(this, void 0);\n        __classPrivateFieldSet(this, _ResponseStream_params, params, \"f\");\n    }\n    static createResponse(client, params, options) {\n        const runner = new ResponseStream(params);\n        runner._run(() => runner._createOrRetrieveResponse(client, params, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    async _createOrRetrieveResponse(client, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _ResponseStream_instances, \"m\", _ResponseStream_beginRequest).call(this);\n        let stream;\n        let starting_after = null;\n        if ('response_id' in params) {\n            stream = await client.responses.retrieve(params.response_id, { stream: true }, { ...options, signal: this.controller.signal, stream: true });\n            starting_after = params.starting_after ?? null;\n        }\n        else {\n            stream = await client.responses.create({ ...params, stream: true }, { ...options, signal: this.controller.signal });\n        }\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _ResponseStream_instances, \"m\", _ResponseStream_addEvent).call(this, event, starting_after);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return __classPrivateFieldGet(this, _ResponseStream_instances, \"m\", _ResponseStream_endRequest).call(this);\n    }\n    [(_ResponseStream_params = new WeakMap(), _ResponseStream_currentResponseSnapshot = new WeakMap(), _ResponseStream_finalResponse = new WeakMap(), _ResponseStream_instances = new WeakSet(), _ResponseStream_beginRequest = function _ResponseStream_beginRequest() {\n        if (this.ended)\n            return;\n        __classPrivateFieldSet(this, _ResponseStream_currentResponseSnapshot, undefined, \"f\");\n    }, _ResponseStream_addEvent = function _ResponseStream_addEvent(event, starting_after) {\n        if (this.ended)\n            return;\n        const maybeEmit = (name, event) => {\n            if (starting_after == null || event.sequence_number > starting_after) {\n                this._emit(name, event);\n            }\n        };\n        const response = __classPrivateFieldGet(this, _ResponseStream_instances, \"m\", _ResponseStream_accumulateResponse).call(this, event);\n        maybeEmit('event', event);\n        switch (event.type) {\n            case 'response.output_text.delta': {\n                const output = response.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'message') {\n                    const content = output.content[event.content_index];\n                    if (!content) {\n                        throw new OpenAIError(`missing content at index ${event.content_index}`);\n                    }\n                    if (content.type !== 'output_text') {\n                        throw new OpenAIError(`expected content to be 'output_text', got ${content.type}`);\n                    }\n                    maybeEmit('response.output_text.delta', {\n                        ...event,\n                        snapshot: content.text,\n                    });\n                }\n                break;\n            }\n            case 'response.function_call_arguments.delta': {\n                const output = response.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'function_call') {\n                    maybeEmit('response.function_call_arguments.delta', {\n                        ...event,\n                        snapshot: output.arguments,\n                    });\n                }\n                break;\n            }\n            default:\n                maybeEmit(event.type, event);\n                break;\n        }\n    }, _ResponseStream_endRequest = function _ResponseStream_endRequest() {\n        if (this.ended) {\n            throw new OpenAIError(`stream has ended, this shouldn't happen`);\n        }\n        const snapshot = __classPrivateFieldGet(this, _ResponseStream_currentResponseSnapshot, \"f\");\n        if (!snapshot) {\n            throw new OpenAIError(`request ended without sending any events`);\n        }\n        __classPrivateFieldSet(this, _ResponseStream_currentResponseSnapshot, undefined, \"f\");\n        const parsedResponse = finalizeResponse(snapshot, __classPrivateFieldGet(this, _ResponseStream_params, \"f\"));\n        __classPrivateFieldSet(this, _ResponseStream_finalResponse, parsedResponse, \"f\");\n        return parsedResponse;\n    }, _ResponseStream_accumulateResponse = function _ResponseStream_accumulateResponse(event) {\n        let snapshot = __classPrivateFieldGet(this, _ResponseStream_currentResponseSnapshot, \"f\");\n        if (!snapshot) {\n            if (event.type !== 'response.created') {\n                throw new OpenAIError(`When snapshot hasn't been set yet, expected 'response.created' event, got ${event.type}`);\n            }\n            snapshot = __classPrivateFieldSet(this, _ResponseStream_currentResponseSnapshot, event.response, \"f\");\n            return snapshot;\n        }\n        switch (event.type) {\n            case 'response.output_item.added': {\n                snapshot.output.push(event.item);\n                break;\n            }\n            case 'response.content_part.added': {\n                const output = snapshot.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'message') {\n                    output.content.push(event.part);\n                }\n                break;\n            }\n            case 'response.output_text.delta': {\n                const output = snapshot.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'message') {\n                    const content = output.content[event.content_index];\n                    if (!content) {\n                        throw new OpenAIError(`missing content at index ${event.content_index}`);\n                    }\n                    if (content.type !== 'output_text') {\n                        throw new OpenAIError(`expected content to be 'output_text', got ${content.type}`);\n                    }\n                    content.text += event.delta;\n                }\n                break;\n            }\n            case 'response.function_call_arguments.delta': {\n                const output = snapshot.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'function_call') {\n                    output.arguments += event.delta;\n                }\n                break;\n            }\n            case 'response.completed': {\n                __classPrivateFieldSet(this, _ResponseStream_currentResponseSnapshot, event.response, \"f\");\n                break;\n            }\n        }\n        return snapshot;\n    }, Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        this.on('event', (event) => {\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(event);\n            }\n            else {\n                pushQueue.push(event);\n            }\n        });\n        this.on('end', () => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on('abort', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on('error', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async () => {\n                if (!pushQueue.length) {\n                    if (done) {\n                        return { value: undefined, done: true };\n                    }\n                    return new Promise((resolve, reject) => readQueue.push({ resolve, reject })).then((event) => (event ? { value: event, done: false } : { value: undefined, done: true }));\n                }\n                const event = pushQueue.shift();\n                return { value: event, done: false };\n            },\n            return: async () => {\n                this.abort();\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    /**\n     * @returns a promise that resolves with the final Response, or rejects\n     * if an error occurred or the stream ended prematurely without producing a REsponse.\n     */\n    async finalResponse() {\n        await this.done();\n        const response = __classPrivateFieldGet(this, _ResponseStream_finalResponse, \"f\");\n        if (!response)\n            throw new OpenAIError('stream ended without producing a ChatCompletion');\n        return response;\n    }\n}\nfunction finalizeResponse(snapshot, params) {\n    return maybeParseResponse(snapshot, params);\n}\n//# sourceMappingURL=ResponseStream.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { CursorPage } from \"../../core/pagination.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class InputItems extends APIResource {\n    /**\n     * Returns a list of input items for a given response.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const responseItem of client.responses.inputItems.list(\n     *   'response_id',\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */\n    list(responseID, query = {}, options) {\n        return this._client.getAPIList(path `/responses/${responseID}/input_items`, (CursorPage), { query, ...options });\n    }\n}\n//# sourceMappingURL=input-items.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { parseResponse, addOutputText, } from \"../../lib/ResponsesParser.mjs\";\nimport { ResponseStream } from \"../../lib/responses/ResponseStream.mjs\";\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as InputItemsAPI from \"./input-items.mjs\";\nimport { InputItems } from \"./input-items.mjs\";\nimport { buildHeaders } from \"../../internal/headers.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class Responses extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.inputItems = new InputItemsAPI.InputItems(this._client);\n    }\n    create(body, options) {\n        return this._client.post('/responses', { body, ...options, stream: body.stream ?? false })._thenUnwrap((rsp) => {\n            if ('object' in rsp && rsp.object === 'response') {\n                addOutputText(rsp);\n            }\n            return rsp;\n        });\n    }\n    retrieve(responseID, query = {}, options) {\n        return this._client.get(path `/responses/${responseID}`, {\n            query,\n            ...options,\n            stream: query?.stream ?? false,\n        })._thenUnwrap((rsp) => {\n            if ('object' in rsp && rsp.object === 'response') {\n                addOutputText(rsp);\n            }\n            return rsp;\n        });\n    }\n    /**\n     * Deletes a model response with the given ID.\n     *\n     * @example\n     * ```ts\n     * await client.responses.delete(\n     *   'resp_677efb5139a88190b512bc3fef8e535d',\n     * );\n     * ```\n     */\n    delete(responseID, options) {\n        return this._client.delete(path `/responses/${responseID}`, {\n            ...options,\n            headers: buildHeaders([{ Accept: '*/*' }, options?.headers]),\n        });\n    }\n    parse(body, options) {\n        return this._client.responses\n            .create(body, options)\n            ._thenUnwrap((response) => parseResponse(response, body));\n    }\n    /**\n     * Creates a model response stream\n     */\n    stream(body, options) {\n        return ResponseStream.createResponse(this._client, body, options);\n    }\n    /**\n     * Cancels a model response with the given ID. Only responses created with the\n     * `background` parameter set to `true` can be cancelled.\n     * [Learn more](https://platform.openai.com/docs/guides/background).\n     *\n     * @example\n     * ```ts\n     * const response = await client.responses.cancel(\n     *   'resp_677efb5139a88190b512bc3fef8e535d',\n     * );\n     * ```\n     */\n    cancel(responseID, options) {\n        return this._client.post(path `/responses/${responseID}/cancel`, options);\n    }\n}\nResponses.InputItems = InputItems;\n//# sourceMappingURL=responses.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { multipartFormRequestOptions } from \"../../internal/uploads.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class Parts extends APIResource {\n    /**\n     * Adds a\n     * [Part](https://platform.openai.com/docs/api-reference/uploads/part-object) to an\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object) object.\n     * A Part represents a chunk of bytes from the file you are trying to upload.\n     *\n     * Each Part can be at most 64 MB, and you can add Parts until you hit the Upload\n     * maximum of 8 GB.\n     *\n     * It is possible to add multiple Parts in parallel. You can decide the intended\n     * order of the Parts when you\n     * [complete the Upload](https://platform.openai.com/docs/api-reference/uploads/complete).\n     */\n    create(uploadID, body, options) {\n        return this._client.post(path `/uploads/${uploadID}/parts`, multipartFormRequestOptions({ body, ...options }, this._client));\n    }\n}\n//# sourceMappingURL=parts.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as PartsAPI from \"./parts.mjs\";\nimport { Parts } from \"./parts.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class Uploads extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.parts = new PartsAPI.Parts(this._client);\n    }\n    /**\n     * Creates an intermediate\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object) object\n     * that you can add\n     * [Parts](https://platform.openai.com/docs/api-reference/uploads/part-object) to.\n     * Currently, an Upload can accept at most 8 GB in total and expires after an hour\n     * after you create it.\n     *\n     * Once you complete the Upload, we will create a\n     * [File](https://platform.openai.com/docs/api-reference/files/object) object that\n     * contains all the parts you uploaded. This File is usable in the rest of our\n     * platform as a regular File object.\n     *\n     * For certain `purpose` values, the correct `mime_type` must be specified. Please\n     * refer to documentation for the\n     * [supported MIME types for your use case](https://platform.openai.com/docs/assistants/tools/file-search#supported-files).\n     *\n     * For guidance on the proper filename extensions for each purpose, please follow\n     * the documentation on\n     * [creating a File](https://platform.openai.com/docs/api-reference/files/create).\n     */\n    create(body, options) {\n        return this._client.post('/uploads', { body, ...options });\n    }\n    /**\n     * Cancels the Upload. No Parts may be added after an Upload is cancelled.\n     */\n    cancel(uploadID, options) {\n        return this._client.post(path `/uploads/${uploadID}/cancel`, options);\n    }\n    /**\n     * Completes the\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object).\n     *\n     * Within the returned Upload object, there is a nested\n     * [File](https://platform.openai.com/docs/api-reference/files/object) object that\n     * is ready to use in the rest of the platform.\n     *\n     * You can specify the order of the Parts by passing in an ordered list of the Part\n     * IDs.\n     *\n     * The number of bytes uploaded upon completion must match the number of bytes\n     * initially specified when creating the Upload object. No Parts may be added after\n     * an Upload is completed.\n     */\n    complete(uploadID, body, options) {\n        return this._client.post(path `/uploads/${uploadID}/complete`, { body, ...options });\n    }\n}\nUploads.Parts = Parts;\n//# sourceMappingURL=uploads.mjs.map","/**\n * Like `Promise.allSettled()` but throws an error if any promises are rejected.\n */\nexport const allSettledWithThrow = async (promises) => {\n    const results = await Promise.allSettled(promises);\n    const rejected = results.filter((result) => result.status === 'rejected');\n    if (rejected.length) {\n        for (const result of rejected) {\n            console.error(result.reason);\n        }\n        throw new Error(`${rejected.length} promise(s) failed - see the above errors`);\n    }\n    // Note: TS was complaining about using `.filter().map()` here for some reason\n    const values = [];\n    for (const result of results) {\n        if (result.status === 'fulfilled') {\n            values.push(result.value);\n        }\n    }\n    return values;\n};\n//# sourceMappingURL=Util.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { CursorPage } from \"../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../internal/headers.mjs\";\nimport { sleep } from \"../../internal/utils/sleep.mjs\";\nimport { allSettledWithThrow } from \"../../lib/Util.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class FileBatches extends APIResource {\n    /**\n     * Create a vector store file batch.\n     */\n    create(vectorStoreID, body, options) {\n        return this._client.post(path `/vector_stores/${vectorStoreID}/file_batches`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Retrieves a vector store file batch.\n     */\n    retrieve(batchID, params, options) {\n        const { vector_store_id } = params;\n        return this._client.get(path `/vector_stores/${vector_store_id}/file_batches/${batchID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Cancel a vector store file batch. This attempts to cancel the processing of\n     * files in this batch as soon as possible.\n     */\n    cancel(batchID, params, options) {\n        const { vector_store_id } = params;\n        return this._client.post(path `/vector_stores/${vector_store_id}/file_batches/${batchID}/cancel`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Create a vector store batch and poll until all files have been processed.\n     */\n    async createAndPoll(vectorStoreId, body, options) {\n        const batch = await this.create(vectorStoreId, body);\n        return await this.poll(vectorStoreId, batch.id, options);\n    }\n    /**\n     * Returns a list of vector store files in a batch.\n     */\n    listFiles(batchID, params, options) {\n        const { vector_store_id, ...query } = params;\n        return this._client.getAPIList(path `/vector_stores/${vector_store_id}/file_batches/${batchID}/files`, (CursorPage), { query, ...options, headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]) });\n    }\n    /**\n     * Wait for the given file batch to be processed.\n     *\n     * Note: this will return even if one of the files failed to process, you need to\n     * check batch.file_counts.failed_count to handle this case.\n     */\n    async poll(vectorStoreID, batchID, options) {\n        const headers = buildHeaders([\n            options?.headers,\n            {\n                'X-Stainless-Poll-Helper': 'true',\n                'X-Stainless-Custom-Poll-Interval': options?.pollIntervalMs?.toString() ?? undefined,\n            },\n        ]);\n        while (true) {\n            const { data: batch, response } = await this.retrieve(batchID, { vector_store_id: vectorStoreID }, {\n                ...options,\n                headers,\n            }).withResponse();\n            switch (batch.status) {\n                case 'in_progress':\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    }\n                    else {\n                        const headerInterval = response.headers.get('openai-poll-after-ms');\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await sleep(sleepInterval);\n                    break;\n                case 'failed':\n                case 'cancelled':\n                case 'completed':\n                    return batch;\n            }\n        }\n    }\n    /**\n     * Uploads the given files concurrently and then creates a vector store file batch.\n     *\n     * The concurrency limit is configurable using the `maxConcurrency` parameter.\n     */\n    async uploadAndPoll(vectorStoreId, { files, fileIds = [] }, options) {\n        if (files == null || files.length == 0) {\n            throw new Error(`No \\`files\\` provided to process. If you've already uploaded files you should use \\`.createAndPoll()\\` instead`);\n        }\n        const configuredConcurrency = options?.maxConcurrency ?? 5;\n        // We cap the number of workers at the number of files (so we don't start any unnecessary workers)\n        const concurrencyLimit = Math.min(configuredConcurrency, files.length);\n        const client = this._client;\n        const fileIterator = files.values();\n        const allFileIds = [...fileIds];\n        // This code is based on this design. The libraries don't accommodate our environment limits.\n        // https://stackoverflow.com/questions/40639432/what-is-the-best-way-to-limit-concurrency-when-using-es6s-promise-all\n        async function processFiles(iterator) {\n            for (let item of iterator) {\n                const fileObj = await client.files.create({ file: item, purpose: 'assistants' }, options);\n                allFileIds.push(fileObj.id);\n            }\n        }\n        // Start workers to process results\n        const workers = Array(concurrencyLimit).fill(fileIterator).map(processFiles);\n        // Wait for all processing to complete.\n        await allSettledWithThrow(workers);\n        return await this.createAndPoll(vectorStoreId, {\n            file_ids: allFileIds,\n        });\n    }\n}\n//# sourceMappingURL=file-batches.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport { CursorPage, Page } from \"../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../internal/headers.mjs\";\nimport { sleep } from \"../../internal/utils.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class Files extends APIResource {\n    /**\n     * Create a vector store file by attaching a\n     * [File](https://platform.openai.com/docs/api-reference/files) to a\n     * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object).\n     */\n    create(vectorStoreID, body, options) {\n        return this._client.post(path `/vector_stores/${vectorStoreID}/files`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Retrieves a vector store file.\n     */\n    retrieve(fileID, params, options) {\n        const { vector_store_id } = params;\n        return this._client.get(path `/vector_stores/${vector_store_id}/files/${fileID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Update attributes on a vector store file.\n     */\n    update(fileID, params, options) {\n        const { vector_store_id, ...body } = params;\n        return this._client.post(path `/vector_stores/${vector_store_id}/files/${fileID}`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Returns a list of vector store files.\n     */\n    list(vectorStoreID, query = {}, options) {\n        return this._client.getAPIList(path `/vector_stores/${vectorStoreID}/files`, (CursorPage), {\n            query,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Delete a vector store file. This will remove the file from the vector store but\n     * the file itself will not be deleted. To delete the file, use the\n     * [delete file](https://platform.openai.com/docs/api-reference/files/delete)\n     * endpoint.\n     */\n    delete(fileID, params, options) {\n        const { vector_store_id } = params;\n        return this._client.delete(path `/vector_stores/${vector_store_id}/files/${fileID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Attach a file to the given vector store and wait for it to be processed.\n     */\n    async createAndPoll(vectorStoreId, body, options) {\n        const file = await this.create(vectorStoreId, body, options);\n        return await this.poll(vectorStoreId, file.id, options);\n    }\n    /**\n     * Wait for the vector store file to finish processing.\n     *\n     * Note: this will return even if the file failed to process, you need to check\n     * file.last_error and file.status to handle these cases\n     */\n    async poll(vectorStoreID, fileID, options) {\n        const headers = buildHeaders([\n            options?.headers,\n            {\n                'X-Stainless-Poll-Helper': 'true',\n                'X-Stainless-Custom-Poll-Interval': options?.pollIntervalMs?.toString() ?? undefined,\n            },\n        ]);\n        while (true) {\n            const fileResponse = await this.retrieve(fileID, {\n                vector_store_id: vectorStoreID,\n            }, { ...options, headers }).withResponse();\n            const file = fileResponse.data;\n            switch (file.status) {\n                case 'in_progress':\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    }\n                    else {\n                        const headerInterval = fileResponse.response.headers.get('openai-poll-after-ms');\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await sleep(sleepInterval);\n                    break;\n                case 'failed':\n                case 'completed':\n                    return file;\n            }\n        }\n    }\n    /**\n     * Upload a file to the `files` API and then attach it to the given vector store.\n     *\n     * Note the file will be asynchronously processed (you can use the alternative\n     * polling helper method to wait for processing to complete).\n     */\n    async upload(vectorStoreId, file, options) {\n        const fileInfo = await this._client.files.create({ file: file, purpose: 'assistants' }, options);\n        return this.create(vectorStoreId, { file_id: fileInfo.id }, options);\n    }\n    /**\n     * Add a file to a vector store and poll until processing is complete.\n     */\n    async uploadAndPoll(vectorStoreId, file, options) {\n        const fileInfo = await this.upload(vectorStoreId, file, options);\n        return await this.poll(vectorStoreId, fileInfo.id, options);\n    }\n    /**\n     * Retrieve the parsed contents of a vector store file.\n     */\n    content(fileID, params, options) {\n        const { vector_store_id } = params;\n        return this._client.getAPIList(path `/vector_stores/${vector_store_id}/files/${fileID}/content`, (Page), { ...options, headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]) });\n    }\n}\n//# sourceMappingURL=files.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../core/resource.mjs\";\nimport * as FileBatchesAPI from \"./file-batches.mjs\";\nimport { FileBatches, } from \"./file-batches.mjs\";\nimport * as FilesAPI from \"./files.mjs\";\nimport { Files, } from \"./files.mjs\";\nimport { CursorPage, Page } from \"../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../internal/headers.mjs\";\nimport { path } from \"../../internal/utils/path.mjs\";\nexport class VectorStores extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.files = new FilesAPI.Files(this._client);\n        this.fileBatches = new FileBatchesAPI.FileBatches(this._client);\n    }\n    /**\n     * Create a vector store.\n     */\n    create(body, options) {\n        return this._client.post('/vector_stores', {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Retrieves a vector store.\n     */\n    retrieve(vectorStoreID, options) {\n        return this._client.get(path `/vector_stores/${vectorStoreID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Modifies a vector store.\n     */\n    update(vectorStoreID, body, options) {\n        return this._client.post(path `/vector_stores/${vectorStoreID}`, {\n            body,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Returns a list of vector stores.\n     */\n    list(query = {}, options) {\n        return this._client.getAPIList('/vector_stores', (CursorPage), {\n            query,\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Delete a vector store.\n     */\n    delete(vectorStoreID, options) {\n        return this._client.delete(path `/vector_stores/${vectorStoreID}`, {\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n    /**\n     * Search a vector store for relevant chunks based on a query and file attributes\n     * filter.\n     */\n    search(vectorStoreID, body, options) {\n        return this._client.getAPIList(path `/vector_stores/${vectorStoreID}/search`, (Page), {\n            body,\n            method: 'post',\n            ...options,\n            headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\n        });\n    }\n}\nVectorStores.Files = Files;\nVectorStores.FileBatches = FileBatches;\n//# sourceMappingURL=vector-stores.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _Webhooks_instances, _Webhooks_validateSecret, _Webhooks_getRequiredHeader;\nimport { __classPrivateFieldGet } from \"../internal/tslib.mjs\";\nimport { InvalidWebhookSignatureError } from \"../error.mjs\";\nimport { APIResource } from \"../core/resource.mjs\";\nimport { buildHeaders } from \"../internal/headers.mjs\";\nexport class Webhooks extends APIResource {\n    constructor() {\n        super(...arguments);\n        _Webhooks_instances.add(this);\n    }\n    /**\n     * Validates that the given payload was sent by OpenAI and parses the payload.\n     */\n    async unwrap(payload, headers, secret = this._client.webhookSecret, tolerance = 300) {\n        await this.verifySignature(payload, headers, secret, tolerance);\n        return JSON.parse(payload);\n    }\n    /**\n     * Validates whether or not the webhook payload was sent by OpenAI.\n     *\n     * An error will be raised if the webhook payload was not sent by OpenAI.\n     *\n     * @param payload - The webhook payload\n     * @param headers - The webhook headers\n     * @param secret - The webhook secret (optional, will use client secret if not provided)\n     * @param tolerance - Maximum age of the webhook in seconds (default: 300 = 5 minutes)\n     */\n    async verifySignature(payload, headers, secret = this._client.webhookSecret, tolerance = 300) {\n        if (typeof crypto === 'undefined' ||\n            typeof crypto.subtle.importKey !== 'function' ||\n            typeof crypto.subtle.verify !== 'function') {\n            throw new Error('Webhook signature verification is only supported when the `crypto` global is defined');\n        }\n        __classPrivateFieldGet(this, _Webhooks_instances, \"m\", _Webhooks_validateSecret).call(this, secret);\n        const headersObj = buildHeaders([headers]).values;\n        const signatureHeader = __classPrivateFieldGet(this, _Webhooks_instances, \"m\", _Webhooks_getRequiredHeader).call(this, headersObj, 'webhook-signature');\n        const timestamp = __classPrivateFieldGet(this, _Webhooks_instances, \"m\", _Webhooks_getRequiredHeader).call(this, headersObj, 'webhook-timestamp');\n        const webhookId = __classPrivateFieldGet(this, _Webhooks_instances, \"m\", _Webhooks_getRequiredHeader).call(this, headersObj, 'webhook-id');\n        // Validate timestamp to prevent replay attacks\n        const timestampSeconds = parseInt(timestamp, 10);\n        if (isNaN(timestampSeconds)) {\n            throw new InvalidWebhookSignatureError('Invalid webhook timestamp format');\n        }\n        const nowSeconds = Math.floor(Date.now() / 1000);\n        if (nowSeconds - timestampSeconds > tolerance) {\n            throw new InvalidWebhookSignatureError('Webhook timestamp is too old');\n        }\n        if (timestampSeconds > nowSeconds + tolerance) {\n            throw new InvalidWebhookSignatureError('Webhook timestamp is too new');\n        }\n        // Extract signatures from v1,<base64> format\n        // The signature header can have multiple values, separated by spaces.\n        // Each value is in the format v1,<base64>. We should accept if any match.\n        const signatures = signatureHeader\n            .split(' ')\n            .map((part) => (part.startsWith('v1,') ? part.substring(3) : part));\n        // Decode the secret if it starts with whsec_\n        const decodedSecret = secret.startsWith('whsec_') ?\n            Buffer.from(secret.replace('whsec_', ''), 'base64')\n            : Buffer.from(secret, 'utf-8');\n        // Create the signed payload: {webhook_id}.{timestamp}.{payload}\n        const signedPayload = webhookId ? `${webhookId}.${timestamp}.${payload}` : `${timestamp}.${payload}`;\n        // Import the secret as a cryptographic key for HMAC\n        const key = await crypto.subtle.importKey('raw', decodedSecret, { name: 'HMAC', hash: 'SHA-256' }, false, ['verify']);\n        // Check if any signature matches using timing-safe WebCrypto verify\n        for (const signature of signatures) {\n            try {\n                const signatureBytes = Buffer.from(signature, 'base64');\n                const isValid = await crypto.subtle.verify('HMAC', key, signatureBytes, new TextEncoder().encode(signedPayload));\n                if (isValid) {\n                    return; // Valid signature found\n                }\n            }\n            catch {\n                // Invalid base64 or signature format, continue to next signature\n                continue;\n            }\n        }\n        throw new InvalidWebhookSignatureError('The given webhook signature does not match the expected signature');\n    }\n}\n_Webhooks_instances = new WeakSet(), _Webhooks_validateSecret = function _Webhooks_validateSecret(secret) {\n    if (typeof secret !== 'string' || secret.length === 0) {\n        throw new Error(`The webhook secret must either be set using the env var, OPENAI_WEBHOOK_SECRET, on the client class, OpenAI({ webhookSecret: '123' }), or passed to this function`);\n    }\n}, _Webhooks_getRequiredHeader = function _Webhooks_getRequiredHeader(headers, name) {\n    if (!headers) {\n        throw new Error(`Headers are required`);\n    }\n    const value = headers.get(name);\n    if (value === null || value === undefined) {\n        throw new Error(`Missing required header: ${name}`);\n    }\n    return value;\n};\n//# sourceMappingURL=webhooks.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _OpenAI_instances, _a, _OpenAI_encoder, _OpenAI_baseURLOverridden;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"./internal/tslib.mjs\";\nimport { uuid4 } from \"./internal/utils/uuid.mjs\";\nimport { validatePositiveInteger, isAbsoluteURL, safeJSON } from \"./internal/utils/values.mjs\";\nimport { sleep } from \"./internal/utils/sleep.mjs\";\nimport { castToError, isAbortError } from \"./internal/errors.mjs\";\nimport { getPlatformHeaders } from \"./internal/detect-platform.mjs\";\nimport * as Shims from \"./internal/shims.mjs\";\nimport * as Opts from \"./internal/request-options.mjs\";\nimport * as qs from \"./internal/qs/index.mjs\";\nimport { VERSION } from \"./version.mjs\";\nimport * as Errors from \"./core/error.mjs\";\nimport * as Pagination from \"./core/pagination.mjs\";\nimport * as Uploads from \"./core/uploads.mjs\";\nimport * as API from \"./resources/index.mjs\";\nimport { APIPromise } from \"./core/api-promise.mjs\";\nimport { Batches, } from \"./resources/batches.mjs\";\nimport { Completions, } from \"./resources/completions.mjs\";\nimport { Embeddings, } from \"./resources/embeddings.mjs\";\nimport { Files, } from \"./resources/files.mjs\";\nimport { Images, } from \"./resources/images.mjs\";\nimport { Models } from \"./resources/models.mjs\";\nimport { Moderations, } from \"./resources/moderations.mjs\";\nimport { Webhooks } from \"./resources/webhooks.mjs\";\nimport { Audio } from \"./resources/audio/audio.mjs\";\nimport { Beta } from \"./resources/beta/beta.mjs\";\nimport { Chat } from \"./resources/chat/chat.mjs\";\nimport { Containers, } from \"./resources/containers/containers.mjs\";\nimport { Conversations } from \"./resources/conversations/conversations.mjs\";\nimport { Evals, } from \"./resources/evals/evals.mjs\";\nimport { FineTuning } from \"./resources/fine-tuning/fine-tuning.mjs\";\nimport { Graders } from \"./resources/graders/graders.mjs\";\nimport { Realtime } from \"./resources/realtime/realtime.mjs\";\nimport { Responses } from \"./resources/responses/responses.mjs\";\nimport { Uploads as UploadsAPIUploads, } from \"./resources/uploads/uploads.mjs\";\nimport { VectorStores, } from \"./resources/vector-stores/vector-stores.mjs\";\nimport { isRunningInBrowser } from \"./internal/detect-platform.mjs\";\nimport { buildHeaders } from \"./internal/headers.mjs\";\nimport { readEnv } from \"./internal/utils/env.mjs\";\nimport { formatRequestDetails, loggerFor, parseLogLevel, } from \"./internal/utils/log.mjs\";\nimport { isEmptyObj } from \"./internal/utils/values.mjs\";\n/**\n * API Client for interfacing with the OpenAI API.\n */\nexport class OpenAI {\n    /**\n     * API Client for interfacing with the OpenAI API.\n     *\n     * @param {string | undefined} [opts.apiKey=process.env['OPENAI_API_KEY'] ?? undefined]\n     * @param {string | null | undefined} [opts.organization=process.env['OPENAI_ORG_ID'] ?? null]\n     * @param {string | null | undefined} [opts.project=process.env['OPENAI_PROJECT_ID'] ?? null]\n     * @param {string | null | undefined} [opts.webhookSecret=process.env['OPENAI_WEBHOOK_SECRET'] ?? null]\n     * @param {string} [opts.baseURL=process.env['OPENAI_BASE_URL'] ?? https://api.openai.com/v1] - Override the default base URL for the API.\n     * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n     * @param {MergedRequestInit} [opts.fetchOptions] - Additional `RequestInit` options to be passed to `fetch` calls.\n     * @param {Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n     * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n     * @param {HeadersLike} opts.defaultHeaders - Default headers to include with every request to the API.\n     * @param {Record<string, string | undefined>} opts.defaultQuery - Default query parameters to include with every request to the API.\n     * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n     */\n    constructor({ baseURL = readEnv('OPENAI_BASE_URL'), apiKey = readEnv('OPENAI_API_KEY'), organization = readEnv('OPENAI_ORG_ID') ?? null, project = readEnv('OPENAI_PROJECT_ID') ?? null, webhookSecret = readEnv('OPENAI_WEBHOOK_SECRET') ?? null, ...opts } = {}) {\n        _OpenAI_instances.add(this);\n        _OpenAI_encoder.set(this, void 0);\n        this.completions = new API.Completions(this);\n        this.chat = new API.Chat(this);\n        this.embeddings = new API.Embeddings(this);\n        this.files = new API.Files(this);\n        this.images = new API.Images(this);\n        this.audio = new API.Audio(this);\n        this.moderations = new API.Moderations(this);\n        this.models = new API.Models(this);\n        this.fineTuning = new API.FineTuning(this);\n        this.graders = new API.Graders(this);\n        this.vectorStores = new API.VectorStores(this);\n        this.webhooks = new API.Webhooks(this);\n        this.beta = new API.Beta(this);\n        this.batches = new API.Batches(this);\n        this.uploads = new API.Uploads(this);\n        this.responses = new API.Responses(this);\n        this.realtime = new API.Realtime(this);\n        this.conversations = new API.Conversations(this);\n        this.evals = new API.Evals(this);\n        this.containers = new API.Containers(this);\n        if (apiKey === undefined) {\n            throw new Errors.OpenAIError('Missing credentials. Please pass an `apiKey`, or set the `OPENAI_API_KEY` environment variable.');\n        }\n        const options = {\n            apiKey,\n            organization,\n            project,\n            webhookSecret,\n            ...opts,\n            baseURL: baseURL || `https://api.openai.com/v1`,\n        };\n        if (!options.dangerouslyAllowBrowser && isRunningInBrowser()) {\n            throw new Errors.OpenAIError(\"It looks like you're running in a browser-like environment.\\n\\nThis is disabled by default, as it risks exposing your secret API credentials to attackers.\\nIf you understand the risks and have appropriate mitigations in place,\\nyou can set the `dangerouslyAllowBrowser` option to `true`, e.g.,\\n\\nnew OpenAI({ apiKey, dangerouslyAllowBrowser: true });\\n\\nhttps://help.openai.com/en/articles/5112595-best-practices-for-api-key-safety\\n\");\n        }\n        this.baseURL = options.baseURL;\n        this.timeout = options.timeout ?? _a.DEFAULT_TIMEOUT /* 10 minutes */;\n        this.logger = options.logger ?? console;\n        const defaultLogLevel = 'warn';\n        // Set default logLevel early so that we can log a warning in parseLogLevel.\n        this.logLevel = defaultLogLevel;\n        this.logLevel =\n            parseLogLevel(options.logLevel, 'ClientOptions.logLevel', this) ??\n                parseLogLevel(readEnv('OPENAI_LOG'), \"process.env['OPENAI_LOG']\", this) ??\n                defaultLogLevel;\n        this.fetchOptions = options.fetchOptions;\n        this.maxRetries = options.maxRetries ?? 2;\n        this.fetch = options.fetch ?? Shims.getDefaultFetch();\n        __classPrivateFieldSet(this, _OpenAI_encoder, Opts.FallbackEncoder, \"f\");\n        this._options = options;\n        this.apiKey = typeof apiKey === 'string' ? apiKey : 'Missing Key';\n        this.organization = organization;\n        this.project = project;\n        this.webhookSecret = webhookSecret;\n    }\n    /**\n     * Create a new client instance re-using the same options given to the current client with optional overriding.\n     */\n    withOptions(options) {\n        const client = new this.constructor({\n            ...this._options,\n            baseURL: this.baseURL,\n            maxRetries: this.maxRetries,\n            timeout: this.timeout,\n            logger: this.logger,\n            logLevel: this.logLevel,\n            fetch: this.fetch,\n            fetchOptions: this.fetchOptions,\n            apiKey: this.apiKey,\n            organization: this.organization,\n            project: this.project,\n            webhookSecret: this.webhookSecret,\n            ...options,\n        });\n        return client;\n    }\n    defaultQuery() {\n        return this._options.defaultQuery;\n    }\n    validateHeaders({ values, nulls }) {\n        return;\n    }\n    async authHeaders(opts) {\n        return buildHeaders([{ Authorization: `Bearer ${this.apiKey}` }]);\n    }\n    stringifyQuery(query) {\n        return qs.stringify(query, { arrayFormat: 'brackets' });\n    }\n    getUserAgent() {\n        return `${this.constructor.name}/JS ${VERSION}`;\n    }\n    defaultIdempotencyKey() {\n        return `stainless-node-retry-${uuid4()}`;\n    }\n    makeStatusError(status, error, message, headers) {\n        return Errors.APIError.generate(status, error, message, headers);\n    }\n    async _callApiKey() {\n        const apiKey = this._options.apiKey;\n        if (typeof apiKey !== 'function')\n            return false;\n        let token;\n        try {\n            token = await apiKey();\n        }\n        catch (err) {\n            if (err instanceof Errors.OpenAIError)\n                throw err;\n            throw new Errors.OpenAIError(`Failed to get token from 'apiKey' function: ${err.message}`, \n            // @ts-ignore\n            { cause: err });\n        }\n        if (typeof token !== 'string' || !token) {\n            throw new Errors.OpenAIError(`Expected 'apiKey' function argument to return a string but it returned ${token}`);\n        }\n        this.apiKey = token;\n        return true;\n    }\n    buildURL(path, query, defaultBaseURL) {\n        const baseURL = (!__classPrivateFieldGet(this, _OpenAI_instances, \"m\", _OpenAI_baseURLOverridden).call(this) && defaultBaseURL) || this.baseURL;\n        const url = isAbsoluteURL(path) ?\n            new URL(path)\n            : new URL(baseURL + (baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n        const defaultQuery = this.defaultQuery();\n        if (!isEmptyObj(defaultQuery)) {\n            query = { ...defaultQuery, ...query };\n        }\n        if (typeof query === 'object' && query && !Array.isArray(query)) {\n            url.search = this.stringifyQuery(query);\n        }\n        return url.toString();\n    }\n    /**\n     * Used as a callback for mutating the given `FinalRequestOptions` object.\n     */\n    async prepareOptions(options) {\n        await this._callApiKey();\n    }\n    /**\n     * Used as a callback for mutating the given `RequestInit` object.\n     *\n     * This is useful for cases where you want to add certain headers based off of\n     * the request properties, e.g. `method` or `url`.\n     */\n    async prepareRequest(request, { url, options }) { }\n    get(path, opts) {\n        return this.methodRequest('get', path, opts);\n    }\n    post(path, opts) {\n        return this.methodRequest('post', path, opts);\n    }\n    patch(path, opts) {\n        return this.methodRequest('patch', path, opts);\n    }\n    put(path, opts) {\n        return this.methodRequest('put', path, opts);\n    }\n    delete(path, opts) {\n        return this.methodRequest('delete', path, opts);\n    }\n    methodRequest(method, path, opts) {\n        return this.request(Promise.resolve(opts).then((opts) => {\n            return { method, path, ...opts };\n        }));\n    }\n    request(options, remainingRetries = null) {\n        return new APIPromise(this, this.makeRequest(options, remainingRetries, undefined));\n    }\n    async makeRequest(optionsInput, retriesRemaining, retryOfRequestLogID) {\n        const options = await optionsInput;\n        const maxRetries = options.maxRetries ?? this.maxRetries;\n        if (retriesRemaining == null) {\n            retriesRemaining = maxRetries;\n        }\n        await this.prepareOptions(options);\n        const { req, url, timeout } = await this.buildRequest(options, {\n            retryCount: maxRetries - retriesRemaining,\n        });\n        await this.prepareRequest(req, { url, options });\n        /** Not an API request ID, just for correlating local log entries. */\n        const requestLogID = 'log_' + ((Math.random() * (1 << 24)) | 0).toString(16).padStart(6, '0');\n        const retryLogStr = retryOfRequestLogID === undefined ? '' : `, retryOf: ${retryOfRequestLogID}`;\n        const startTime = Date.now();\n        loggerFor(this).debug(`[${requestLogID}] sending request`, formatRequestDetails({\n            retryOfRequestLogID,\n            method: options.method,\n            url,\n            options,\n            headers: req.headers,\n        }));\n        if (options.signal?.aborted) {\n            throw new Errors.APIUserAbortError();\n        }\n        const controller = new AbortController();\n        const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\n        const headersTime = Date.now();\n        if (response instanceof globalThis.Error) {\n            const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n            if (options.signal?.aborted) {\n                throw new Errors.APIUserAbortError();\n            }\n            // detect native connection timeout errors\n            // deno throws \"TypeError: error sending request for url (https://example/): client error (Connect): tcp connect error: Operation timed out (os error 60): Operation timed out (os error 60)\"\n            // undici throws \"TypeError: fetch failed\" with cause \"ConnectTimeoutError: Connect Timeout Error (attempted address: example:443, timeout: 1ms)\"\n            // others do not provide enough information to distinguish timeouts from other connection errors\n            const isTimeout = isAbortError(response) ||\n                /timed? ?out/i.test(String(response) + ('cause' in response ? String(response.cause) : ''));\n            if (retriesRemaining) {\n                loggerFor(this).info(`[${requestLogID}] connection ${isTimeout ? 'timed out' : 'failed'} - ${retryMessage}`);\n                loggerFor(this).debug(`[${requestLogID}] connection ${isTimeout ? 'timed out' : 'failed'} (${retryMessage})`, formatRequestDetails({\n                    retryOfRequestLogID,\n                    url,\n                    durationMs: headersTime - startTime,\n                    message: response.message,\n                }));\n                return this.retryRequest(options, retriesRemaining, retryOfRequestLogID ?? requestLogID);\n            }\n            loggerFor(this).info(`[${requestLogID}] connection ${isTimeout ? 'timed out' : 'failed'} - error; no more retries left`);\n            loggerFor(this).debug(`[${requestLogID}] connection ${isTimeout ? 'timed out' : 'failed'} (error; no more retries left)`, formatRequestDetails({\n                retryOfRequestLogID,\n                url,\n                durationMs: headersTime - startTime,\n                message: response.message,\n            }));\n            if (isTimeout) {\n                throw new Errors.APIConnectionTimeoutError();\n            }\n            throw new Errors.APIConnectionError({ cause: response });\n        }\n        const specialHeaders = [...response.headers.entries()]\n            .filter(([name]) => name === 'x-request-id')\n            .map(([name, value]) => ', ' + name + ': ' + JSON.stringify(value))\n            .join('');\n        const responseInfo = `[${requestLogID}${retryLogStr}${specialHeaders}] ${req.method} ${url} ${response.ok ? 'succeeded' : 'failed'} with status ${response.status} in ${headersTime - startTime}ms`;\n        if (!response.ok) {\n            const shouldRetry = await this.shouldRetry(response);\n            if (retriesRemaining && shouldRetry) {\n                const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n                // We don't need the body of this response.\n                await Shims.CancelReadableStream(response.body);\n                loggerFor(this).info(`${responseInfo} - ${retryMessage}`);\n                loggerFor(this).debug(`[${requestLogID}] response error (${retryMessage})`, formatRequestDetails({\n                    retryOfRequestLogID,\n                    url: response.url,\n                    status: response.status,\n                    headers: response.headers,\n                    durationMs: headersTime - startTime,\n                }));\n                return this.retryRequest(options, retriesRemaining, retryOfRequestLogID ?? requestLogID, response.headers);\n            }\n            const retryMessage = shouldRetry ? `error; no more retries left` : `error; not retryable`;\n            loggerFor(this).info(`${responseInfo} - ${retryMessage}`);\n            const errText = await response.text().catch((err) => castToError(err).message);\n            const errJSON = safeJSON(errText);\n            const errMessage = errJSON ? undefined : errText;\n            loggerFor(this).debug(`[${requestLogID}] response error (${retryMessage})`, formatRequestDetails({\n                retryOfRequestLogID,\n                url: response.url,\n                status: response.status,\n                headers: response.headers,\n                message: errMessage,\n                durationMs: Date.now() - startTime,\n            }));\n            const err = this.makeStatusError(response.status, errJSON, errMessage, response.headers);\n            throw err;\n        }\n        loggerFor(this).info(responseInfo);\n        loggerFor(this).debug(`[${requestLogID}] response start`, formatRequestDetails({\n            retryOfRequestLogID,\n            url: response.url,\n            status: response.status,\n            headers: response.headers,\n            durationMs: headersTime - startTime,\n        }));\n        return { response, options, controller, requestLogID, retryOfRequestLogID, startTime };\n    }\n    getAPIList(path, Page, opts) {\n        return this.requestAPIList(Page, { method: 'get', path, ...opts });\n    }\n    requestAPIList(Page, options) {\n        const request = this.makeRequest(options, null, undefined);\n        return new Pagination.PagePromise(this, request, Page);\n    }\n    async fetchWithTimeout(url, init, ms, controller) {\n        const { signal, method, ...options } = init || {};\n        if (signal)\n            signal.addEventListener('abort', () => controller.abort());\n        const timeout = setTimeout(() => controller.abort(), ms);\n        const isReadableBody = (globalThis.ReadableStream && options.body instanceof globalThis.ReadableStream) ||\n            (typeof options.body === 'object' && options.body !== null && Symbol.asyncIterator in options.body);\n        const fetchOptions = {\n            signal: controller.signal,\n            ...(isReadableBody ? { duplex: 'half' } : {}),\n            method: 'GET',\n            ...options,\n        };\n        if (method) {\n            // Custom methods like 'patch' need to be uppercased\n            // See https://github.com/nodejs/undici/issues/2294\n            fetchOptions.method = method.toUpperCase();\n        }\n        try {\n            // use undefined this binding; fetch errors if bound to something else in browser/cloudflare\n            return await this.fetch.call(undefined, url, fetchOptions);\n        }\n        finally {\n            clearTimeout(timeout);\n        }\n    }\n    async shouldRetry(response) {\n        // Note this is not a standard header.\n        const shouldRetryHeader = response.headers.get('x-should-retry');\n        // If the server explicitly says whether or not to retry, obey.\n        if (shouldRetryHeader === 'true')\n            return true;\n        if (shouldRetryHeader === 'false')\n            return false;\n        // Retry on request timeouts.\n        if (response.status === 408)\n            return true;\n        // Retry on lock timeouts.\n        if (response.status === 409)\n            return true;\n        // Retry on rate limits.\n        if (response.status === 429)\n            return true;\n        // Retry internal errors.\n        if (response.status >= 500)\n            return true;\n        return false;\n    }\n    async retryRequest(options, retriesRemaining, requestLogID, responseHeaders) {\n        let timeoutMillis;\n        // Note the `retry-after-ms` header may not be standard, but is a good idea and we'd like proactive support for it.\n        const retryAfterMillisHeader = responseHeaders?.get('retry-after-ms');\n        if (retryAfterMillisHeader) {\n            const timeoutMs = parseFloat(retryAfterMillisHeader);\n            if (!Number.isNaN(timeoutMs)) {\n                timeoutMillis = timeoutMs;\n            }\n        }\n        // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n        const retryAfterHeader = responseHeaders?.get('retry-after');\n        if (retryAfterHeader && !timeoutMillis) {\n            const timeoutSeconds = parseFloat(retryAfterHeader);\n            if (!Number.isNaN(timeoutSeconds)) {\n                timeoutMillis = timeoutSeconds * 1000;\n            }\n            else {\n                timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\n            }\n        }\n        // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n        // just do what it says, but otherwise calculate a default\n        if (!(timeoutMillis && 0 <= timeoutMillis && timeoutMillis < 60 * 1000)) {\n            const maxRetries = options.maxRetries ?? this.maxRetries;\n            timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\n        }\n        await sleep(timeoutMillis);\n        return this.makeRequest(options, retriesRemaining - 1, requestLogID);\n    }\n    calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries) {\n        const initialRetryDelay = 0.5;\n        const maxRetryDelay = 8.0;\n        const numRetries = maxRetries - retriesRemaining;\n        // Apply exponential backoff, but not more than the max.\n        const sleepSeconds = Math.min(initialRetryDelay * Math.pow(2, numRetries), maxRetryDelay);\n        // Apply some jitter, take up to at most 25 percent of the retry time.\n        const jitter = 1 - Math.random() * 0.25;\n        return sleepSeconds * jitter * 1000;\n    }\n    async buildRequest(inputOptions, { retryCount = 0 } = {}) {\n        const options = { ...inputOptions };\n        const { method, path, query, defaultBaseURL } = options;\n        const url = this.buildURL(path, query, defaultBaseURL);\n        if ('timeout' in options)\n            validatePositiveInteger('timeout', options.timeout);\n        options.timeout = options.timeout ?? this.timeout;\n        const { bodyHeaders, body } = this.buildBody({ options });\n        const reqHeaders = await this.buildHeaders({ options: inputOptions, method, bodyHeaders, retryCount });\n        const req = {\n            method,\n            headers: reqHeaders,\n            ...(options.signal && { signal: options.signal }),\n            ...(globalThis.ReadableStream &&\n                body instanceof globalThis.ReadableStream && { duplex: 'half' }),\n            ...(body && { body }),\n            ...(this.fetchOptions ?? {}),\n            ...(options.fetchOptions ?? {}),\n        };\n        return { req, url, timeout: options.timeout };\n    }\n    async buildHeaders({ options, method, bodyHeaders, retryCount, }) {\n        let idempotencyHeaders = {};\n        if (this.idempotencyHeader && method !== 'get') {\n            if (!options.idempotencyKey)\n                options.idempotencyKey = this.defaultIdempotencyKey();\n            idempotencyHeaders[this.idempotencyHeader] = options.idempotencyKey;\n        }\n        const headers = buildHeaders([\n            idempotencyHeaders,\n            {\n                Accept: 'application/json',\n                'User-Agent': this.getUserAgent(),\n                'X-Stainless-Retry-Count': String(retryCount),\n                ...(options.timeout ? { 'X-Stainless-Timeout': String(Math.trunc(options.timeout / 1000)) } : {}),\n                ...getPlatformHeaders(),\n                'OpenAI-Organization': this.organization,\n                'OpenAI-Project': this.project,\n            },\n            await this.authHeaders(options),\n            this._options.defaultHeaders,\n            bodyHeaders,\n            options.headers,\n        ]);\n        this.validateHeaders(headers);\n        return headers.values;\n    }\n    buildBody({ options: { body, headers: rawHeaders } }) {\n        if (!body) {\n            return { bodyHeaders: undefined, body: undefined };\n        }\n        const headers = buildHeaders([rawHeaders]);\n        if (\n        // Pass raw type verbatim\n        ArrayBuffer.isView(body) ||\n            body instanceof ArrayBuffer ||\n            body instanceof DataView ||\n            (typeof body === 'string' &&\n                // Preserve legacy string encoding behavior for now\n                headers.values.has('content-type')) ||\n            // `Blob` is superset of `File`\n            (globalThis.Blob && body instanceof globalThis.Blob) ||\n            // `FormData` -> `multipart/form-data`\n            body instanceof FormData ||\n            // `URLSearchParams` -> `application/x-www-form-urlencoded`\n            body instanceof URLSearchParams ||\n            // Send chunked stream (each chunk has own `length`)\n            (globalThis.ReadableStream && body instanceof globalThis.ReadableStream)) {\n            return { bodyHeaders: undefined, body: body };\n        }\n        else if (typeof body === 'object' &&\n            (Symbol.asyncIterator in body ||\n                (Symbol.iterator in body && 'next' in body && typeof body.next === 'function'))) {\n            return { bodyHeaders: undefined, body: Shims.ReadableStreamFrom(body) };\n        }\n        else {\n            return __classPrivateFieldGet(this, _OpenAI_encoder, \"f\").call(this, { body, headers });\n        }\n    }\n}\n_a = OpenAI, _OpenAI_encoder = new WeakMap(), _OpenAI_instances = new WeakSet(), _OpenAI_baseURLOverridden = function _OpenAI_baseURLOverridden() {\n    return this.baseURL !== 'https://api.openai.com/v1';\n};\nOpenAI.OpenAI = _a;\nOpenAI.DEFAULT_TIMEOUT = 600000; // 10 minutes\nOpenAI.OpenAIError = Errors.OpenAIError;\nOpenAI.APIError = Errors.APIError;\nOpenAI.APIConnectionError = Errors.APIConnectionError;\nOpenAI.APIConnectionTimeoutError = Errors.APIConnectionTimeoutError;\nOpenAI.APIUserAbortError = Errors.APIUserAbortError;\nOpenAI.NotFoundError = Errors.NotFoundError;\nOpenAI.ConflictError = Errors.ConflictError;\nOpenAI.RateLimitError = Errors.RateLimitError;\nOpenAI.BadRequestError = Errors.BadRequestError;\nOpenAI.AuthenticationError = Errors.AuthenticationError;\nOpenAI.InternalServerError = Errors.InternalServerError;\nOpenAI.PermissionDeniedError = Errors.PermissionDeniedError;\nOpenAI.UnprocessableEntityError = Errors.UnprocessableEntityError;\nOpenAI.InvalidWebhookSignatureError = Errors.InvalidWebhookSignatureError;\nOpenAI.toFile = Uploads.toFile;\nOpenAI.Completions = Completions;\nOpenAI.Chat = Chat;\nOpenAI.Embeddings = Embeddings;\nOpenAI.Files = Files;\nOpenAI.Images = Images;\nOpenAI.Audio = Audio;\nOpenAI.Moderations = Moderations;\nOpenAI.Models = Models;\nOpenAI.FineTuning = FineTuning;\nOpenAI.Graders = Graders;\nOpenAI.VectorStores = VectorStores;\nOpenAI.Webhooks = Webhooks;\nOpenAI.Beta = Beta;\nOpenAI.Batches = Batches;\nOpenAI.Uploads = UploadsAPIUploads;\nOpenAI.Responses = Responses;\nOpenAI.Realtime = Realtime;\nOpenAI.Conversations = Conversations;\nOpenAI.Evals = Evals;\nOpenAI.Containers = Containers;\n//# sourceMappingURL=client.mjs.map","// mcp/compose.ts\nimport { McpServer, McpTool, McpResource } from \"./types\";\n\nexport function composeServers(...servers: McpServer[]): McpServer {\n  return {\n    async listTools(): Promise<McpTool[]> {\n      const all = await Promise.all(servers.map(s => s.listTools()));\n      const list = all.flat();\n      // Optional: de-dupe by name\n      const map = new Map(list.map(t => [t.name, t]));\n      return [...map.values()];\n    },\n    async listResources(): Promise<McpResource[]> {\n      const all = await Promise.all(servers.map(s => s.listResources()));\n      const list = all.flat();\n      const map = new Map(list.map(r => [r.name, r]));\n      return [...map.values()];\n    }\n  };\n}\n","// lib/mcp/client.ts\nimport { McpServer, McpTool, McpResource, McpSession, Json } from \"./types\";\n\n/**\n * MCP client for calling tools/resources from an MCP server.\n * Wraps the server and session together into a convenient API.\n */\nexport class McpClient {\n  private server: McpServer;\n  private session: McpSession;\n  private toolCache?: Map<string, McpTool>;\n  private resourceCache?: Map<string, McpResource>;\n\n  constructor(server: McpServer, session: McpSession) {\n    this.server = server;\n    this.session = session;\n  }\n\n  /** List all tools */\n  async listTools(): Promise<McpTool[]> {\n    return this.server.listTools();\n  }\n\n  /** List all resources */\n  async listResources(): Promise<McpResource[]> {\n    return this.server.listResources();\n  }\n\n  /** Call a tool by name with args */\n  async call(toolName: string, args: Json = {}): Promise<Json> {\n    if (!this.toolCache) {\n      const tools = await this.server.listTools();\n      this.toolCache = new Map(tools.map((t) => [t.name, t]));\n    }\n    const tool = this.toolCache.get(toolName);\n    if (!tool) throw new Error(`Unknown tool: ${toolName}`);\n    return tool.call(args, this.session);\n  }\n\n  /** Read a resource (optionally by id) */\n  async read(resourceName: string, id: string = \"\"): Promise<Json> {\n    if (!this.resourceCache) {\n      const resources = await this.server.listResources();\n      this.resourceCache = new Map(resources.map((r) => [r.name, r]));\n    }\n    const resource = this.resourceCache.get(resourceName);\n    if (!resource) throw new Error(`Unknown resource: ${resourceName}`);\n    if (!resource.read) throw new Error(`Resource not readable: ${resourceName}`);\n    return resource.read(id, this.session);\n  }\n\n  /** List a resource’s contents (if supported) */\n  async list(resourceName: string): Promise<Json[]> {\n    if (!this.resourceCache) {\n      const resources = await this.server.listResources();\n      this.resourceCache = new Map(resources.map((r) => [r.name, r]));\n    }\n    const resource = this.resourceCache.get(resourceName);\n    if (!resource) throw new Error(`Unknown resource: ${resourceName}`);\n    if (!resource.list) throw new Error(`Resource not listable: ${resourceName}`);\n    return resource.list(this.session);\n  }\n}\n","// mcp/servers/aiServer.ts\nimport { McpServer, McpTool, McpResource, McpSession, Json } from \"../types\";\n\nfunction need(session: McpSession, scope: string) {\n  if (!session.scopes.includes(scope)) throw new Error(`Missing scope: ${scope}`);\n}\n\nfunction getAI(session: McpSession): { generateText: (input: string, opts?: any) => Promise<string>; generateImages?: (prompt: string, opts?: any) => Promise<any[]> } {\n  const ai = session.di?.[\"ai\"] as any;\n  if (!ai || typeof ai.generateText !== \"function\") {\n    throw new Error(\"AI facade not available on session.di.ai\");\n  }\n  return ai;\n}\n\nconst tools: McpTool[] = [\n  {\n    name: \"ai.generateText\",\n    description: \"Generate plain text from a prompt.\",\n    schema: { prompt: \"string\", maxTokens: \"number?=600\", model: \"string?\", temperature: \"number?\" },\n    async call(args: Json, session: McpSession) {\n      need(session, \"ai.generate\");\n      const { prompt, maxTokens = 600, model = \"gpt-5-mini\", temperature } = (args as any) ?? {};\n      if (!prompt || typeof prompt !== \"string\") throw new Error(\"prompt:string required\");\n      const ai = getAI(session);\n      const text = await ai.generateText(prompt, { maxTokens, model, temperature });\n      return { text };\n    },\n  },\n  {\n    name: \"ai.generateData\",\n    description: \"Generate structured data (e.g., JSON) from a prompt.\",\n    schema: { prompt: \"string\", schema: \"string?\", maxTokens: \"number?=600\", model: \"string?\", temperature: \"number?\" },\n    async call(args: Json, session: McpSession) {\n      need(session, \"ai.generate\");\n      const { prompt, schema, maxTokens = 600, model = \"gpt-5-mini\", temperature } = (args as any) ?? {};\n      if (!prompt || typeof prompt !== \"string\") throw new Error(\"prompt:string required\");\n      const ai = getAI(session);\n      const fullPrompt = schema\n        ? `Generate structured data in JSON format matching this schema: ${schema}\\nTask: ${prompt}\\nReturn only valid JSON.`\n        : `Generate structured data in JSON format.\\nTask: ${prompt}\\nReturn only valid JSON.`;\n      const text = await ai.generateText(fullPrompt, { maxTokens, model, temperature });\n      let data;\n      try {\n        data = JSON.parse(text);\n      } catch {\n        throw new Error(\"AI did not return valid JSON\");\n      }\n      return { data };\n    },\n  },\n  {\n    name: \"ai.generateImages\",\n    description: \"Generate images from a prompt.\",\n    schema: { prompt: \"string\", count: \"number?=1\", size: \"string?='512x512'\", model: \"string?\" },\n    async call(args: Json, session: McpSession) {\n      need(session, \"ai.generate\");\n      const { prompt, count = 1, size = \"512x512\", model = \"dall-e-3\" } = (args as any) ?? {};\n      if (!prompt || typeof prompt !== \"string\") throw new Error(\"prompt:string required\");\n      const ai = getAI(session);\n      // If your AI facade supports image generation, call it here. Otherwise, return a stub.\n      if (typeof ai.generateImages === \"function\") {\n        const images = await ai.generateImages(prompt, { count, size, model });\n        return { images };\n      } else {\n        // Stub: return empty array or error\n        return { images: [], note: \"Image generation not implemented in AI facade.\" };\n      }\n    },\n  },\n  // ...existing code...\n  {\n    name: \"ai.generateCode\",\n    description: \"Generate new code from a natural language prompt.\",\n    schema: { prompt: \"string\", language: \"string?=typescript\", style: \"string?='clean'\", maxTokens: \"number?=600\" },\n    async call(args: Json, session: McpSession) {\n      need(session, \"ai.generate\");\n      const { prompt, language = \"typescript\", style = \"clean\", maxTokens = 600 } = (args as any) ?? {};\n      if (!prompt || typeof prompt !== \"string\") throw new Error(\"prompt:string required\");\n      const ai = getAI(session);\n      const code = await ai.generateText(\n        `Generate ${language} code in a ${style} style.\\nReturn only code.\\n\\nTask:\\n${prompt}`,\n        { maxTokens, model: \"gpt-5-mini\" }\n      );\n      return { code, language };\n    },\n  },\n  {\n    name: \"ai.refactorCode\",\n    description: \"Refactor existing code based on instructions.\",\n    schema: { code: \"string\", instructions: \"string\", language: \"string?=typescript\", style: \"string?='clean'\" },\n    async call(args: Json, session: McpSession) {\n      need(session, \"ai.generate\");\n      const { code, instructions, language = \"typescript\", style = \"clean\" } = (args as any) ?? {};\n      if (!code || !instructions) throw new Error(\"code:string and instructions:string required\");\n      const ai = getAI(session);\n      const output = await ai.generateText(\n        `Refactor the following ${language} code.\\nGoal: ${instructions}\\nStyle: ${style}\\nReturn only code.\\n\\n---\\n${code}\\n---`\n      );\n      return { code: output };\n    },\n  },\n  {\n    name: \"ai.testCode\",\n    description: \"Generate unit tests for code.\",\n    schema: { code: \"string\", framework: \"string?=vitest\", language: \"string?=typescript\" },\n    async call(args: Json, session: McpSession) {\n      need(session, \"ai.generate\");\n      const { code, framework = \"vitest\", language = \"typescript\" } = (args as any) ?? {};\n      if (!code) throw new Error(\"code:string required\");\n      const ai = getAI(session);\n      const tests = await ai.generateText(\n        `Write comprehensive ${framework} tests in ${language} for the following code.\\n` +\n        `Cover edge cases and typical scenarios. Return only test code.\\n\\n---\\n${code}\\n---`\n      );\n      return { tests, framework, language };\n    },\n  },\n  {\n    name: \"ai.writeDocumentation\",\n    description: \"Write or update documentation for code.\",\n    schema: { code: \"string\", format: \"string?='markdown'\", audience: \"string?='developers'\" },\n    async call(args: Json, session: McpSession) {\n      need(session, \"ai.generate\");\n      const { code, format = \"markdown\", audience = \"developers\" } = (args as any) ?? {};\n      if (!code) throw new Error(\"code:string required\");\n      const ai = getAI(session);\n      const docs = await ai.generateText(\n        `Write ${format} documentation for the following code for ${audience}.\\n` +\n        `Explain purpose, API, usage, and gotchas. Include brief snippets as needed.\\n\\n---\\n${code}\\n---`\n      );\n      return { docs, format };\n    },\n  },\n];\n\nconst resources: McpResource[] = []; // none for AI\n\nexport function createAiServer(): McpServer {\n  return {\n    async listTools() { return tools; },\n    async listResources() { return resources; },\n  };\n}\n","// mcp/servers/editorServer.ts\nimport * as vscode from \"vscode\";\nimport * as path from \"node:path\";\nimport { McpServer, McpTool, McpResource, McpSession, Json } from \"../types\";\n\nfunction within(root: string, p: string) {\n  const R = path.resolve(root) + path.sep;\n  const P = path.resolve(p);\n  return P.startsWith(R);\n}\n\nfunction getRoot(session: McpSession): string {\n  const root = session.di?.[\"workspaceRoot\"] as string | undefined;\n  if (!root) throw new Error(\"workspaceRoot not set on session.di\");\n  return root;\n}\n\nconst tools: McpTool[] = [\n  {\n    name: \"editor.openVirtual\",\n    description: \"Open a read-only virtual document with content.\",\n    schema: { content: \"string\", language: \"string?='markdown'\" },\n    async call(args) {\n      const { content, language = \"markdown\" } = (args as any) ?? {};\n      const doc = await vscode.workspace.openTextDocument({ content: String(content ?? \"\"), language });\n      await vscode.window.showTextDocument(doc, { preview: true });\n      return { ok: true };\n    },\n  },\n  {\n    name: \"editor.proposeEdits\",\n    description: \"Show a diff and ask the user to apply changes.\",\n    schema: { targetPath: \"string\", newContent: \"string\", title: \"string?='Agent: Proposed edits'\" },\n    async call(args, session) {\n      if (!session.scopes.includes(\"editor.apply\")) throw new Error(\"Missing scope: editor.apply\");\n      const root = getRoot(session);\n      const { targetPath, newContent, title = \"Agent: Proposed edits\" } = (args as any) ?? {};\n      const abs = path.isAbsolute(targetPath) ? targetPath : path.join(root, targetPath);\n      if (!within(root, abs)) throw new Error(\"Writes must stay in workspace.\");\n\n      const left = vscode.Uri.file(abs);\n      const right = vscode.Uri.parse(`untitled:${abs}.agent-preview`);\n      const orig = await vscode.workspace.openTextDocument(left);\n      await vscode.workspace.openTextDocument({ content: String(newContent ?? \"\"), language: orig.languageId });\n      await vscode.commands.executeCommand(\"vscode.diff\", left, right, title);\n\n      const choice = await vscode.window.showInformationMessage(\"Apply proposed edits?\", { modal: true }, \"Apply\", \"Cancel\");\n      if (choice !== \"Apply\") return { applied: false };\n\n      const edit = new vscode.WorkspaceEdit();\n      edit.replace(left, new vscode.Range(0, 0, Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER), String(newContent ?? \"\"));\n      const ok = await vscode.workspace.applyEdit(edit);\n      return { applied: ok };\n    },\n  },\n];\n\nconst resources: McpResource[] = [\n  {\n    name: \"editor.activeFile\",\n    description: \"Active editor file (path, languageId, selection or full text).\",\n    async read() {\n      const ed = vscode.window.activeTextEditor;\n      if (!ed) return null;\n      const { document, selection } = ed;\n      const text = selection?.isEmpty ? document.getText() : document.getText(selection);\n      return { path: document.uri.fsPath, languageId: document.languageId, text };\n    },\n  },\n  {\n    name: \"editor.selection\",\n    description: \"Selection offsets and text for the active editor.\",\n    async read() {\n      const ed = vscode.window.activeTextEditor;\n      if (!ed) return null;\n      const { document, selection } = ed;\n      return {\n        path: document.uri.fsPath,\n        start: document.offsetAt(selection.start),\n        end: document.offsetAt(selection.end),\n        text: document.getText(selection),\n      };\n    },\n  },\n];\n\nexport function createEditorServer(): McpServer {\n  return {\n    async listTools() { return tools; },\n    async listResources() { return resources; },\n  };\n}\n","// mcp/servers/fsServer.ts\nimport * as vscode from \"vscode\";\nimport * as path from \"node:path\";\nimport { McpServer, McpTool, McpResource, McpSession, Json } from \"../types\";\n\nfunction root(session: McpSession): string {\n  const r = session.di?.[\"workspaceRoot\"] as string | undefined;\n  if (!r) throw new Error(\"workspaceRoot not set on session.di\");\n  return path.resolve(r);\n}\nfunction toAbs(session: McpSession, p: string) {\n  const ws = root(session);\n  const abs = path.isAbsolute(p) ? p : path.join(ws, p);\n  const norm = path.resolve(abs);\n  const allowed = (norm + path.sep).startsWith(ws + path.sep) || norm === ws;\n  if (!allowed) throw new Error(\"Path escapes workspace.\");\n  return norm;\n}\n\nconst tools: McpTool[] = [\n  {\n    name: \"fs.readFile\",\n    description: \"Read a UTF-8 file inside the workspace.\",\n    schema: { path: \"string\" },\n    async call(args, session) {\n      const abs = toAbs(session, String((args as any)?.path ?? \"\"));\n      const buff = await vscode.workspace.fs.readFile(vscode.Uri.file(abs));\n      return { path: abs, text: Buffer.from(buff).toString(\"utf8\") };\n    },\n  },\n  {\n    name: \"fs.writeFile\",\n    description: \"Write a UTF-8 file inside the workspace (with confirm).\",\n    schema: { path: \"string\", content: \"string\" },\n    async call(args, session) {\n      if (!session.scopes.includes(\"fs.write\")) throw new Error(\"Missing scope: fs.write\");\n      const abs = toAbs(session, String((args as any)?.path ?? \"\"));\n      const content = String((args as any)?.content ?? \"\");\n      const ok = await vscode.window.showWarningMessage(`Write file?\\n${abs}`, { modal: true }, \"Write\");\n      if (ok !== \"Write\") return { ok: false, path: abs };\n      await vscode.workspace.fs.createDirectory(vscode.Uri.file(path.dirname(abs)));\n      await vscode.workspace.fs.writeFile(vscode.Uri.file(abs), Buffer.from(content, \"utf8\"));\n      return { ok: true, path: abs };\n    },\n  },\n  {\n    name: \"fs.readDir\",\n    description: \"List directory entries (name + kind).\",\n    schema: { dir: \"string\" },\n    async call(args, session) {\n      const abs = toAbs(session, String((args as any)?.dir ?? \"\"));\n      const items = await vscode.workspace.fs.readDirectory(vscode.Uri.file(abs));\n      return { dir: abs, items: items.map(([name, t]) => ({ name, type: t === vscode.FileType.Directory ? \"dir\" : \"file\" })) };\n    },\n  },\n  {\n    name: \"fs.find\",\n    description: \"Find files by glob (workspace relative).\",\n    schema: { glob: \"string\", maxResults: \"number?=100\" },\n    async call(args, session) {\n      const { glob = \"**/*\", maxResults = 100 } = (args as any) ?? {};\n      const files = await vscode.workspace.findFiles(String(glob), undefined, Number(maxResults));\n      return { files: files.map(u => u.fsPath) };\n    },\n  },\n];\n\nexport function createFsServer(): McpServer {\n  return {\n    async listTools() { return tools; },\n    async listResources() { return [] as McpResource[]; },\n  };\n}\n","// mcp/servers/uiServer.ts\nimport * as vscode from \"vscode\";\nimport { McpServer, McpTool, McpResource } from \"../types\";\n\nconst tools: McpTool[] = [\n  {\n    name: \"ui.info\",\n    description: \"Show info message with optional actions.\",\n    schema: { message: \"string\", actions: \"string[]?\" },\n    async call(args) {\n      const { message, actions } = (args as any) ?? {};\n      const choice = await vscode.window.showInformationMessage(String(message ?? \"\"), ...(actions ?? []));\n      return { choice: choice ?? null };\n    },\n  },\n  {\n    name: \"ui.warn\",\n    description: \"Show warning message.\",\n    schema: { message: \"string\", actions: \"string[]?\" },\n    async call(args) {\n      const { message, actions } = (args as any) ?? {};\n      const choice = await vscode.window.showWarningMessage(String(message ?? \"\"), ...(actions ?? []));\n      return { choice: choice ?? null };\n    },\n  },\n  {\n    name: \"ui.input\",\n    description: \"Prompt user for a string.\",\n    schema: { prompt: \"string\", placeHolder: \"string?=\" },\n    async call(args) {\n      const { prompt, placeHolder } = (args as any) ?? {};\n      const value = await vscode.window.showInputBox({ prompt: String(prompt ?? \"\"), placeHolder: placeHolder ? String(placeHolder) : undefined });\n      return { value: value ?? null };\n    },\n  },\n];\n\nexport function createUiServer(): McpServer {\n  return {\n    async listTools() { return tools; },\n    async listResources() { return [] as McpResource[]; },\n  };\n}\n","// src/extension.ts\nimport OpenAI from \"openai\";\nimport * as path from \"path\";\nimport { pathToFileURL } from \"url\";\nimport * as vscode from \"vscode\";\n\n// MCP types + compose + domain servers (from your ./lib/mcp)\nimport { McpSession, Json } from \"./lib/mcp/types\";            // or use the one from earlier\nimport { composeServers } from \"./lib/mcp/compose\";\nimport { McpClient } from \"./lib/mcp/client\";\nimport { createAiServer } from \"./lib/mcp/servers/ai-server\";\nimport { createEditorServer } from \"./lib/mcp/servers/editor-server\";\nimport { createFsServer } from \"./lib/mcp/servers/fs-server\";\nimport { createUiServer } from \"./lib/mcp/servers/ui-server\";\n// ---------- Helpers ----------\nfunction isAgentFile(relPath: string) {\n  return relPath.endsWith(\".agent.js\") || relPath.endsWith(\".agent.mjs\") || relPath.endsWith(\".agent.ts\");\n}\n\nfunction withinWorkspace(abs: string, root: string) {\n  const R = path.resolve(root) + path.sep;\n  const P = path.resolve(abs);\n  return P === path.resolve(root) || P.startsWith(R);\n}\n\nasync function ensureOpenAIKey(ctx: vscode.ExtensionContext, secretId = \"openai-api-key3\") {\n  let key = await ctx.secrets.get(secretId);\n  if (!key) {\n    const input = await vscode.window.showInputBox({\n      prompt: \"Enter your OpenAI API Key\",\n      ignoreFocusOut: true,\n      password: true,\n    });\n    if (!input) throw new Error(\"OpenAI API Key is required.\");\n    await ctx.secrets.store(secretId, input.trim());\n    key = input.trim();\n  }\n  return key!;\n}\n\n// Safe text-first AI facade (no raw client/key passed to agents)\nfunction createAIFacade(openai: OpenAI) {\n  return {\n    async generateText(input: string, opts?: { maxTokens?: number; model?: string; temperature?: number }) {\n      const resp = await openai.responses.create({\n        model: opts?.model ?? \"gpt-5-mini\",\n        input,\n        tool_choice: \"none\",\n        // Remove reasoning.effort or set to a valid value if required by API\n        max_output_tokens: Math.min(opts?.maxTokens ?? 600, 1200),\n        ...(typeof opts?.temperature === \"number\" ? { temperature: opts.temperature } : {}),\n      });\n\n      const text =\n        (resp as any).output_text?.trim() ||\n        (resp.output ?? [])\n          .flatMap((o: any) => (o.content ?? []).filter((c: any) => c.type === \"output_text\").map((c: any) => c.text))\n          .join(\"\");\n\n      if (!text) throw new Error(\"Empty model output\");\n      return text;\n    },\n    async generateImages(prompt: string, opts?: { count?: number; size?: string; model?: string }) {\n      // Uses OpenAI's images.generate endpoint\n      // Only allow valid sizes per OpenAI API\n      const allowedSizes = [\"auto\", \"512x512\", \"1024x1024\", \"1536x1024\", \"1024x1536\", \"256x256\", \"1792x1024\", \"1024x1792\"] as const;\n      type OpenAISize = typeof allowedSizes[number];\n      const requestedSize = opts?.size ?? \"512x512\";\n      const size: OpenAISize = allowedSizes.includes(requestedSize as OpenAISize)\n        ? (requestedSize as OpenAISize)\n        : \"512x512\";\n      const resp = await openai.images.generate({\n        prompt,\n        n: opts?.count ?? 1,\n        size,\n        model: opts?.model ?? \"dall-e-3\",\n      });\n      // Return array of image URLs\n      return (resp.data ?? []).map((img: any) => img.url);\n    },\n  } as const;\n}\n\n// ---------- Extension entry ----------\nexport async function activate(context: vscode.ExtensionContext) {\n  const runAgentDisposable = vscode.commands.registerCommand(\"vs-mcp.runAgent\", async (fileUri: vscode.Uri) => {\n    try {\n      if (!vscode.workspace.isTrusted) {\n        vscode.window.showWarningMessage(\"Trust this workspace to run agents.\");\n        return;\n      }\n      if (!fileUri || !fileUri.fsPath) {\n        vscode.window.showErrorMessage(\"No file selected.\");\n        return;\n      }\n\n      const ws = vscode.workspace.workspaceFolders?.[0]?.uri.fsPath ?? \"\";\n      if (!ws) {\n        vscode.window.showErrorMessage(\"Open a folder/workspace to run agents.\");\n        return;\n      }\n\n      const rel = vscode.workspace.asRelativePath(fileUri.fsPath, false);\n      if (!isAgentFile(rel)) {\n        vscode.window.showErrorMessage(\"Only *.agent.{ts,js,mjs} files can be run as agents.\");\n        return;\n      }\n\n      const abs = path.resolve(fileUri.fsPath);\n      if (!withinWorkspace(abs, ws)) {\n        vscode.window.showErrorMessage(\"Agent file must be within the current workspace.\");\n        return;\n      }\n\n      const confirm = await vscode.window.showWarningMessage(\n        `Run agent:\\n${rel}\\n\\nThis executes code in the extension host.`,\n        { modal: true },\n        \"Run\"\n      );\n      if (confirm !== \"Run\") return;\n\n      // --- OpenAI key + client\n      const apiKey = await ensureOpenAIKey(context, \"openai-api-key3\");\n      const openai = new OpenAI({ apiKey });\n\n      // --- Build MCP servers (from ./lib/mcp/*-server.ts)\n      const server = composeServers(\n        createAiServer(),\n        createEditorServer(),\n        createFsServer(),\n        createUiServer()\n      );\n\n      // --- Session DI + scopes\n      const session: McpSession = {\n        scopes: [\"ai.generate\", \"editor.apply\", \"fs.write\"], // grant least privilege\n        tags: { source: \"vscode-extension\" },\n        now: () => Date.now(),\n        di: {\n          ai: createAIFacade(openai),   // secrets stay inside facade\n          workspaceRoot: ws,\n        },\n      };\n\n      const mcp = new McpClient(server, session);\n\n      // --- Import agent module safely (cache-bust URL for dev)\n      const modUrl = pathToFileURL(abs).toString() + `?t=${Date.now()}`;\n      const importedModule = await import(modUrl);\n      if (!importedModule?.default || typeof importedModule.default !== \"function\") {\n        throw new Error(\"No default export function found in the agent module.\");\n      }\n\n      // --- Run the agent with ONLY the MCP client\n      await importedModule.default({ mcp });\n\n    } catch (err: any) {\n      console.error(\"vs-mcp.runAgent error:\", err);\n      vscode.window.showErrorMessage(err?.message ?? String(err));\n    }\n  });\n\n  context.subscriptions.push(runAgentDisposable);\n}\n\nexport function deactivate() {\n  console.log(\"AI Extension deactivated\");\n}\n"],"names":["crypto","_a","str","parseResponse","Page","client","fetch","path","isAutoParsableTool","hasAutoParseableInput","parseToolCall","inputTool","tools","_EventStream_handleError","content","name","_AbstractChatCompletionRunner_getFinalContent","_AbstractChatCompletionRunner_getFinalMessage","_AbstractChatCompletionRunner_getFinalFunctionToolCall","_AbstractChatCompletionRunner_getFinalFunctionToolCallResult","_AbstractChatCompletionRunner_calculateTotalUsage","_AbstractChatCompletionRunner_validateParams","_AbstractChatCompletionRunner_stringifyFunctionCallResult","escape","e","_ChatCompletionStream_beginRequest","_ChatCompletionStream_getChoiceEventState","_ChatCompletionStream_addChunk","_ChatCompletionStream_emitToolCallDoneEvent","_ChatCompletionStream_emitContentDoneEvents","_ChatCompletionStream_endRequest","_ChatCompletionStream_getAutoParseableResponseFormat","_ChatCompletionStream_accumulateChatCompletion","refusal","rest","index","chunk","id","MessagesAPI.Messages","Completions","Messages","CompletionsAPI.Completions","TranscriptionsAPI.Transcriptions","TranslationsAPI.Translations","SpeechAPI.Speech","SessionsAPI.Sessions","TranscriptionSessionsAPI.TranscriptionSessions","Realtime","_AssistantStream_addEvent","_AssistantStream_endRequest","_AssistantStream_handleMessage","_AssistantStream_handleRunStep","_AssistantStream_handleEvent","_AssistantStream_accumulateRunStep","_AssistantStream_accumulateMessage","_AssistantStream_accumulateContent","_AssistantStream_handleRun","StepsAPI.Steps","Runs","RunsAPI.Runs","RealtimeAPI.Realtime","AssistantsAPI.Assistants","ThreadsAPI.Threads","ContentAPI.Content","Files","FilesAPI.Files","ItemsAPI.Items","response","OutputItemsAPI.OutputItems","GradersAPI.Graders","Graders","PermissionsAPI.Permissions","Checkpoints","CheckpointsAPI.Checkpoints","MethodsAPI.Methods","JobsAPI.Jobs","AlphaAPI.Alpha","GraderModelsAPI.GraderModels","ClientSecretsAPI.ClientSecrets","output","_ResponseStream_beginRequest","_ResponseStream_addEvent","event","_ResponseStream_endRequest","_ResponseStream_accumulateResponse","InputItemsAPI.InputItems","PartsAPI.Parts","FileBatchesAPI.FileBatches","_Webhooks_validateSecret","_Webhooks_getRequiredHeader","API.Completions","API.Chat","API.Embeddings","API.Files","API.Images","API.Audio","API.Moderations","API.Models","API.FineTuning","API.Graders","API.VectorStores","API.Webhooks","API.Beta","API.Batches","API.Uploads","API.Responses","API.Realtime","API.Conversations","API.Evals","API.Containers","Errors.OpenAIError","Shims.getDefaultFetch","Opts.FallbackEncoder","qs.stringify","Errors.APIError","opts","Errors.APIUserAbortError","Errors.APIConnectionTimeoutError","Errors.APIConnectionError","retryMessage","Shims.CancelReadableStream","err","Pagination.PagePromise","Shims.ReadableStreamFrom","_OpenAI_baseURLOverridden","Errors.NotFoundError","Errors.ConflictError","Errors.RateLimitError","Errors.BadRequestError","Errors.AuthenticationError","Errors.InternalServerError","Errors.PermissionDeniedError","Errors.UnprocessableEntityError","Errors.InvalidWebhookSignatureError","Uploads.toFile","UploadsAPIUploads","resources","root"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91]}