name: Build and Release Extension

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    if: |
      contains(github.event.head_commit.message, 'Merge pull request') &&
      contains(github.event.head_commit.message, 'release/v-')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build MCP server
        run: npm run build:server

      - name: Build React webview
        run: npm run build:webview

      - name: Build extension
        run: npm run build

      - name: Package extension
        run: npm run package

      - name: Extract version from branch name
        id: extract_version
        run: |
          RAW_VERSION=$(echo "${{ github.event.head_commit.message }}" | grep -oE 'release/v-[0-9]+\.[0-9]+\.[0-9]+' | head -1 | sed 's/release\///')
          VERSION=$(echo "$RAW_VERSION" | sed 's/^v-//')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Update package.json version
        run: |
          npm version ${{ steps.extract_version.outputs.version }} --no-git-tag-version
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add package.json
          git commit -m "chore: update package.json version to ${{ steps.extract_version.outputs.version }}"
          git push

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.extract_version.outputs.version }}
          name: Release ${{ steps.extract_version.outputs.version }}
          files: |
            packages/vsmcp-${{ steps.extract_version.outputs.version }}.vsix
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
